// <ppj name="Moveta.Intern" date="1/29/2024 3:39:48 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using System.Runtime.InteropServices;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public class AX_ShellBrowser_JamFolderCombo : SalActiveX
	{
		
		/// <summary>
		/// This is the real COM object class.
		/// </summary>
		internal ShellBrowser_JamFolderCombo _CoClass = new ShellBrowser_JamFolderCombo();
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public AX_ShellBrowser_JamFolderCombo(): base("{0F8D8959-539E-4106-BC6A-1CC9B5AC0B70}")
		{
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region Windows Form Designer generated code
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			// 
			// AX_ShellBrowser_JamFolderCombo
			// 
			this.Name = "AX_ShellBrowser_JamFolderCombo";
			this.Size = new System.Drawing.Size(72, 21);
			this.TabStop = false;
		}
		#endregion
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean DeleteSelected()
		{
			using (new SalContext(this))
			{
				return _CoClass.DeleteSelected();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetFontByRef(stdole_Font rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetFontByRef(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetMaxLength(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetMaxLength(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetMaxLength(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetMaxLength(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetItemHeight(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetItemHeight(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetItemHeight(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetItemHeight(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetVersion(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetVersion(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetVersion(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetVersion(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetIncludeDrives(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetIncludeDrives(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetIncludeDrives(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetIncludeDrives(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean SelectAll()
		{
			using (new SalContext(this))
			{
				return _CoClass.SelectAll();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetSorted(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetSorted(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetSorted(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetSorted(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetEnabled(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetEnabled(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetEnabled(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetEnabled(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetText(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetText(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetText(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetText(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Path"></param>
		/// <param name="Indent"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean AddFolder(SalString Path, SalNumber Indent, ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.AddFolder(Path, Indent, ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetColor(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetColor(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetColor(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetColor(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetDropDownCount(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetDropDownCount(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetDropDownCount(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetDropDownCount(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetIncludeMyDocuments(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetIncludeMyDocuments(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean Clear()
		{
			using (new SalContext(this))
			{
				return _CoClass.Clear();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetIncludeRemovableDrives(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetIncludeRemovableDrives(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean ClearSelection()
		{
			using (new SalContext(this))
			{
				return _CoClass.ClearSelection();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetIncludeRemovableDrives(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetIncludeRemovableDrives(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetUseSystemFont(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetUseSystemFont(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetUseSystemFont(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetUseSystemFont(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetAutomaticRefresh(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetAutomaticRefresh(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetAutomaticRefresh(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetAutomaticRefresh(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetSelectedFolder(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetSelectedFolder(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="aFolder"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean SelectFolder(SalString aFolder, ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.SelectFolder(aFolder, ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetFont(stdole_Font returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetFont(returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetFont(stdole_Font rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetFont(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetIncludeMyDocuments(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetIncludeMyDocuments(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetSelectedFolder(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetSelectedFolder(rhs);
			}
		}
		
		#region System Methods/Properties
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public new static AX_ShellBrowser_JamFolderCombo FromHandle(SalWindowHandle handle)
		{
			return ((AX_ShellBrowser_JamFolderCombo)SalWindow.FromHandle(handle, typeof(AX_ShellBrowser_JamFolderCombo)));
		}
		#endregion
	}
}
