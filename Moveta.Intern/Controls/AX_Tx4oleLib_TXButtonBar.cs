// <ppj name="Moveta.Intern" date="1/29/2024 3:39:48 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using System.Runtime.InteropServices;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	[ComSourceInterfaces(typeof(AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents))]
	public class AX_Tx4oleLib_TXButtonBar : SalActiveX, AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents
	{
		
		/// <summary>
		/// This is the real COM object class.
		/// </summary>
		internal Tx4oleLib_TXButtonBar _CoClass = new Tx4oleLib_TXButtonBar();
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public AX_Tx4oleLib_TXButtonBar(): base("{26BD9909-E7D0-11DD-AA41-0013D350667C}")
		{
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		public event ChangeEventHandler Change;
		public event DblClickEventHandler DblClick;
		public event HScrollEventHandler HScroll;
		public event VScrollEventHandler VScroll;
		public event PosChangeEventHandler PosChange;
		public event MoveEventHandler Move;
		public event SizeEventHandler SizeEvent;
		public event KeyDownEventHandler KeyDown;
		public event KeyPressEventHandler KeyPress;
		public event KeyUpEventHandler KeyUp;
		public event MouseDownEventHandler MouseDown;
		public event MouseMoveEventHandler MouseMove;
		public event MouseUpEventHandler MouseUp;
		public event FieldChangedEventHandler FieldChanged;
		public event FieldClickedEventHandler FieldClicked;
		public event FieldCreatedEventHandler FieldCreated;
		public event FieldDblClickedEventHandler FieldDblClicked;
		public event FieldDeletedEventHandler FieldDeleted;
		public event FieldSetCursorEventHandler FieldSetCursor;
		public event ObjectClickedEventHandler ObjectClicked;
		public event ObjectMovedEventHandler ObjectMoved;
		public event ObjectSizedEventHandler ObjectSized;
		public event ClickEventHandler Click;
		public event ObjectDblClickedEventHandler ObjectDblClicked;
		public event ErrorEventHandler Error;
		public event ObjectDeletedEventHandler ObjectDeleted;
		public event ObjectCreatedEventHandler ObjectCreated;
		public event ConnectToolsEventHandler ConnectTools;
		public event ObjectSetZoomEventHandler ObjectSetZoom;
		public event ObjectGetZoomEventHandler ObjectGetZoom;
		public event ObjectPrintEventHandler ObjectPrint;
		public event ObjectGetDataEventHandler ObjectGetData;
		public event ObjectSetDataEventHandler ObjectSetData;
		public event ObjectGethWndEventHandler ObjectGethWnd;
		public event ObjectScrollOutEventHandler ObjectScrollOut;
		public event AutoLinkEventHandler AutoLink;
		public event FieldEnteredEventHandler FieldEntered;
		public event FieldLeftEventHandler FieldLeft;
		public event HExpandEventHandler HExpand;
		public event VExpandEventHandler VExpand;
		public event ZoomedEventHandler Zoomed;
		public event CharFormatChangeEventHandler CharFormatChange;
		public event PageFormatChangeEventHandler PageFormatChange;
		public event ParagraphChangeEventHandler ParagraphChange;
		public event ParagraphFormatChangeEventHandler ParagraphFormatChange;
		public event CaretOutEventHandler CaretOut;
		public event CaretOutLeftEventHandler CaretOutLeft;
		public event CaretOutTopEventHandler CaretOutTop;
		public event CaretOutRightEventHandler CaretOutRight;
		public event CaretOutBottomEventHandler CaretOutBottom;
		public event AutoScrollEventHandler AutoScroll;
		public event KeyStateChangeEventHandler KeyStateChange;
		public event ViewClickedEventHandler ViewClicked;
		public event ViewWordDblClickedEventHandler ViewWordDblClicked;
		public event TableCreatedEventHandler TableCreated;
		public event TableDeletedEventHandler TableDeleted;
		public event HeaderFooterActivatedEventHandler HeaderFooterActivated;
		public event HeaderFooterDeactivatedEventHandler HeaderFooterDeactivated;
		public event FieldLinkClickedEventHandler FieldLinkClicked;
		public event StyleListChangedEventHandler StyleListChanged;
		public event StyleChangedEventHandler StyleChanged;
		public event TableFormatChangedEventHandler TableFormatChanged;
		public event XMLNotWellFormedEventHandler XMLNotWellFormed;
		public event XMLInvalidEventHandler XMLInvalid;
		public event ObjectRightClickedEventHandler ObjectRightClicked;
		public event TextFrameActivatedEventHandler TextFrameActivated;
		public event TextFrameDeactivatedEventHandler TextFrameDeactivated;
		public event PageChangedEventHandler PageChanged;
		public event SectionChangedEventHandler SectionChanged;
		
		#region Windows Form Designer generated code
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			// 
			// AX_Tx4oleLib_TXButtonBar
			// 
			this.Name = "AX_Tx4oleLib_TXButtonBar";
			this.Size = new System.Drawing.Size(72, 21);
			this.TabStop = false;
		}
		#endregion
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosListNumbered(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosListNumbered(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosStyle"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosStyle(SalNumber PosStyle)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosStyle(PosStyle);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosStyle(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosStyle(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosTabDecimal"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosTabDecimal(SalNumber PosTabDecimal)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosTabDecimal(PosTabDecimal);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosTabDecimal(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosTabDecimal(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosTabCentered(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosTabCentered(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosListStructured"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosListStructured(SalNumber PosListStructured)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosListStructured(PosListStructured);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetEnabled(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetEnabled(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Enabled"></param>
		/// <returns></returns>
		public SalBoolean PropSetEnabled(SalBoolean Enabled)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetEnabled(Enabled);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosFontBold"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosFontBold(SalNumber PosFontBold)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosFontBold(PosFontBold);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosTabCentered"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosTabCentered(SalNumber PosTabCentered)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosTabCentered(PosTabCentered);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosFontBold(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosFontBold(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Appearance">Important: this is one of the Tx4oleLib_AppearanceStyles constants</param>
		/// <returns></returns>
		public SalBoolean PropSetAppearance(SalNumber Appearance)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetAppearance(Appearance);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the Tx4oleLib_AppearanceStyles constants</param>
		/// <returns></returns>
		public SalBoolean PropGetAppearance(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetAppearance(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosXMLAdd(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosXMLAdd(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosXMLAdd"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosXMLAdd(SalNumber PosXMLAdd)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosXMLAdd(PosXMLAdd);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosFontName"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosFontName(SalNumber PosFontName)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosFontName(PosFontName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosFontName(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosFontName(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the Tx4oleLib_AppearanceStyles constants</param>
		/// <returns></returns>
		public SalBoolean PropGetStyle(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetStyle(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Style">Important: this is one of the Tx4oleLib_AppearanceStyles constants</param>
		/// <returns></returns>
		public SalBoolean PropSetStyle(SalNumber Style)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetStyle(Style);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosListStructured(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosListStructured(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosXMLRemove(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosXMLRemove(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosXMLRemove"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosXMLRemove(SalNumber PosXMLRemove)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosXMLRemove(PosXMLRemove);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosControlChars"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosControlChars(SalNumber PosControlChars)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosControlChars(PosControlChars);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosParaRight"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosParaRight(SalNumber PosParaRight)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosParaRight(PosParaRight);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosParaRight(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosParaRight(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosParaJustified"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosParaJustified(SalNumber PosParaJustified)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosParaJustified(PosParaJustified);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean AboutBox()
		{
			using (new SalContext(this))
			{
				return _CoClass.AboutBox();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosParaJustified(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosParaJustified(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosParaLeft"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosParaLeft(SalNumber PosParaLeft)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosParaLeft(PosParaLeft);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosParaLeft(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosParaLeft(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosZoom"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosZoom(SalNumber PosZoom)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosZoom(PosZoom);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosZoom(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosZoom(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosControlChars(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosControlChars(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosFontSize"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosFontSize(SalNumber PosFontSize)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosFontSize(PosFontSize);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosFontSize(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosFontSize(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosListBulleted"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosListBulleted(SalNumber PosListBulleted)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosListBulleted(PosListBulleted);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosTabLeft"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosTabLeft(SalNumber PosTabLeft)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosTabLeft(PosTabLeft);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosTabLeft(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosTabLeft(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosListBulleted(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosListBulleted(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosTabRight(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosTabRight(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosTabRight"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosTabRight(SalNumber PosTabRight)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosTabRight(PosTabRight);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosFontUnderline"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosFontUnderline(SalNumber PosFontUnderline)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosFontUnderline(PosFontUnderline);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosParaCentered"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosParaCentered(SalNumber PosParaCentered)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosParaCentered(PosParaCentered);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGethWnd(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGethWnd(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hWnd"></param>
		/// <returns></returns>
		public SalBoolean PropSethWnd(SalNumber hWnd)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSethWnd(hWnd);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosParaCentered(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosParaCentered(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosFontItalic"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosFontItalic(SalNumber PosFontItalic)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosFontItalic(PosFontItalic);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosFontItalic(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosFontItalic(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Language"></param>
		/// <returns></returns>
		public SalBoolean PropSetLanguage(SalNumber Language)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetLanguage(Language);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetLanguage(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetLanguage(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosTabSelect(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosTabSelect(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPosFontUnderline(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPosFontUnderline(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosTabSelect"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosTabSelect(SalNumber PosTabSelect)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosTabSelect(PosTabSelect);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PosListNumbered"></param>
		/// <returns></returns>
		public SalBoolean PropSetPosListNumbered(SalNumber PosListNumbered)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPosListNumbered(PosListNumbered);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetResourceFile(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetResourceFile(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="ResourceFile"></param>
		/// <returns></returns>
		public SalBoolean PropSetResourceFile(SalString ResourceFile)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetResourceFile(ResourceFile);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="BorderStyle"></param>
		/// <returns></returns>
		public SalBoolean PropSetBorderStyle(SalNumber BorderStyle)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetBorderStyle(BorderStyle);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetBorderStyle(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetBorderStyle(ref returnValue);
			}
		}
		
		#region AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents Implementation
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.Change()
		{
			if (Change != null)
			{
				Change();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.DblClick()
		{
			if (DblClick != null)
			{
				DblClick();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.HScroll()
		{
			if (HScroll != null)
			{
				HScroll();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.VScroll()
		{
			if (VScroll != null)
			{
				VScroll();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.PosChange()
		{
			if (PosChange != null)
			{
				PosChange();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.Move()
		{
			if (Move != null)
			{
				Move();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.Size()
		{
			if (SizeEvent != null)
			{
				SizeEvent();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.KeyDown(ref short KeyCode, ref short Shift)
		{
			if (KeyDown != null)
			{
				KeyDown(ref KeyCode, ref Shift);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.KeyPress(ref short KeyAscii)
		{
			if (KeyPress != null)
			{
				KeyPress(ref KeyAscii);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.KeyUp(ref short KeyCode, ref short Shift)
		{
			if (KeyUp != null)
			{
				KeyUp(ref KeyCode, ref Shift);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.MouseDown(ref short Button, ref short Shift, ref int X, ref int Y)
		{
			if (MouseDown != null)
			{
				MouseDown(ref Button, ref Shift, ref X, ref Y);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.MouseMove(ref short Button, ref short Shift, ref int X, ref int Y)
		{
			if (MouseMove != null)
			{
				MouseMove(ref Button, ref Shift, ref X, ref Y);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.MouseUp(ref short Button, ref short Shift, ref int X, ref int Y)
		{
			if (MouseUp != null)
			{
				MouseUp(ref Button, ref Shift, ref X, ref Y);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldChanged(ref short FieldId)
		{
			if (FieldChanged != null)
			{
				FieldChanged(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldClicked(ref short FieldId)
		{
			if (FieldClicked != null)
			{
				FieldClicked(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldCreated(ref short FieldId)
		{
			if (FieldCreated != null)
			{
				FieldCreated(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldDblClicked(ref short FieldId)
		{
			if (FieldDblClicked != null)
			{
				FieldDblClicked(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldDeleted(ref short FieldId)
		{
			if (FieldDeleted != null)
			{
				FieldDeleted(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldSetCursor(ref short FieldId, ref short MousePointer)
		{
			if (FieldSetCursor != null)
			{
				FieldSetCursor(ref FieldId, ref MousePointer);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectClicked(ref short ObjectId)
		{
			if (ObjectClicked != null)
			{
				ObjectClicked(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectMoved(ref short ObjectId)
		{
			if (ObjectMoved != null)
			{
				ObjectMoved(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectSized(ref short ObjectId)
		{
			if (ObjectSized != null)
			{
				ObjectSized(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.Click()
		{
			if (Click != null)
			{
				Click();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectDblClicked(ref short ObjectId)
		{
			if (ObjectDblClicked != null)
			{
				ObjectDblClicked(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.Error(ref short Number, ref string Description, ref int Scode, ref string Source, ref string HelpFile, ref int HelpContext, ref bool CancelDisplay)
		{
			if (Error != null)
			{
				Error(ref Number, ref Description, ref Scode, ref Source, ref HelpFile, ref HelpContext, ref CancelDisplay);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectDeleted(ref short ObjectId)
		{
			if (ObjectDeleted != null)
			{
				ObjectDeleted(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectCreated(ref short ObjectId)
		{
			if (ObjectCreated != null)
			{
				ObjectCreated(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ConnectTools()
		{
			if (ConnectTools != null)
			{
				ConnectTools();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectSetZoom(ref short ObjectId, ref short ZoomFactor, ref bool Processed)
		{
			if (ObjectSetZoom != null)
			{
				ObjectSetZoom(ref ObjectId, ref ZoomFactor, ref Processed);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectGetZoom(ref short ObjectId, ref short ZoomFactor)
		{
			if (ObjectGetZoom != null)
			{
				ObjectGetZoom(ref ObjectId, ref ZoomFactor);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectPrint(ref short ObjectId, ref int Device, ref int Left, ref int Top, ref int Right, ref int Bottom, ref bool Processed)
		{
			if (ObjectPrint != null)
			{
				ObjectPrint(ref ObjectId, ref Device, ref Left, ref Top, ref Right, ref Bottom, ref Processed);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectGetData(ref short ObjectId, object ObjectData)
		{
			if (ObjectGetData != null)
			{
				//FC:CHECK: Check if this is correct
				//Tx4oleLib_Object ObjectData_ = new Tx4oleLib_Object(ObjectData);
				object ObjectData_ = new object();
				ObjectGetData(ref ObjectId, ObjectData_);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectSetData(ref short ObjectId, object ObjectData)
		{
			if (ObjectSetData != null)
			{
				//FC:CHECK: Check if this is correct
				//Tx4oleLib_Object ObjectData_ = new Tx4oleLib_Object(ObjectData);
				object ObjectData_ = new object();
				ObjectSetData(ref ObjectId, ObjectData_);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectGethWnd(ref short ObjectId, ref short KindOfObject, ref int hWnd)
		{
			if (ObjectGethWnd != null)
			{
				ObjectGethWnd(ref ObjectId, ref KindOfObject, ref hWnd);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectScrollOut(ref short ObjectId)
		{
			if (ObjectScrollOut != null)
			{
				ObjectScrollOut(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.AutoLink()
		{
			if (AutoLink != null)
			{
				AutoLink();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldEntered(ref short FieldId)
		{
			if (FieldEntered != null)
			{
				FieldEntered(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldLeft(ref short FieldId)
		{
			if (FieldLeft != null)
			{
				FieldLeft(ref FieldId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.HExpand()
		{
			if (HExpand != null)
			{
				HExpand();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.VExpand()
		{
			if (VExpand != null)
			{
				VExpand();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.Zoomed()
		{
			if (Zoomed != null)
			{
				Zoomed();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.CharFormatChange()
		{
			if (CharFormatChange != null)
			{
				CharFormatChange();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.PageFormatChange()
		{
			if (PageFormatChange != null)
			{
				PageFormatChange();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ParagraphChange()
		{
			if (ParagraphChange != null)
			{
				ParagraphChange();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ParagraphFormatChange()
		{
			if (ParagraphFormatChange != null)
			{
				ParagraphFormatChange();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.CaretOut()
		{
			if (CaretOut != null)
			{
				CaretOut();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.CaretOutLeft()
		{
			if (CaretOutLeft != null)
			{
				CaretOutLeft();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.CaretOutTop()
		{
			if (CaretOutTop != null)
			{
				CaretOutTop();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.CaretOutRight()
		{
			if (CaretOutRight != null)
			{
				CaretOutRight();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.CaretOutBottom()
		{
			if (CaretOutBottom != null)
			{
				CaretOutBottom();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.AutoScroll()
		{
			if (AutoScroll != null)
			{
				AutoScroll();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.KeyStateChange()
		{
			if (KeyStateChange != null)
			{
				KeyStateChange();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ViewClicked(ref short FieldType, ref string FieldContents)
		{
			if (ViewClicked != null)
			{
				ViewClicked(ref FieldType, ref FieldContents);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ViewWordDblClicked(ref string SelectedText)
		{
			if (ViewWordDblClicked != null)
			{
				ViewWordDblClicked(ref SelectedText);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.TableCreated(ref short TableId, ref short NewTableId)
		{
			if (TableCreated != null)
			{
				TableCreated(ref TableId, ref NewTableId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.TableDeleted(ref short TableId)
		{
			if (TableDeleted != null)
			{
				TableDeleted(ref TableId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.HeaderFooterActivated(ref short HeaderFooter)
		{
			if (HeaderFooterActivated != null)
			{
				HeaderFooterActivated(ref HeaderFooter);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.HeaderFooterDeactivated(ref short HeaderFooter)
		{
			if (HeaderFooterDeactivated != null)
			{
				HeaderFooterDeactivated(ref HeaderFooter);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.FieldLinkClicked(ref short FieldId, ref short FieldType, ref string TypeData)
		{
			if (FieldLinkClicked != null)
			{
				FieldLinkClicked(ref FieldId, ref FieldType, ref TypeData);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.StyleListChanged()
		{
			if (StyleListChanged != null)
			{
				StyleListChanged();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.StyleChanged()
		{
			if (StyleChanged != null)
			{
				StyleChanged();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.TableFormatChanged()
		{
			if (TableFormatChanged != null)
			{
				TableFormatChanged();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.XMLNotWellFormed(ref int FilePos, ref int LineNumber, ref int LinePos, ref int Scode, ref string Description, ref string URL, ref bool CancelDisplay)
		{
			if (XMLNotWellFormed != null)
			{
				XMLNotWellFormed(ref FilePos, ref LineNumber, ref LinePos, ref Scode, ref Description, ref URL, ref CancelDisplay);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.XMLInvalid(ref int FilePos, ref int Scode, ref string Description, ref bool CancelDisplay)
		{
			if (XMLInvalid != null)
			{
				XMLInvalid(ref FilePos, ref Scode, ref Description, ref CancelDisplay);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.ObjectRightClicked(ref short ObjectId)
		{
			if (ObjectRightClicked != null)
			{
				ObjectRightClicked(ref ObjectId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.TextFrameActivated(ref short TextFrameId)
		{
			if (TextFrameActivated != null)
			{
				TextFrameActivated(ref TextFrameId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.TextFrameDeactivated(ref short TextFrameId)
		{
			if (TextFrameDeactivated != null)
			{
				TextFrameDeactivated(ref TextFrameId);
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.PageChanged()
		{
			if (PageChanged != null)
			{
				PageChanged();
			}
		}
		void AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents.SectionChanged()
		{
			if (SectionChanged != null)
			{
				SectionChanged();
			}
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public new static AX_Tx4oleLib_TXButtonBar FromHandle(SalWindowHandle handle)
		{
			return ((AX_Tx4oleLib_TXButtonBar)SalWindow.FromHandle(handle, typeof(AX_Tx4oleLib_TXButtonBar)));
		}
		#endregion
		
		public delegate void ChangeEventHandler();
		
		public delegate void DblClickEventHandler();
		
		public delegate void HScrollEventHandler();
		
		public delegate void VScrollEventHandler();
		
		public delegate void PosChangeEventHandler();
		
		public delegate void MoveEventHandler();
		
		public delegate void SizeEventHandler();
		
		public delegate void KeyDownEventHandler(ref short KeyCode, ref short Shift);
		
		public delegate void KeyPressEventHandler(ref short KeyAscii);
		
		public delegate void KeyUpEventHandler(ref short KeyCode, ref short Shift);
		
		public delegate void MouseDownEventHandler(ref short Button, ref short Shift, ref int X, ref int Y);
		
		public delegate void MouseMoveEventHandler(ref short Button, ref short Shift, ref int X, ref int Y);
		
		public delegate void MouseUpEventHandler(ref short Button, ref short Shift, ref int X, ref int Y);
		
		public delegate void FieldChangedEventHandler(ref short FieldId);
		
		public delegate void FieldClickedEventHandler(ref short FieldId);
		
		public delegate void FieldCreatedEventHandler(ref short FieldId);
		
		public delegate void FieldDblClickedEventHandler(ref short FieldId);
		
		public delegate void FieldDeletedEventHandler(ref short FieldId);
		
		public delegate void FieldSetCursorEventHandler(ref short FieldId, ref short MousePointer);
		
		public delegate void ObjectClickedEventHandler(ref short ObjectId);
		
		public delegate void ObjectMovedEventHandler(ref short ObjectId);
		
		public delegate void ObjectSizedEventHandler(ref short ObjectId);
		
		public delegate void ClickEventHandler();
		
		public delegate void ObjectDblClickedEventHandler(ref short ObjectId);
		
		public delegate void ErrorEventHandler(ref short Number, ref string Description, ref int Scode, ref string Source, ref string HelpFile, ref int HelpContext, ref bool CancelDisplay);
		
		public delegate void ObjectDeletedEventHandler(ref short ObjectId);
		
		public delegate void ObjectCreatedEventHandler(ref short ObjectId);
		
		public delegate void ConnectToolsEventHandler();
		
		public delegate void ObjectSetZoomEventHandler(ref short ObjectId, ref short ZoomFactor, ref bool Processed);
		
		public delegate void ObjectGetZoomEventHandler(ref short ObjectId, ref short ZoomFactor);
		
		public delegate void ObjectPrintEventHandler(ref short ObjectId, ref int Device, ref int Left, ref int Top, ref int Right, ref int Bottom, ref bool Processed);
        //FC:CHECK: Check if this is correct Tx4oleLib_Object.ObjectData
        public delegate void ObjectGetDataEventHandler(ref short ObjectId, object ObjectData);
        //FC:CHECK: Check if this is correct Tx4oleLib_Object.ObjectData
        public delegate void ObjectSetDataEventHandler(ref short ObjectId, object ObjectData);
		
		public delegate void ObjectGethWndEventHandler(ref short ObjectId, ref short KindOfObject, ref int hWnd);
		
		public delegate void ObjectScrollOutEventHandler(ref short ObjectId);
		
		public delegate void AutoLinkEventHandler();
		
		public delegate void FieldEnteredEventHandler(ref short FieldId);
		
		public delegate void FieldLeftEventHandler(ref short FieldId);
		
		public delegate void HExpandEventHandler();
		
		public delegate void VExpandEventHandler();
		
		public delegate void ZoomedEventHandler();
		
		public delegate void CharFormatChangeEventHandler();
		
		public delegate void PageFormatChangeEventHandler();
		
		public delegate void ParagraphChangeEventHandler();
		
		public delegate void ParagraphFormatChangeEventHandler();
		
		public delegate void CaretOutEventHandler();
		
		public delegate void CaretOutLeftEventHandler();
		
		public delegate void CaretOutTopEventHandler();
		
		public delegate void CaretOutRightEventHandler();
		
		public delegate void CaretOutBottomEventHandler();
		
		public delegate void AutoScrollEventHandler();
		
		public delegate void KeyStateChangeEventHandler();
		
		public delegate void ViewClickedEventHandler(ref short FieldType, ref string FieldContents);
		
		public delegate void ViewWordDblClickedEventHandler(ref string SelectedText);
		
		public delegate void TableCreatedEventHandler(ref short TableId, ref short NewTableId);
		
		public delegate void TableDeletedEventHandler(ref short TableId);
		
		public delegate void HeaderFooterActivatedEventHandler(ref short HeaderFooter);
		
		public delegate void HeaderFooterDeactivatedEventHandler(ref short HeaderFooter);
		
		public delegate void FieldLinkClickedEventHandler(ref short FieldId, ref short FieldType, ref string TypeData);
		
		public delegate void StyleListChangedEventHandler();
		
		public delegate void StyleChangedEventHandler();
		
		public delegate void TableFormatChangedEventHandler();
		
		public delegate void XMLNotWellFormedEventHandler(ref int FilePos, ref int LineNumber, ref int LinePos, ref int Scode, ref string Description, ref string URL, ref bool CancelDisplay);
		
		public delegate void XMLInvalidEventHandler(ref int FilePos, ref int Scode, ref string Description, ref bool CancelDisplay);
		
		public delegate void ObjectRightClickedEventHandler(ref short ObjectId);
		
		public delegate void TextFrameActivatedEventHandler(ref short TextFrameId);
		
		public delegate void TextFrameDeactivatedEventHandler(ref short TextFrameId);
		
		public delegate void PageChangedEventHandler();
		
		public delegate void SectionChangedEventHandler();
	}
	
	[ComImport]
	[Guid("26BD9908-E7D0-11DD-AA41-0013D350667C")]
	[InterfaceType(ComInterfaceType.InterfaceIsIDispatch)]
	public interface AX_Tx4oleLib_TXButtonBar__DTX4OLEEvents
	{
		[DispId(1)] void Change();
		[DispId(2)] void DblClick();
		[DispId(3)] void HScroll();
		[DispId(4)] void VScroll();
		[DispId(5)] void PosChange();
		[DispId(6)] void Move();
		[DispId(7)] void Size();
		[DispId(-602)] void KeyDown(ref short KeyCode, ref short Shift);
		[DispId(-603)] void KeyPress(ref short KeyAscii);
		[DispId(-604)] void KeyUp(ref short KeyCode, ref short Shift);
		[DispId(-605)] void MouseDown(ref short Button, ref short Shift, ref int X, ref int Y);
		[DispId(-606)] void MouseMove(ref short Button, ref short Shift, ref int X, ref int Y);
		[DispId(-607)] void MouseUp(ref short Button, ref short Shift, ref int X, ref int Y);
		[DispId(8)] void FieldChanged(ref short FieldId);
		[DispId(9)] void FieldClicked(ref short FieldId);
		[DispId(10)] void FieldCreated(ref short FieldId);
		[DispId(11)] void FieldDblClicked(ref short FieldId);
		[DispId(12)] void FieldDeleted(ref short FieldId);
		[DispId(13)] void FieldSetCursor(ref short FieldId, ref short MousePointer);
		[DispId(14)] void ObjectClicked(ref short ObjectId);
		[DispId(15)] void ObjectMoved(ref short ObjectId);
		[DispId(16)] void ObjectSized(ref short ObjectId);
		[DispId(-600)] void Click();
		[DispId(17)] void ObjectDblClicked(ref short ObjectId);
		[DispId(-608)] void Error(ref short Number, ref string Description, ref int Scode, ref string Source, ref string HelpFile, ref int HelpContext, ref bool CancelDisplay);
		[DispId(18)] void ObjectDeleted(ref short ObjectId);
		[DispId(19)] void ObjectCreated(ref short ObjectId);
		[DispId(20)] void ConnectTools();
		[DispId(21)] void ObjectSetZoom(ref short ObjectId, ref short ZoomFactor, ref bool Processed);
		[DispId(22)] void ObjectGetZoom(ref short ObjectId, ref short ZoomFactor);
		[DispId(23)] void ObjectPrint(ref short ObjectId, ref int Device, ref int Left, ref int Top, ref int Right, ref int Bottom, ref bool Processed);
		[DispId(24)] void ObjectGetData(ref short ObjectId, object ObjectData);
		[DispId(25)] void ObjectSetData(ref short ObjectId, object ObjectData);
		[DispId(26)] void ObjectGethWnd(ref short ObjectId, ref short KindOfObject, ref int hWnd);
		[DispId(27)] void ObjectScrollOut(ref short ObjectId);
		[DispId(28)] void AutoLink();
		[DispId(29)] void FieldEntered(ref short FieldId);
		[DispId(30)] void FieldLeft(ref short FieldId);
		[DispId(31)] void HExpand();
		[DispId(32)] void VExpand();
		[DispId(33)] void Zoomed();
		[DispId(34)] void CharFormatChange();
		[DispId(35)] void PageFormatChange();
		[DispId(36)] void ParagraphChange();
		[DispId(37)] void ParagraphFormatChange();
		[DispId(38)] void CaretOut();
		[DispId(39)] void CaretOutLeft();
		[DispId(40)] void CaretOutTop();
		[DispId(41)] void CaretOutRight();
		[DispId(42)] void CaretOutBottom();
		[DispId(43)] void AutoScroll();
		[DispId(44)] void KeyStateChange();
		[DispId(45)] void ViewClicked(ref short FieldType, ref string FieldContents);
		[DispId(46)] void ViewWordDblClicked(ref string SelectedText);
		[DispId(47)] void TableCreated(ref short TableId, ref short NewTableId);
		[DispId(48)] void TableDeleted(ref short TableId);
		[DispId(49)] void HeaderFooterActivated(ref short HeaderFooter);
		[DispId(50)] void HeaderFooterDeactivated(ref short HeaderFooter);
		[DispId(51)] void FieldLinkClicked(ref short FieldId, ref short FieldType, ref string TypeData);
		[DispId(52)] void StyleListChanged();
		[DispId(53)] void StyleChanged();
		[DispId(54)] void TableFormatChanged();
		[DispId(55)] void XMLNotWellFormed(ref int FilePos, ref int LineNumber, ref int LinePos, ref int Scode, ref string Description, ref string URL, ref bool CancelDisplay);
		[DispId(56)] void XMLInvalid(ref int FilePos, ref int Scode, ref string Description, ref bool CancelDisplay);
		[DispId(57)] void ObjectRightClicked(ref short ObjectId);
		[DispId(58)] void TextFrameActivated(ref short TextFrameId);
		[DispId(59)] void TextFrameDeactivated(ref short TextFrameId);
		[DispId(60)] void PageChanged();
		[DispId(61)] void SectionChanged();
	}
}
