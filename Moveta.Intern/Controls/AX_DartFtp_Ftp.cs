// <ppj name="Moveta.Intern" date="1/29/2024 3:39:48 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using System.Runtime.InteropServices;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public class AX_DartFtp_Ftp : SalActiveX
	{
		
		/// <summary>
		/// This is the real COM object class.
		/// </summary>
		internal DartFtp_Ftp _CoClass = new DartFtp_Ftp();
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public AX_DartFtp_Ftp(): base("{39FDA070-61BA-11D2-AD84-00105A17B608}")
		{
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region Windows Form Designer generated code
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			// 
			// AX_DartFtp_Ftp
			// 
			this.Name = "AX_DartFtp_Ftp";
			this.Size = new System.Drawing.Size(72, 21);
			this.TabStop = false;
		}
		#endregion
		
		/// <summary>
		/// </summary>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean NameList(SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.NameList(PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean ChangeDirectoryUp()
		{
			using (new SalContext(this))
			{
				return _CoClass.ChangeDirectoryUp();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetProxyHost(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetProxyHost(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetProxyHost(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetProxyHost(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Result"></param>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean Status(SalVariant Result, SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.Status(Result, PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="FromFileName"></param>
		/// <param name="ToFileName"></param>
		/// <returns></returns>
		public SalBoolean Rename(SalString FromFileName, SalString ToFileName)
		{
			using (new SalContext(this))
			{
				return _CoClass.Rename(FromFileName, ToFileName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetRestart(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetRestart(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetOverwrite(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetOverwrite(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetOverwrite(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetOverwrite(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Url"></param>
		/// <param name="Result"></param>
		/// <param name="Marker"></param>
		/// <param name="MarkerHigh"></param>
		/// <returns></returns>
		public SalBoolean Get(SalString Url, SalVariant Result, SalNumber Marker, SalNumber MarkerHigh)
		{
			using (new SalContext(this))
			{
				return _CoClass.Get(Url, Result, Marker, MarkerHigh);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Url"></param>
		/// <param name="Source"></param>
		/// <param name="Marker"></param>
		/// <param name="MarkerHigh"></param>
		/// <returns></returns>
		public SalBoolean Put(SalString Url, SalVariant Source, SalNumber Marker, SalNumber MarkerHigh)
		{
			using (new SalContext(this))
			{
				return _CoClass.Put(Url, Source, Marker, MarkerHigh);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_SecurityConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetSecurity(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetSecurity(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_SecurityConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetSecurity(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetSecurity(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetSecretKey(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetSecretKey(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="RemoteName"></param>
		/// <param name="User"></param>
		/// <param name="Password"></param>
		/// <param name="Account"></param>
		/// <param name="RemotePort"></param>
		/// <returns></returns>
		public SalBoolean Login(SalString RemoteName, SalString User, SalString Password, SalString Account, SalNumber RemotePort)
		{
			using (new SalContext(this))
			{
				return _CoClass.Login(RemoteName, User, Password, Account, RemotePort);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetLocalPort(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetLocalPort(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetProxyUsername(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetProxyUsername(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetProxyUsername(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetProxyUsername(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_FtpProxyTypeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetProxyType(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetProxyType(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_FtpProxyTypeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetProxyType(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetProxyType(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean About()
		{
			using (new SalContext(this))
			{
				return _CoClass.About();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetDirectory(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetDirectory(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetDirectory(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetDirectory(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetSystem(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetSystem(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetUseIpSync(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetUseIpSync(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetUseIpSync(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetUseIpSync(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Result"></param>
		/// <param name="Command"></param>
		/// <returns></returns>
		public SalBoolean Help(SalVariant Result, SalString Command)
		{
			using (new SalContext(this))
			{
				return _CoClass.Help(Result, Command);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetIpV6(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetIpV6(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetIpV6(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetIpV6(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_TransferModeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetTransferMode(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetTransferMode(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_TransferModeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetTransferMode(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetTransferMode(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="RemoteFileName"></param>
		/// <param name="Result"></param>
		/// <param name="Marker"></param>
		/// <param name="MarkerHigh"></param>
		/// <returns></returns>
		public SalBoolean Retrieve(SalString RemoteFileName, SalVariant Result, SalNumber Marker, SalNumber MarkerHigh)
		{
			using (new SalContext(this))
			{
				return _CoClass.Retrieve(RemoteFileName, Result, Marker, MarkerHigh);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetListing(DartFtp_IListEntries rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetListing(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetListing(DartFtp_IListEntries returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetListing(returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean AbortCommand()
		{
			using (new SalContext(this))
			{
				return _CoClass.AbortCommand();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean List(SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.List(PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_AuthenticationTypeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetAuthentication(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetAuthentication(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_AuthenticationTypeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetAuthentication(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetAuthentication(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetBlocked(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetBlocked(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetRemoteAddress(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetRemoteAddress(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean StructureMount(SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.StructureMount(PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_StateConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetState(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetState(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetUseSslShutdown(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetUseSslShutdown(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean ClearCertificate()
		{
			using (new SalContext(this))
			{
				return _CoClass.ClearCertificate();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_TypeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetType(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetType(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_TypeConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetType(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetType(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="FtpCommand"></param>
		/// <param name="Result"></param>
		/// <returns></returns>
		public SalBoolean Command(SalString FtpCommand, SalVariant Result)
		{
			using (new SalContext(this))
			{
				return _CoClass.Command(FtpCommand, Result);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetUseControlAddressForPassive(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetUseControlAddressForPassive(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetPassive(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetPassive(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPassive(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetPassive(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetUseSslShutdown(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetUseSslShutdown(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean Delete(SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.Delete(PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetReceiveBufferSize(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetReceiveBufferSize(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_StoreConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetStoreType(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetStoreType(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_StoreConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetStoreType(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetStoreType(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean MakeDirectory(SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.MakeDirectory(PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetProxyPort(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetProxyPort(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetProxyPort(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetProxyPort(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetSendBufferSize(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetSendBufferSize(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Source"></param>
		/// <param name="Destination"></param>
		/// <param name="FilesTransferred"></param>
		/// <param name="FileErrors"></param>
		/// <returns></returns>
		public SalBoolean MPut(SalString Source, SalString Destination, SalVariant FilesTransferred, SalVariant FileErrors)
		{
			using (new SalContext(this))
			{
				return _CoClass.MPut(Source, Destination, FilesTransferred, FileErrors);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetSendBufferSize(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetSendBufferSize(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetUseControlAddressForPassive(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetUseControlAddressForPassive(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean NoOperation()
		{
			using (new SalContext(this))
			{
				return _CoClass.NoOperation();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetReceiveBufferSize(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetReceiveBufferSize(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetRemotePort(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetRemotePort(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Modifier"></param>
		/// <param name="Result"></param>
		/// <returns></returns>
		public SalBoolean Site(SalString Modifier, SalVariant Result)
		{
			using (new SalContext(this))
			{
				return _CoClass.Site(Modifier, Result);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="PathName"></param>
		/// <returns></returns>
		public SalBoolean RemoveDirectory(SalString PathName)
		{
			using (new SalContext(this))
			{
				return _CoClass.RemoveDirectory(PathName);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetProxyPassword(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetProxyPassword(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetProxyPassword(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetProxyPassword(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_ProtocolConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetProtocol(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetProtocol(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_ProtocolConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetProtocol(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetProtocol(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetLocalAddress(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetLocalAddress(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean Abort()
		{
			using (new SalContext(this))
			{
				return _CoClass.Abort();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetAllocate(ref SalBoolean returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetAllocate(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetAllocate(SalBoolean rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetAllocate(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Source"></param>
		/// <param name="Destination"></param>
		/// <param name="FilesTransferred"></param>
		/// <param name="FileErrors"></param>
		/// <returns></returns>
		public SalBoolean MGet(SalString Source, SalString Destination, SalVariant FilesTransferred, SalVariant FileErrors)
		{
			using (new SalContext(this))
			{
				return _CoClass.MGet(Source, Destination, FilesTransferred, FileErrors);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean Logout()
		{
			using (new SalContext(this))
			{
				return _CoClass.Logout();
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="RemoteFileName"></param>
		/// <param name="Data"></param>
		/// <param name="Marker"></param>
		/// <param name="MarkerHigh"></param>
		/// <returns></returns>
		public SalBoolean Store(SalString RemoteFileName, SalVariant Data, SalNumber Marker, SalNumber MarkerHigh)
		{
			using (new SalContext(this))
			{
				return _CoClass.Store(RemoteFileName, Data, Marker, MarkerHigh);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Result"></param>
		/// <param name="Send"></param>
		/// <param name="Receive"></param>
		/// <param name="SendPrompt"></param>
		/// <param name="ReceivePrompt"></param>
		/// <returns></returns>
		public SalBoolean Trace(SalVariant Result, SalBoolean Send, SalBoolean Receive, SalString SendPrompt, SalString ReceivePrompt)
		{
			using (new SalContext(this))
			{
				return _CoClass.Trace(Result, Send, Receive, SendPrompt, ReceivePrompt);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetLocalDataPort(SalString rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetLocalDataPort(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetLocalDataPort(ref SalString returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetLocalDataPort(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetTimeOut(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetTimeOut(ref returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetTimeOut(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetTimeOut(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetCertificate(DartFtp_ICertificate returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetCertificate(returnValue);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetCertificate(DartFtp_ICertificate rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetCertificate(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the DartFtp_FileStructureConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropSetFileStructure(SalNumber rhs)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropSetFileStructure(rhs);
			}
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the DartFtp_FileStructureConstants constants</param>
		/// <returns></returns>
		public SalBoolean PropGetFileStructure(ref SalNumber returnValue)
		{
			using (new SalContext(this))
			{
				return _CoClass.PropGetFileStructure(ref returnValue);
			}
		}
		
		#region System Methods/Properties
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public new static AX_DartFtp_Ftp FromHandle(SalWindowHandle handle)
		{
			return ((AX_DartFtp_Ftp)SalWindow.FromHandle(handle, typeof(AX_DartFtp_Ftp)));
		}
		#endregion
	}
}
