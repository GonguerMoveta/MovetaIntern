// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class dlgMBKalenderVorDruck : SalDialogBox
	{
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public dlgMBKalenderVorDruck()
		{
			// Assign global reference.
			App.dlgMBKalenderVorDruck = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the modal dialog.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static SalNumber ModalDialog(Control owner)
		{
			dlgMBKalenderVorDruck dlg = new dlgMBKalenderVorDruck();
			SalNumber ret = dlg.ShowDialog(owner);
			return ret;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static dlgMBKalenderVorDruck FromHandle(SalWindowHandle handle)
		{
			return ((dlgMBKalenderVorDruck)SalWindow.FromHandle(handle, typeof(dlgMBKalenderVorDruck)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// dlgMBKalenderVorDruck WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgMBKalenderVorDruck_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.dlgMBKalenderVorDruck_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgMBKalenderVorDruck_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.cbVA.Checked = true;
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// cbVB WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbVB_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.cbVB_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbVB_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.cbVB.Checked) 
			{
				this.cbVA.Checked = false;
			}
			#endregion
		}
		
		/// <summary>
		/// cbVA WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbVA_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.cbVA_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbVA_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.cbVA.Checked) 
			{
				this.cbVB.Checked = false;
			}
			#endregion
		}
		
		/// <summary>
		/// pkOK WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pkOK_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pkOK_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pkOK_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.WaitCursor(true);
			if (this.cbVB.Checked == true) 
			{
				App.frmMBKalender.strReportName = "VB";
				// Call SalStatusSetText(hWndForm,'Erstelle VB-Liste -  Bitte warten !')
				// Set frmMBKalender.nErr = 1
				// Call PalReport(frmMBKalender,'VB.QRP',
				// ':frmMBKalender.nProzNr, :frmMBKalender.dtZustMB,
				// :frmMBKalender.strHN1, :frmMBKalender.strHN2, :frmMBKalender.strHS, :frmMBKalender.strHO',
				// 'ProzNr, ZustMB, HN1, HN2, HS, HO',
				// nErr)
				// Call SalWaitCursor( FALSE )
				// LL
				dlgLlDruck.ModalDialog(App.frmMain, "Vollstreckungsbescheidliste.lst", "");
			}
			if (this.cbVA.Checked == true) 
			{
				App.frmMBKalender.nVA0 = 0;
				// Set frmMBKalender.nVA1 = 1
				// Set frmMBKalender.nVAa = 1
				// Set frmMBKalender.nVAb = 0
				// Set frmMBKalender.nVAc = 1
				// Set frmMBKalender.nVA2 = 0
				// Set frmMBKalender.nVA2a = 0
				// Set frmMBKalender.nVA2b = 0
				// Set frmMBKalender.nVA2b1 = 0
				// Set frmMBKalender.nVA2b2 = 0
				// Set frmMBKalender.nVA2b3 = 0
				// Set frmMBKalender.nVA2b4 = 0
				// Set frmMBKalender.nVA3 = 0
				// Set frmMBKalender.strVAText = ''

				App.frmMBKalender.strReportName = "VA";
				this.SetStatusBarText("Erstelle VAs -  Bitte warten !");
				App.frmMBKalender.nErr = 1;
				// 15.02.10 OTF366 CustomerNumber
				// Call PalReport(frmMBKalender,'VA.QRP',
				// ':frmMBKalender.nArztNr, :frmMBKalender.nHalterNr, :frmMBKalender.nProzNr, :frmMBKalender.strGerName, :frmMBKalender.dtZustMB, :frmMBKalender.dtZustVB,
				// :frmMBKalender.strAZ, :frmMBKalender.nDMHF, :frmMBKalender.nProzHF, :frmMBKalender.nDMMahn,
				// :frmMBKalender.nDMMB, :frmMBKalender.nDMVB, :frmMBKalender.nProzMBVB, :frmMBKalender.nDMVA,
				// :frmMBKalender.nDMFrueh, :frmMBKalender.nZinsHF, :frmMBKalender.nZinsMB,
				// :frmMBKalender.strHN1, :frmMBKalender.strHN2, :frmMBKalender.strHS, :frmMBKalender.strHO,
				// :frmMBKalender.nVAa, :frmMBKalender.nVAb, :frmMBKalender.nVAc,
				// :frmMBKalender.strZeichen, :frmMBKalender.strGerOrt,
				// :frmMBKalender.dtZaBuchDat, , :frmMBKalender.nZaDM,
				// :frmMBKalender.nVA0, :frmMBKalender.nVA1, :frmMBKalender.nVA2, :frmMBKalender.nVA2a, :frmMBKalender.nVA2b, :frmMBKalender.nVA2b1,
				// :frmMBKalender.nVA2b2, :frmMBKalender.nVA2b3, :frmMBKalender.nVA2b4, :frmMBKalender.nVA3,
				// :frmMBKalender.strVA3in, :frmMBKalender.dtVA3vom, :frmMBKalender.strVA3AZ, :frmMBKalender.strVAText, :frmMBKalender.nLfdZins, :frmMBKalender.strCustomerNumber',
				// 'ArztNr, HalterNr, ProzNr, GerName, ZustMB, ZustVB, AZ, DMHF, ProzHF, DMMahn, DMMB, DMVB, ProzMBVB, DMVA,
				// DMFrueh, ZinsHF, ZinsMB, HN1, HN2, HS, HO,VAa, VAb, VAc,
				// Zeichen, GerOrt, ZaBuchDat, ZaDM, VA0, VA1, VA2, VA2a, VA2b, VA2b1, VA2b2, VA2b3, VA2b4, VA3, VA3in, VA3vom, VA3AZ, Text, lfdZins, CustomerNumber',
				// nErr)
				// Call SalWaitCursor( FALSE )
				// LL
				// 18.02.13
				if (Var.bfrmMBKEinzeldruck) 
				{
					App.frmMBKEinzeldruck.DestroyWindow();
				}
				frmMBKEinzeldruck.CreateWindow(this, "Gruppe").HideWindow();

				App.frmMBKalender.nVA0 = 2;
				dlgLlDruck.ModalDialog(App.frmMain, "Vollstreckungsauftrag.crd", "");

				Sal.WaitCursor(false);
			}
			this.SetStatusBarText("");
			// 18.02.13
			if (Var.bfrmMBKEinzeldruck) 
			{
				App.frmMBKEinzeldruck.DestroyWindow();
			}

			this.EndDialog(0);
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.DestroyWindow();
			#endregion
		}
		#endregion
	}
}
