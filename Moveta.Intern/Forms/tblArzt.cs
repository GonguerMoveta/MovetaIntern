// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// Ärzte nach Suche anzeigen
	/// </summary>
	/// <param name="strParent"></param>
	/// <param name="strName"></param>
	public partial class tblArzt : SalFormTableWindow
	{
		#region Window Parameters
		public SalString strParent;
		public SalString strName;
		#endregion
		
		#region Window Variables
		public SalSqlHandle hSqlArzt = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalArray<SalString> strArrToken = new SalArray<SalString>(20);
		public SalNumber nNumToken = 0;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public tblArzt(SalString strParent, SalString strName)
		{
			// Assign global reference.
			App.tblArzt = this;
			// Window Parameters initialization.
			this.strParent = strParent;
			this.strName = strName;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static tblArzt CreateWindow(Control owner, SalString strParent, SalString strName)
		{
			tblArzt frm = new tblArzt(strParent, strName);
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static tblArzt FromHandle(SalWindowHandle handle)
		{
			return ((tblArzt)SalWindow.FromHandle(handle, typeof(tblArzt)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// tblArzt WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblArzt_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblArzt_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_RowHeaderClick:
					this.tblArzt_OnSAM_RowHeaderClick(sender, e);
					break;
				
				case Sys.SAM_Destroy:
					this.tblArzt_OnSAM_Destroy(sender, e);
					break;
				
				// On SAM_FetchRowDone
				
				// 18.09.02
				
				// If bPFarbe
				
				// Call XSalTblSetRowBackColor( hWndItem, lParam, 0xFFBFBF )
				
				// Set bPFarbe = FALSE
				
				// Else
				
				// Call XSalTblSetRowBackColor( hWndItem, lParam, 0xFFEFEF )
				
				// Set bPFarbe = TRUE
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblArzt_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this, 0xffbfbf);
			Sal.WaitCursor(false);
			this.strSelect = @"select aarztnr,aname1,aname2,astr,aort, aeintr
into :tblArzt.colnArztNr,
:tblArzt.colstrName, :tblArzt.colstrName2, :tblArzt.colstrStrasse, :tblArzt.colstrOrt, :tblArzt.coldtBeitritt
from A where aarztnr <> -1 ";
			this.nNumToken = this.strName.Tokenize("", " ", this.strArrToken);
			while (this.nNumToken > 0) 
			{
				this.nNumToken = this.nNumToken - 1;
                // 16.04.24 Ä2166 + Telefonnummern ###
                // 
                // 	OR @LICS(atelpraxis) LIKE @LICS(\'%' || strArrToken[nNumToken] || '%\')
                // 	OR @LICS(atelhandy) LIKE @LICS(\'%' || strArrToken[nNumToken] || '%\')
                // 	OR @LICS(atelprivat) LIKE @LICS(\'%' || strArrToken[nNumToken] || '%\')
                this.strSelect = this.strSelect + " AND (@LICS(aname1) LIKE @LICS(\'%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(aname2) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(astr) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(aort) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(atelpraxis) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(atelhandy) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(atelprivat) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + @"%')
	OR @LICS(amatch) LIKE @LICS('%" + this.strArrToken[this.nNumToken] + "%\')  ) ";
                // 04.06.04 rausgenommen
            }
			// Set strName='%'|| strName ||'%'
			// Set strSelect = strSelect ||
			// ' OR @lics(aname2) like @lics(:tblArzt.strName)
			// OR @lics(astr) like @lics(:tblArzt.strName)
			// OR @lics(aort) like @lics(:tblArzt.strName)
			// Order by amatch'
			// Set strSelect = strSelect ||
			// ' Order by amatch, aeintr'
			this.strSelect = this.strSelect + " Order by aeintr DESC";
			Sal.WaitCursor(true);
			// 06.01.14 Ä1005 RO
			Int.SqlConnection(ref this.hSqlArzt);
			if (this.Populate(this.hSqlArzt, this.strSelect, Sys.TBL_FillAll)) 
			{
				// Call VisTblAutoSizeColumn(tblArzt, hWndNULL)
				MT.MTbl.AutoSizeColumn(this, Sys.hWndNULL, MT.MTbl.MTASC_ALLROWS);
			}
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_RowHeaderClick event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblArzt_OnSAM_RowHeaderClick(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.strParent == "frmRgSuchen") 
			{
				App.frmRgSuchen.dfArztNr.Number = this.colnArztNr.Number;
				Sal.ClearField(App.frmRgSuchen.dfHalterName);
				App.frmRgSuchen.dfQuick.Text = Int.PalStrNum(App.frmRgSuchen.dfArztNr.Number, 4, 0);
				Sal.EnableWindow(App.frmRgSuchen.pbArztSuchen);
				Sal.SetFocus(App.frmRgSuchen.dfHalterNr);
				Sal.PostMsg(App.frmRgSuchen.dfQuick, Sys.SAM_Validate, 0, 0);
				// Call SqlImmedSel('SELECT aname1 from a into :frmRgSuchen.dfArztName
				// where aarztnr=:frmRgSuchen.dfArztNr')
				this.DestroyWindow();
			}
			else if (this.strParent == "frmManLE") 
			{
				App.frmManLE.dfArztNr.Number = this.colnArztNr.Number;
				Sal.PostMsg(App.frmManLE.dfArztNr, Sys.SAM_Validate, 0, 0);
				// Call SqlImmedSel('SELECT aname1,aname2 from a into :frmManLE.dfSArztName,:frmManLE.dfSArztName2
				// where aarztnr=:frmManLE.dfArztNr')
				// Call SalTblPopulate(frmManLE.tblManAbrPosi,frmManLE.hSqlAbrPosi,frmManLE.strSelectPosi,TBL_FillNormal )
				this.DestroyWindow();
			}
			else if (this.strParent == "frmMycoLE") 
			{
				App.frmMycoLE.dfArztNr.Number = this.colnArztNr.Number;
				Int.SqlImmedSel(@"SELECT aname1,aname2 from a into :frmMycoLE.dfSArztName,:frmMycoLE.dfSArztName2
where aarztnr=:frmMycoLE.dfArztNr");
				this.DestroyWindow();
			}
			else if (this.strParent == "frmMBErf") 
			{
				App.frmMBErf.dfArztNr.Number = this.colnArztNr.Number;
				Int.SqlImmedSel(@"SELECT aname1,aname2 from a into :frmMBErf.dfSArztName,:frmMBErf.dfSArztName2
where aarztnr=:frmMBErf.dfArztNr");
				this.DestroyWindow();
			}
			else if (this.strParent == "frmRechPos") 
			{
				App.frmRechPos.dfNBArztNr.Number = this.colnArztNr.Number;
				Int.SqlImmedSel(@"SELECT aname1 from a into :frmRechPos.dfNBArztName
where aarztnr=:frmRechPos.dfNBArztNr");
				this.DestroyWindow();
			}
			else if (this.strParent == "frmRechPos2") 
			{
				App.frmRechPos.dfNB2ArztNr.Number = this.colnArztNr.Number;
				Int.SqlImmedSel(@"SELECT aname1 from a into :frmRechPos.dfNB2ArztName
where aarztnr=:frmRechPos.dfNB2ArztNr");
				this.DestroyWindow();
			}
			else if (this.strParent == "frmZettel") 
			{
				App.frmZettel.dfArztNr.Number = this.colnArztNr.Number;
				this.DestroyWindow();
			}
			else if (this.strParent == "frmMahntexte") 
			{
				App.frmMahntexte.dfArztNr.Number = this.colnArztNr.Number;
				this.DestroyWindow();
			}
			else if (this.strParent == "frmTSK") 
			{
				App.frmTSK.dfArztNr.Number = this.colnArztNr.Number;
				Sal.EnableWindow(App.frmTSK.pbArztSuche);
				Sal.PostMsg(App.frmTSK.dfArztNr, Sys.SAM_Validate, 0, 0);
				// Call SqlImmedSel('SELECT aname1 from a into :frmRgSuchen.dfArztName
				// where aarztnr=:frmRgSuchen.dfArztNr')
				this.DestroyWindow();
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Destroy event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblArzt_OnSAM_Destroy(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.strParent == "frmRgSuchen") 
			{
				Sal.EnableWindow(App.frmRgSuchen.pbArztSuchen);
			}
			else if (this.strParent == "frmTSK") 
			{
				Sal.EnableWindow(App.frmTSK.pbArztSuche);
			}
			this.hSqlArzt.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Call SalPostMsg(hWndForm, SAM_Close, 0, 0)
			this.DestroyWindow();
			#endregion
		}
		#endregion
	}
}
