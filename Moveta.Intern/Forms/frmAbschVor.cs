// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmAbschVor : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlAbschVor = SalSqlHandle.Null;
		public SalSqlHandle hSqlAbschLoe = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalNumber nErr = 0;
		public SalWindowHandle hWndReport = SalWindowHandle.Null;
		public SalBoolean bBankFalsch = false;
		public MTblPrintParams PrintParams = new MTblPrintParams();
		public SalString strDevice = "";
		public SalNumber nResult = 0;
		public SalNumber nAnz = 0;
		public SalNumber nOff = 0;
		public SalArray<SalString> strPrinters = new SalArray<SalString>();
		public SalNumber nSumAbsch = 0;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmAbschVor()
		{
			// Assign global reference.
			App.frmAbschVor = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmAbschVor CreateWindow(Control owner)
		{
			frmAbschVor frm = new frmAbschVor();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmAbschVor FromHandle(SalWindowHandle handle)
		{
			return ((frmAbschVor)SalWindow.FromHandle(handle, typeof(frmAbschVor)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmAbschVor WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmAbschVor_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmAbschVor_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmAbschVor_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmAbschVor_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlConnection(ref this.hSqlAbschVor);
			Int.SqlConnection(ref this.hSqlAbschLoe);
			// 14.02.14
			this.bBankFalsch = false;
			// 24.02.16
			this.nSumAbsch = 0;

			this.strSelect = @"SELECT avarztnr, avsaldo, avzahldm, abic, aiban
INTO :frmAbschVor.tblAbschVor.colnArztNr, :frmAbschVor.tblAbschVor.colnDMSaldo,
:frmAbschVor.tblAbschVor.colnDMAbsch,
 :frmAbschVor.tblAbschVor.colsBIC,  :frmAbschVor.tblAbschVor.colsIBAN
FROM av,a
WHERE avarztnr=aarztnr ORDER BY avarztnr";
			if (this.tblAbschVor.Populate(this.hSqlAbschVor, this.strSelect, Sys.TBL_FillAllBackground)) 
			{
				// 06.06.16
				Int.SqlImmedSel("SELECT sum(avzahldm) INTO :frmAbschVor.nSumAbsch FROM av");
				this.tblAbschVor.InsertRow(Sys.TBL_MaxRow);
				this.tblAbschVor.colnDMAbsch.Number = this.nSumAbsch;
			}
			this.tblAbschVor.SetFocusCell(0, this.tblAbschVor.colnArztNr, 0, -1);
			// 14.02.14
			if (this.bBankFalsch) 
			{
				Sal.MessageBox(@"Es fehlen bei Abschlägen IBAN oder BIC!

Das muß hier korrigiert werden, bevor die Bankdatei erstellt wird.", "Daten fehlen", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmAbschVor_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.tblAbschVor.KillCellEdit();
			this.hSqlAbschLoe.Disconnect();
			this.hSqlAbschVor.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// tblAbschVor WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAbschVor_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				// On SAM_Create
				
				// Call PalPrepareMTbl( hWndItem, 0xFFFFA8 )
				
				// 25.06.13
				
				// Call MTblSubClass( hWndItem )
				
				// Call MTblSetAltRowBackColors( hWndItem, FALSE, COLOR_White, 0xFFFFA8 )
				
				// On SAM_FetchRowDone
				
				// If colsBIC = '' or colsIBAN = ''
				
				// 14.02.14
				
				// Set bBankFalsch = TRUE
				
				// 24.02.16
				
				// Set nSumAbsch = nSumAbsch + frmAbschVor.tblAbschVor.colnDMAbsch
				
				// On SAM_FetchDone
				
				// 24.02.16
				
				// Call SalTblInsertRow( hWndItem, TBL_MaxRow )
				
				// Set frmAbschVor.tblAbschVor.colnDMAbsch = nSumAbsch
				
				case Sys.SAM_Create:
					this.tblAbschVor_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_FetchRowDone:
					this.tblAbschVor_OnSAM_FetchRowDone(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAbschVor_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this.tblAbschVor, 0xffffd8);
			// 25.06.13
			// Call MTblSubClass( hWndItem )
			// Call MTblSetAltRowBackColors( hWndItem, FALSE, COLOR_White, 0xFFFFA8 )

			#endregion
		}
		
		/// <summary>
		/// SAM_FetchRowDone event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAbschVor_OnSAM_FetchRowDone(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.tblAbschVor.colsBIC.Text == "" || this.tblAbschVor.colsIBAN.Text == "") 
			{
				// 14.02.14
				this.bBankFalsch = true;

			}
			// 24.02.16 06.06.16 auskommentiert
			// Set nSumAbsch = nSumAbsch + frmAbschVor.tblAbschVor.colnDMAbsch
			#endregion
		}
		
		/// <summary>
		/// pbLösch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLösch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbLösch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLösch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// ----------------------------------------------LÖSCHEN-------------------------------------------------------------------------------
			if (this.tblAbschVor.AnyRows(Sys.ROW_Selected, 0)) 
			{
				// 14.02.14
				this.bBankFalsch = false;

				// 26.2.98
				this.hSqlAbschLoe.Prepare(@"DELETE FROM av
WHERE avarztnr = :frmAbschVor.tblAbschVor.colnArztNr");
				if (this.tblAbschVor.DoDeletes(this.hSqlAbschLoe, Sys.ROW_Selected)) 
				{
					this.tblAbschVor.Populate(this.hSqlAbschVor, this.strSelect, Sys.TBL_FillAll);
					// 14.02.14
					if (this.bBankFalsch) 
					{
						Sal.MessageBox(@"Es fehlen bei Abschlägen IBAN oder BIC!

Das muß hier korrigiert werden, bevor die Bankdatei erstellt wird.", "Daten fehlen", (Sys.MB_Ok | Sys.MB_IconExclamation));
					}

				}
				// Call SqlImmedX('DELETE FROM av
				// WHERE avarztnr = :frmAbschVor.tblAbschVor.colnArztNr')
				// Call SalTblReset(tblAbschVor)
				// Call SalTblPopulate( tblAbschVor,hSqlAbschVor,strSelect,TBL_FillAll )
			}
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.pbDrucken_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nAnz = MT.MTbl.PrintGetPrinterNames(this.strPrinters);
			this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			this.nOff = -1;
			this.nResult = 0;
			while (this.nResult < this.nAnz) 
			{
				this.lbPrinters.AddListItem(this.strPrinters[this.nResult]);
				if (this.strPrinters[this.nResult] == this.strDevice) 
				{
					this.nOff = this.nResult;
				}
				this.nResult = this.nResult + 1;
			}
			if (this.nOff >= 0) 
			{
				this.lbPrinters.SetListSelectedIndex(this.nOff);
			}

			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Set nErr = 1
			// Set strReportName = 'ABSCHVOR'
			// Set hWndReport = SalReportTableView(tblAbschVor,hWndNULL,'ABSCHVOR.QRP',nErr)
			this.PrintParams.Init();
			this.PrintParams.DocName = "Abschlagsvorschlag";
			this.PrintParams.Orientation = MT.MTbl.MTP_OR_LANDSCAPE;
			this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			this.nResult = this.lbPrinters.GetListSelectedIndex();
			if (this.nResult == Sys.LB_Err) 
			{
				this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			}
			else
			{
				this.strDevice = this.lbPrinters.GetListItemText(this.nResult);
			}
			this.PrintParams.PrinterName = this.strDevice;
			// 07.11.13 F1760
			this.PrintParams.Language = MT.MTbl.MTP_LNG_GERMAN;

			MT.MTbl.Print(this.tblAbschVor, this.PrintParams);

			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblAbschVor
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblAbschVorTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmAbschVor _frmAbschVor = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblAbschVorTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmAbschVor frmAbschVor
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmAbschVor == null) 
					{
						_frmAbschVor = (frmAbschVor)this.FindForm();
					}
					return _frmAbschVor;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblAbschVorTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblAbschVorTableWindow)SalWindow.FromHandle(handle, typeof(tblAbschVorTableWindow)));
			}
			#endregion
			
			#region Window Actions
			
			/// <summary>
			/// colnDMAbsch WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colnDMAbsch_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colnDMAbsch_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colnDMAbsch_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				Int.SqlImmedX(@" UPDATE av
SET avzahldm = :frmAbschVor.tblAbschVor.colnDMAbsch
WHERE avarztnr = :frmAbschVor.tblAbschVor.colnArztNr");
				#endregion
			}
			
			/// <summary>
			/// colsBIC WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colsBIC_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colsBIC_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colsBIC_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				Int.SqlImmed("UPDATE a SET abic = :tblAbschVor.colsBIC WHERE aarztnr = :tblAbschVor.colnArztNr");
				#endregion
			}
			
			/// <summary>
			/// colsIBAN WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colsIBAN_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colsIBAN_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colsIBAN_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				Int.SqlImmed("UPDATE a SET aiban = :tblAbschVor.colsIBAN WHERE aarztnr = :tblAbschVor.colnArztNr");
				#endregion
			}
			#endregion
		}
		#endregion
	}
}
