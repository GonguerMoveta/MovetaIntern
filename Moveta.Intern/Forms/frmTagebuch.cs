// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	/// <param name="nArztX"></param>
	/// <param name="nHalterX"></param>
	public partial class frmTagebuch : FCRibbonFormWindow
	{
		#region Window Parameters
		public SalNumber nArztX;
		public SalNumber nHalterX;
		#endregion
		
		#region Window Variables
		public SalWindowHandle hWndReport = SalWindowHandle.Null;
		public SalSqlHandle hSqlInfo = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalNumber nArztNr2 = 0;
		public MTblPrintParams PrintParams = new MTblPrintParams();
		public SalString strDevice = "";
		public SalNumber nResult = 0;
		public SalNumber nAnz = 0;
		public SalNumber nOff = 0;
		public SalArray<SalString> strPrinters = new SalArray<SalString>();
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmTagebuch(SalNumber nArztX, SalNumber nHalterX)
		{
			// Assign global reference.
			App.frmTagebuch = this;
			// Window Parameters initialization.
			this.nArztX = nArztX;
			this.nHalterX = nHalterX;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
			//FC:FINAL: create menu as RibbonBar
			this.CreateRibbon();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmTagebuch CreateWindow(Control owner, SalNumber nArztX, SalNumber nHalterX)
		{
			frmTagebuch frm = new frmTagebuch(nArztX, nHalterX);
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmTagebuch FromHandle(SalWindowHandle handle)
		{
			return ((frmTagebuch)SalWindow.FromHandle(handle, typeof(frmTagebuch)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber HoleTagebuch()
		{
			#region Actions
			using (new SalContext(this))
			{
				// 20.10.98
				Int.SqlImmedSel("SELECT ANR2 INTO :frmTagebuch.nArztNr2 FROM A WHERE AARZTNR = :frmTagebuch.dfArztNr");
				if (nArztNr2 == 0) 
				{
					nArztNr2 = dfArztNr.Number;
				}

				strSelect = @"SELECT akarztnr,akhalternr, akrechnr, akdatum, aktyp, aktypdetail, akanzahl, akprozgeb, akdm,akrechsumm,
akproznr, akdauer
INTO :frmTagebuch.tblTagebuch.colnArztNr,
:frmTagebuch.tblTagebuch.colnHalterNr,
:frmTagebuch.tblTagebuch.colnRechNr,
:frmTagebuch.tblTagebuch.coldtDatum,
:frmTagebuch.tblTagebuch.colsTyp,
:frmTagebuch.tblTagebuch.colsTypDetail,
:frmTagebuch.tblTagebuch.colnAnzahl,
:frmTagebuch.tblTagebuch.colnProzGeb,
:frmTagebuch.tblTagebuch.colnDM,
:frmTagebuch.tblTagebuch.colnRechSumme,
:frmTagebuch.tblTagebuch.colnProzNr,
:frmTagebuch.tblTagebuch.colnDauer
FROM ak WHERE aktyp IN ( ";
				if (cbRG.Checked) 
				{
					strSelect = strSelect + "\'RG\',";
				}
				if (cbMG.Checked) 
				{
					strSelect = strSelect + "\'MG\',";
				}
				if (cbMB.Checked) 
				{
					strSelect = strSelect + "\'MB\',";
				}
				if (cbBR.Checked) 
				{
					strSelect = strSelect + "\'BR\',";
				}
				if (strSelect.Right(1) == ",") 
				{
					strSelect = strSelect.Left(strSelect.Length - 1);
				}
				strSelect = strSelect + ") ";
				if (!(Sal.IsNull(dfArztNr))) 
				{
					strSelect = strSelect + " AND  " + Int.PalArztNr("ak", dfArztNr.Number, nArztNr2);
					if (!(Sal.IsNull(dfHalterNr))) 
					{
						strSelect = strSelect + " AND akhalternr = :frmTagebuch.dfHalterNr";
					}
				}
				if (cbohneHalter.Checked == true) 
				{
					strSelect = strSelect + " AND akhalternr IS NULL";
				}
				if (dfDatum.Value != Sys.DATETIME_Null) 
				{
					strSelect = strSelect + " AND @DATEVALUE(akdatum) = :frmTagebuch.dfDatum.Value";
				}
				strSelect = strSelect + " AND akdeaktiv IS NULL  ORDER BY akdatum DESC";
				Sal.WaitCursor(true);
				if (!(tblTagebuch.Populate(hSqlInfo, strSelect, Sys.TBL_FillAll))) 
				{
					Sal.MessageBox("Tabelle kann nicht angezeigt werden !", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
				}
				hSqlInfo.Commit();
				Sal.WaitCursor(false);
			}

			return 0;
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// Menu EnabledWhen Expression
		/// </summary>
		/// <returns></returns>
		private bool menuItem__Copy_EnabledWhen()
		{
			return Sal.EditCanCut();
		}
		
		/// <summary>
		/// Menu Actions
		/// </summary>
		/// <returns></returns>
		private SalNumber menuItem__Copy_MenuActions()
		{
			Sal.EditCopy();
			return 0;
		}
		
		/// <summary>
		/// Menu EnabledWhen Expression
		/// </summary>
		/// <returns></returns>
		private bool menuItem_Clear_EnabledWhen()
		{
			return Sal.EditCanCut();
		}
		
		/// <summary>
		/// Menu Actions
		/// </summary>
		/// <returns></returns>
		private SalNumber menuItem_Clear_MenuActions()
		{
			Sal.EditClear();
			return 0;
		}
		
		/// <summary>
		/// frmTagebuch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmTagebuch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmTagebuch_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmTagebuch_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmTagebuch_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlConnection(ref this.hSqlInfo);
			if (this.nArztX != SalNumber.Null && this.nHalterX != SalNumber.Null) 
			{
				this.cbMB.Checked = true;
				this.cbBR.Checked = true;
				this.dfArztNr.Number = this.nArztX;
				this.dfHalterNr.Number = this.nHalterX;
				this.HoleTagebuch();
			}
			else
			{
				this.cbRG.Checked = true;
				this.cbMG.Checked = true;
				this.cbMB.Checked = true;
				this.cbBR.Checked = true;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmTagebuch_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlInfo.Disconnect();
			Sal.EnableWindow(App.frmMain.pbTagebuch);
			#endregion
		}
		
		/// <summary>
		/// dfArztNr WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfArztNr_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfArztNr_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfArztNr_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.dfHalterNr.Clear();
			#endregion
		}
		
		/// <summary>
		/// tblTagebuch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblTagebuch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblTagebuch_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblTagebuch_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 25.06.13
			// Call MTblSubClass( hWndItem )
			// Call MTblSetAltRowBackColors( hWndItem, FALSE, COLOR_White, 0xFFFFA8 )
			Int.PalPrepareMTbl(this.tblTagebuch, 0xffffa8);

			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.HoleTagebuch();
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				// On SAM_Click
				
				// Set nErr = 1
				
				// Set strReportName = 'TAGEBUCH'
				
				// Set hWndReport = SalReportTableView(tblTagebuch,hWndNULL,'TAGEBUCH.QRP',nErr)
				
				case Sys.SAM_Create:
					this.pbDrucken_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nAnz = MT.MTbl.PrintGetPrinterNames(this.strPrinters);
			this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			this.nOff = -1;
			this.nResult = 0;
			while (this.nResult < this.nAnz) 
			{
				this.lbPrinters.AddListItem(this.strPrinters[this.nResult]);
				if (this.strPrinters[this.nResult] == this.strDevice) 
				{
					this.nOff = this.nResult;
				}
				this.nResult = this.nResult + 1;
			}
			if (this.nOff >= 0) 
			{
				this.lbPrinters.SetListSelectedIndex(this.nOff);
			}

			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PrintParams.Init();
			this.PrintParams.DocName = "Tagebuch";
			this.PrintParams.Orientation = MT.MTbl.MTP_OR_PORTRAIT;
			// Set strDevice = MTblPrintGetDefPrinterName(  )
			this.nResult = this.lbPrinters.GetListSelectedIndex();
			if (this.nResult == Sys.LB_Err) 
			{
				this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			}
			else
			{
				this.strDevice = this.lbPrinters.GetListItemText(this.nResult);
			}
			this.PrintParams.PrinterName = this.strDevice;
			// 07.11.13 F1760
			this.PrintParams.Language = MT.MTbl.MTP_LNG_GERMAN;

			MT.MTbl.Print(this.tblTagebuch, this.PrintParams);
			#endregion
		}
		
		/// <summary>
		/// pbStorno WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbStorno_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbStorno_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbStorno_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.tblTagebuch.AnyRows(Sys.ROW_Selected, 0)) 
			{
				Int.PalAktionDatum(this.tblTagebuch.coldtDatum.DateTime, this.tblTagebuch.colnArztNr.Number, this.tblTagebuch.colnHalterNr.Number, this.tblTagebuch.colnRechNr.Number, this.tblTagebuch.colsTyp.Text, this.tblTagebuch.colsTypDetail.Text, this.tblTagebuch.colnAnzahl.Number * 
					-1, this.tblTagebuch.colnProzGeb.Number, this.tblTagebuch.colnDM.Number * -1, this.tblTagebuch.colnRechSumme.Number * -1, this.tblTagebuch.colnProzNr.Number, SalNumber.Null, "");
				this.tblTagebuch.Populate(this.hSqlInfo, this.strSelect, Sys.TBL_FillAll);
			}
			#endregion
		}
		
		/// <summary>
		/// pbSummen WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbSummen_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbSummen_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbSummen_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.dfSuAnzahl.Number = this.tblTagebuch.ColumnSum(7, Sys.ROW_Selected, 0);
			this.dfSuProz.Number = this.tblTagebuch.ColumnAverage(8, Sys.ROW_Selected, 0);
			this.dfSuDM.Number = this.tblTagebuch.ColumnSum(9, Sys.ROW_Selected, 0);
			this.dfSuRechSumm.Number = this.tblTagebuch.ColumnSum(10, Sys.ROW_Selected, 0);
			#endregion
		}
		
		/// <summary>
		/// dfDatum WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfDatum_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.dfDatum_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfDatum_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.dfDatum.Value = Sys.DATETIME_Null;
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblTagebuch
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblTagebuchTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmTagebuch _frmTagebuch = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblTagebuchTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmTagebuch frmTagebuch
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmTagebuch == null) 
					{
						_frmTagebuch = (frmTagebuch)this.FindForm();
					}
					return _frmTagebuch;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblTagebuchTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblTagebuchTableWindow)SalWindow.FromHandle(handle, typeof(tblTagebuchTableWindow)));
			}
			#endregion
		}
		#endregion
	}
}
