// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// Rechnungsdruck
	/// </summary>
	/// <param name="nArztNr"></param>
	/// <param name="strBearbeiter"></param>
	/// <param name="dtBearbDatum"></param>
	/// <param name="strParent"></param>
	public partial class frmSpeRg : SalFormWindow
	{
		#region Window Parameters
		public SalNumber nArztNr;
		public SalString strBearbeiter;
		public SalDateTime dtBearbDatum;
		public SalString strParent;
		#endregion
		
		#region Window Variables
		public SalNumber nJob = 0;
		public SalSqlHandle hSqlLe = SalSqlHandle.Null;
		public SalSqlHandle hSqlLp = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalNumber nFetchLe = 0;
		public SalNumber nFetchLp = 0;
		public SalNumber nPosNr = 0;
		public SalNumber nArztNr2 = 0;
		public SalNumber nHalterNr = 0;
		public SalNumber nRechNr = 0;
		public SalNumber nRechNrLe = 0;
		public SalString strPraxArt = "";
		public SalString strLA = "";
		public SalBoolean bExists = false;
		public SalBoolean bAufschlag = false;
		public SalNumber nAuGrenze = 0;
		public SalNumber nAuDM = 0;
		public SalNumber nAuKZ = 0;
		public SalString strAuRgText = "";
		public SalNumber nRechSumme = 0;
		public SalDateTime dtDatum = SalDateTime.Null;
		public SalDateTime dtRechDat = SalDateTime.Null;
		public SalNumber nSeite = 0;
		public SalNumber nZeile = 0;
		public SalNumber nRechZaehl = 0;
		public SalString strDrucker = "";
		public SalNumber nFaellTg = 0;
		public SalString strRT1 = "";
		public SalString strRT2 = "";
		public SalString strMZF = "";
		public SalNumber nBrutto = 0;
		public SalString strBruttoLA = "";
		public SalNumber nBruttoMwSt = 0;
		public SalNumber nBruttoDM = 0;
		public SalString strLogo = "";
		public SalNumber nStatus = 0;
		public SalNumber nCount = 0;
		public SalBoolean bInsert = false;
		public SalNumber nUeber = 0;
		public SalNumber nError = 0;
		public SalDateTime dt1 = SalDateTime.Null;
		public SalDateTime dt2 = SalDateTime.Null;
		public SalNumber nTime = 0;
		public SalString strPath = "";
		public SalString strDKUser = "";
		public SalNumber nFileSize = 0;
		public SalNumber nFileSize0 = 0;
		public SalNumber nSBMSt1 = 0;
		public SalNumber nSBMStGeb = 0;
		public SalNumber nPArztNr = 0;
		public SalString strPFehler = "";
		public SalNumber nEinzug = 0;
		public SalNumber nEinzugAlt = 0;
		public SalString strEinzug = "";
		public SalString strBLZ = "";
		public SalString strKonto = "";
		public SalString strBLZAlt = "";
		public SalString strKontoAlt = "";
		public SalString strDevice = "";
		public SalString strDriver = "";
		public SalString strPort = "";
		public SalString strOldDevice = "";
		public SalString strOldDriver = "";
		public SalString strOldPort = "";
		public SalNumber nSBMMwSt = 0;
		public SalString strBarcode = "";
		public SalBoolean bBarcode = false;
		public SalNumber nBEZAbzug = 0;
		public SalString strBEZAbzugText = "";
		public SalNumber nRabatt = 0;
		public SalDateTime dtMaxZeiDat = SalDateTime.Null;
		public SalString strRabattText = "";
		public SalDateTime dtRabatt = SalDateTime.Null;
		public SalNumber nBEZArztNr = 0;
		public SalNumber nBEZMwSt = 0;
		public SalNumber nEPost = 0;
		public SalString strPMMail = "";
		public SalString strEPostMail = "";
		public SalDateTime dtEPostAenDat = SalDateTime.Null;
		public SalDateTime dtEPostAenDatH = SalDateTime.Null;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmSpeRg(SalNumber nArztNr, SalString strBearbeiter, SalDateTime dtBearbDatum, SalString strParent)
		{
			// Assign global reference.
			App.frmSpeRg = this;
			// Window Parameters initialization.
			this.nArztNr = nArztNr;
			this.strBearbeiter = strBearbeiter;
			this.dtBearbDatum = dtBearbDatum;
			this.strParent = strParent;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmSpeRg CreateWindow(Control owner, SalNumber nArztNr, SalString strBearbeiter, SalDateTime dtBearbDatum, SalString strParent)
		{
			frmSpeRg frm = new frmSpeRg(nArztNr, strBearbeiter, dtBearbDatum, strParent);
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmSpeRg FromHandle(SalWindowHandle handle)
		{
			return ((frmSpeRg)SalWindow.FromHandle(handle, typeof(frmSpeRg)));
		}
		#endregion
		
		#region Methods
		// Function: Ausdruck
		// Description:
		// Returns
		// Parameters
		// Number: pnArztNr
		// Number: pnReNrVon
		// Number: pnReNrBis
		// Number: pnExempl
		// String: pstrDrucker
		// Static Variables
		// Local variables
		// Window Handle: hWndText
		// Number: nLength
		// Number: nPos
		// String: strText
		// String: strSQLQuery
		// String: strBearbDatum
		// Number: nCopies
		// Actions
		// Call PEClosePrintJob( nJob )
		// Call PEOpenEngine()
		// Set dt1 = SalDateCurrent()
		// Call SalFileSetCurrentDirectory(strTVNPath)
		// Call SalFileGetCurrentDirectory(strPath)
		// Set nJob = PEOpenPrintJob( pstrDrucker )
		// Set dt2 = SalDateCurrent()
		// Set nError = PEGetErrorCode(nJob)
		// If nError != 0
		// Call SalMessageBox('Es kann nicht gedruckt werden !','Fehler ' || PalStrNum(nError,5,0), MB_Ok|MB_IconStop)
		// Set nTime = (dt2 - dt1) * 86400
		// Call PalLog('CR '  || PalStrNum(nError,5,0) || ' ' || pstrDrucker || '  Sek.' || PalStrNum(nTime,2,3))
		// Call PalLog('CR '  || strPath)
		// Call PECloseEngine()
		// Else
		// Call PalLog('CR Ok    Sek.' || PalStrNum(nTime,2,3))
		// Call PalLog('CR '  || strPath)
		// Call SalDateToStr( frmSpeRg.dtBearbDatum, strBearbDatum )
		// Call PELogOnSQLServerWithPrivateInfo( 'PDSODBC.DLL', naOdbcHdbc )
		// Call PEGetSQLQuery( nJob, hWndText, nLength )
		// Call SalStrSetBufferLength( strText, nLength )
		// Call PEGetHandleString( hWndText, strText, nLength )
		// Set strText = 'SELECT
		//     LEISERF."LEARZTNR", LEISERF."LERECHNR"
		// FROM
		//     "SYSADM"."LEISERF" LEISERF
		// WHERE
		//     LEISERF."LEARZTNR" > 0
		// ORDER BY
		//     LEISERF."LERECHNR" ASC'
		// Set nPos = SalStrScan( strText, 'WHERE' )
		// Set strSQLQuery = SalStrLeftX( strText, nPos ) || "
		// WHERE LEISERF.\"LEARZTNR\" = " || SalNumberToStrX( pnArztNr, 0 ) || "
		// AND LEISERF.\"LEBEARBEITER\" = '" || frmSpeRg.strBearbeiter || "'
		// AND LEISERF.\"LEBEARBDATUM\" = " || strBearbDatum || "
		// ORDER BY LEISERF.\"LERECHNR\" ASC"
		// If pnReNrVon != NUMBER_Null
		// Set strSQLQuery = SalStrLeftX( strText, nPos ) || "
		// WHERE LEISERF.\"LEARZTNR\" = " || SalNumberToStrX( pnArztNr, 0 ) || "
		// AND LEISERF.\"LEBEARBEITER\" = '" || frmSpeRg.strBearbeiter || "'
		// AND LEISERF.\"LEBEARBDATUM\" = " || strBearbDatum || "
		// AND LEISERF.\"LERECHNR\" >= " || SalNumberToStrX( pnReNrVon, 0 ) || "
		// AND LEISERF.\"LERECHNR\" <= " || SalNumberToStrX( pnReNrBis, 0 ) || "
		// ORDER BY LEISERF.\"LERECHNR\" ASC"
		// Call PESetSQLQuery( nJob, strSQLQuery )
		// If cbDruckAnsicht
		// Call PEOutputToWindow( nJob, 'Rechnungen', CW_USEDEFAULT,CW_USEDEFAULT, CW_USEDEFAULT,CW_USEDEFAULT, 0, hWndNULL )
		// Call PEStartPrintJob( nJob, TRUE )
		// Else
		// Set nCopies =  PrintDialog(  )
		// Set nCopies = pnExempl
		// If nCopies > 0
		// Call PEOutputToPrinter( nJob, nCopies )
		// Call MBSetParameter( nJob, 1, strN )
		// Call PEStartPrintJob( nJob, TRUE )
		// Call PEClosePrintJob( nJob )
		// Call PECloseEngine()
		/// <summary>
		/// </summary>
		/// <param name="strPLA"></param>
		/// <returns></returns>
		public SalNumber BerechneBrutto(SalString strPLA)
		{
			#region Local Variables
			SqlLocals.BerechneBruttoLocals locals = new SqlLocals.BerechneBruttoLocals();
			#endregion
			
			#region Actions
			using (new SalContext(this, locals))
			{

				// PPJ: Assign parameters to the locals instance.
				locals.strPLA = strPLA;

				nBrutto = 0;
				Int.SqlConnection(ref locals.hSqlBrutto);
				// 08.08.07 F223: +  leprechnr = :frmSpeRg.nRechNrLe
				if (locals.strPLA == "L") 
				{
					Int.SqlHandleExec(locals.hSqlBrutto, @"SELECT lepla, lepmwst, sum(lepdm)
FROM lep
WHERE leparztnr=:frmSpeRg.nArztNr
AND lephalternr = :frmSpeRg.nHalterNr
AND  leprechnr = :frmSpeRg.nRechNrLe
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
GROUP BY 1,2
INTO :frmSpeRg.strBruttoLA, :frmSpeRg.nBruttoMwSt, :frmSpeRg.nBruttoDM", "BruttoDM errechnen bei RechDruck", ref Var.nErr);
				}
				else
				{
					Int.SqlHandleExec(locals.hSqlBrutto, @"SELECT lepla, lepmwst, sum(lepdm)
FROM lep
WHERE leparztnr=:frmSpeRg.nArztNr2
AND lephalternr = :frmSpeRg.nHalterNr
AND  leprechnr = :frmSpeRg.nRechNrLe
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
GROUP BY 1,2
INTO :frmSpeRg.strBruttoLA, :frmSpeRg.nBruttoMwSt, :frmSpeRg.nBruttoDM", "BruttoDM errechnen bei RechDruck", ref Var.nErr);
				}
				locals.nFetchBrutto = locals.hSqlBrutto.FetchNext();
				while (locals.nFetchBrutto != Sys.FETCH_EOF) 
				{
					// Set nBrutto = nBrutto + nBruttoDM
					nBrutto = nBrutto + nBruttoDM + (nBruttoDM * nBruttoMwSt).Round() / 100.00m;
					locals.nFetchBrutto = locals.hSqlBrutto.FetchNext();
				}
				locals.hSqlBrutto.Commit();
				locals.hSqlBrutto.Disconnect();

				return 0;
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nPArztNr"></param>
		/// <param name="strPLA"></param>
		/// <returns></returns>
		public SalNumber PalBEZAbzug(SalNumber nPArztNr, SalString strPLA)
		{
			#region Actions
			using (new SalContext(this))
			{
				// 26.11.18 Ä1805
				nBEZArztNr = nPArztNr;
				dtMaxZeiDat = new SalDateTime(1900, 1, 1);
				Int.SqlImmedSel(@" SELECT sum(lepdm), max(lepla), max(lepzeidat), max(lepmwst)
INTO :frmSpeRg.nRabatt, :frmSpeRg.strLA, :frmSpeRg.dtMaxZeiDat, :frmSpeRg.nBEZMwSt
FROM lep
WHERE leparztnr=:frmSpeRg.nBEZArztNr
AND lephalternr = :frmSpeRg.nHalterNr
AND  leprechnr = :frmSpeRg.nRechNrLe
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum");
				// 09.05.17 F2909
				dtMaxZeiDat = dtMaxZeiDat + 1;

				strRabattText = ("abzgl. " + Int.PalStrNum(nBEZAbzug, 2, 0) + " % " + strBEZAbzugText).Left(70);
				nRabatt = (nRabatt * nBEZAbzug).Round() / 100 * -1;
				dtRabatt = SalDateTime.Current;
				// 09.05.17 F2909 SYSDATETIME -> :frmAbrBearb.dtMaxZeiDat
				Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR, LEPHALTERNR, LEPRECHNR,
LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT, LEPDATUM, LEPDM, LEPTEXT,
LEBEARBDATUM, LEPZEIDAT)
VALUES (:frmSpeRg.strBearbeiter,:frmSpeRg.nBEZArztNr,
:frmSpeRg.nHalterNr, :frmSpeRg.nRechNrLe,
:frmSpeRg.nPosNr, '" + strPLA + @"', :frmSpeRg.nBEZMwSt,:frmSpeRg.strRabattText, :frmSpeRg.dtRabatt ,:frmSpeRg.nRabatt,
0,:frmSpeRg.dtBearbDatum, :frmSpeRg.dtMaxZeiDat)");
			}

			return 0;
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmSpeRg WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmSpeRg_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmSpeRg_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Destroy:
					this.frmSpeRg_OnSAM_Destroy(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmSpeRg_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.dfArztNr.Number = this.nArztNr;
			Int.SqlImmedSel(@"SELECT AKZPRAXART,ANR2 INTO :frmSpeRg.strPraxArt,:frmSpeRg.nArztNr2
FROM A WHERE AARZTNR = :frmSpeRg.dfArztNr");
			// 27.06.08
			this.dfArztNr2.Number = Sys.NUMBER_Null;

			if (this.strPraxArt == "2") 
			{
				this.dfArztNr2.Number = this.nArztNr;
				this.dfArztNr.Number = this.nArztNr2;
				this.nArztNr = this.dfArztNr.Number;
				this.nArztNr2 = this.dfArztNr2.Number;
			}
			else if (this.strPraxArt == "1") 
			{
				this.dfArztNr2.Number = this.nArztNr2;
				this.dfArztNr.Number = this.nArztNr;
			}
			// Else !13.04.06
			// Set nArztNr2  = NUMBER_Null
			// Set dfArztNr2 = NUMBER_Null
			// 18.10.07
			// If dfArztNr2 = NUMBER_Null
			// Set dfArztNr2 = 0
			Int.SqlConnection(ref this.hSqlLe);
			Int.SqlConnection(ref this.hSqlLp);
			// 24.09.21 F4809
			if (this.nArztNr != this.nArztNr2 && this.nArztNr2 != 0) 
			{
				// Call SqlHandleExec(hSqlLe,'SELECT lehalternr, count(*), MAX(harztnr)
				// INTO :frmSpeRg.nHalterNr, :frmSpeRg.nCount, :frmSpeRg.nArztNr
				// FROM h, le
				// WHERE harztnr=learztnr and hhalternr=lehalternr
				// AND (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.dfArztNr2)
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				// AND lerechnr IS NOT NULL GROUP BY 1 HAVING count(*)=1', 'Fehler Holen Halter nur einmal vorhanden', nErr)
				Int.SqlHandleExec(this.hSqlLe, @"SELECT hhalternr, count(*), MAX(harztnr)
INTO :frmSpeRg.nHalterNr, :frmSpeRg.nCount, :frmSpeRg.nArztNr
FROM h
WHERE (harztnr=:frmSpeRg.nArztNr OR harztnr=:frmSpeRg.dfArztNr2)
AND hhalternr IN
(SELECT distinct lehalternr
FROM le
WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.dfArztNr2)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND lerechnr IS NOT NULL)
GROUP BY 1 HAVING count(*)=1", "Fehler Holen Halter nur einmal vorhanden", ref Var.nErr);
				Var.strDummy = "";
				this.nFetchLe = this.hSqlLe.FetchNext();
				while (this.nFetchLe != Sys.FETCH_EOF) 
				{
					Var.strDummy = Var.strDummy + ", " + this.nArztNr.ToString(0) + "/H" + this.nHalterNr.ToString(0);
					this.nFetchLe = this.hSqlLe.FetchNext();
				}
				this.hSqlLe.Commit();
				if (Var.strDummy != "") 
				{
					Sal.MessageBox(@"Es gibt Halter, die nur einmal vorhanden sind. Bitte berichtigen Sie dies vor dem Rechnungsdruck.
Dies sind die betroffenen Halter:

" + Var.strDummy.Mid(2, 32000), "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
					this.DestroyWindow();
				}
			}

			Sal.WaitCursor(false);
			// 21.11.16 Ä1445
			// Set cbUeberw = TRUE
			this.cbUeberw.Checked = false;

			this.cbA4.Checked = true;
			// 28.07.14 F2100
			Int.SqlIstDa(@"FROM le WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.dfArztNr2)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND lerechnr IS NOT NULL", ref this.bExists);
			if (this.bExists) 
			{
				// Set cbAbrZeit = FALSE
				// Call SalDisableWindowAndLabel( cbAbrZeit )
				// Call SalDisableWindow( dfAbrZeit )
			}
			// 19.12.19 lt. SD
			if (this.dfArztNr.Number == 695 || this.dfArztNr.Number == 696) 
			{
				this.cbAbrZeit.Checked = true;
				Sal.MessageBox("Bitte Text für Abrechnungszeitraum eingeben.", "Schmidt", (Sys.MB_Ok | Sys.MB_IconExclamation));
				this.dfAbrZeit.SetFocus();
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Destroy event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmSpeRg_OnSAM_Destroy(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlLe.Disconnect();
			this.hSqlLp.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// cbA4 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbA4_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.cbA4_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbA4_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (!(this.cbA4.Checked)) 
			{
				this.cbUeberw.Checked = false;
			}
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				// On SAM_Click
				
				// XXXXX
				
				// If SalIsNull(dfA1von)
				
				// Set dfA1von = 1
				
				// If SalIsNull(dfA1bis)
				
				// Set dfA1bis = 99999
				
				// If SalIsNull(dfA2von)
				
				// Set dfA2von = 1
				
				// If SalIsNull(dfA2bis)
				
				// Set dfA2bis = 99999
				
				// 13.04.06
				
				// Set strPFehler = ''
				
				// Set strSelect = 'SELECT learztnr, lehalternr, lerechnr
				
				// INTO :frmSpeRg.nPArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nRechNr
				
				// FROM le,h WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.dfArztNr2)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND harztnr=learztnr AND hhalternr=lehalternr AND (hland IS NULL OR hland = \'--\')
				
				// GROUP BY 1,2,3'
				
				// Call SqlHandleExecX(hSqlLe,strSelect,'Prüfe ob Land vorhanden')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// While nFetchLe != FETCH_EOF
				
				// Set strPFehler = strPFehler || SalNumberToStrX(nPArztNr,0) || ' /H ' || SalNumberToStrX(nHalterNr,0) || '
				
				// '
				
				// Call PalLog('SpeRg ohne Land: ' || SalNumberToStrX(nPArztNr,0) || ' /H ' || SalNumberToStrX(nHalterNr,0))
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// Call SqlCommit(hSqlLe)
				
				// If strPFehler != ''
				
				// Call SalMessageBox('Bei folgenden Haltern fehlt das Land:
				
				// ' || strPFehler,'Achtung', MB_Ok|MB_IconExclamation)
				
				// Else
				
				// Call SalWaitCursor( TRUE )
				
				// 28.01.99
				
				// Set bInsert = FALSE
				
				// Set strSelect = 'SELECT lephalternr, leprechnr, lepposnr, max(lepdatum), count(*)
				
				// INTO :frmSpeRg.nHalterNr, :frmSpeRg.nRechNr, :frmSpeRg.nPosNr, :frmSpeRg.dtDatum,  , :frmSpeRg.nCount
				
				// FROM lep WHERE leparztnr=:frmSpeRg.nArztNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// GROUP BY 1,2,3'
				
				// Call SqlHandleExecX(hSqlLe,strSelect,'Prüfe Count 24-31')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// While nFetchLe != FETCH_EOF
				
				// Set nUeber = SalNumberMod(nCount, 31.5)
				
				// If nUeber > 24
				
				// Set bInsert = TRUE
				
				// If bInsert
				
				// Call SqlImmed('INSERT INTO lep (lepla, lepbearbeiter, leparztnr, lephalternr, lepposnr, lepdatum, lepmwst,
				
				// lebearbdatum, leprechnr, lepzeidat, leptext, lepdm)
				
				// VALUES( \'L\', :frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr,
				
				// :frmSpeRg.dtDatum, :nMwStVoll, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNr, 2100-12-31, 1, 0)')
				
				// Call SqlImmed('INSERT INTO lep (lepla, lepbearbeiter, leparztnr, lephalternr, lepposnr, lepdatum, lepmwst,
				
				// lebearbdatum, leprechnr, lepzeidat, leptext, lepdm)
				
				// VALUES( \'L\', :frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr,
				
				// :frmSpeRg.dtDatum, :nMwStVoll, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNr, 2100-12-31, 1, 0)')
				
				// While nUeber < 32
				
				// Set nUeber = nUeber + 1
				
				// Call SqlImmed('INSERT INTO lep (lepla, lepbearbeiter, leparztnr, lephalternr, lepposnr, lepdatum, lepmwst,
				
				// lebearbdatum, leprechnr, lepzeidat, leptext, lepdm)
				
				// VALUES( \'L\', :frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr,
				
				// :frmSpeRg.dtDatum, :nMwStVoll, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNr, 2100-12-31, 1, 0)')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// Set bInsert = FALSE
				
				// Call SqlCommit( hSqlLe )
				
				// 28.01.99
				
				// If Not SalIsNull(dfArztNr2)
				
				// Set bInsert = FALSE
				
				// Set strSelect = 'SELECT lephalternr, leprechnr, lepposnr, max(lepdatum), count(*)
				
				// INTO :frmSpeRg.nHalterNr, :frmSpeRg.nRechNr, :frmSpeRg.nPosNr, :frmSpeRg.dtDatum,  , :frmSpeRg.nCount
				
				// FROM lep WHERE leparztnr=:frmSpeRg.nArztNr2
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// GROUP BY 1,2,3'
				
				// Call SalWaitCursor( TRUE )
				
				// Call SqlHandleExecX(hSqlLe,strSelect,'Prüfe Count 24-31')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// While nFetchLe != FETCH_EOF
				
				// Set nUeber = SalNumberMod(nCount, 31)
				
				// If nUeber > 24
				
				// Set bInsert = TRUE
				
				// If bInsert
				
				// Call SqlImmed('INSERT INTO lep (lepla, lepbearbeiter, leparztnr, lephalternr, lepposnr, lepdatum, lepmwst,
				
				// lebearbdatum, leprechnr, lepzeidat, leptext, lepdm)
				
				// VALUES( \'A\', :frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr,
				
				// :frmSpeRg.dtDatum, :nMwStVoll, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNr, 2100-12-31, 1, 0)')
				
				// Call SqlImmed('INSERT INTO lep (lepla, lepbearbeiter, leparztnr, lephalternr, lepposnr, lepdatum, lepmwst,
				
				// lebearbdatum, leprechnr, lepzeidat, leptext, lepdm)
				
				// VALUES( \'A\', :frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr,
				
				// :frmSpeRg.dtDatum, :nMwStVoll, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNr, 2100-12-31, 1, 0)')
				
				// While nUeber < 32
				
				// Set nUeber = nUeber + 1
				
				// Call SqlImmed('INSERT INTO lep (lepla, lepbearbeiter, leparztnr, lephalternr, lepposnr, lepdatum, lepmwst,
				
				// lebearbdatum, leprechnr, lepzeidat, leptext, lepdm)
				
				// VALUES( \'A\', :frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr,
				
				// :frmSpeRg.dtDatum, :nMwStVoll, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNr, 2100-12-31, 1, 0)')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// Set bInsert = FALSE
				
				// Call SqlCommit( hSqlLe )
				
				// Call SqlIstDa(' FROM LE WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.nArztNr2)
				
				// AND (lehalternr=0 OR lehalternr IS NULL)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum',bExists)
				
				// If Not bExists
				
				// Call SqlIstDa(' FROM LEP WHERE (leparztnr=:frmSpeRg.nArztNr OR leparztnr=:frmSpeRg.nArztNr2)
				
				// AND (lephalternr=0 OR lephalternr IS NULL)
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum',bExists)
				
				// If bExists
				
				// Call SalMessageBox( 'Es gibt noch Halter mit der Nr.0','Fehler',
				
				// MB_Ok|MB_IconExclamation )
				
				// If Not bExists
				
				// 28.09.98
				
				// Call SqlImmed('UPDATE lep SET lepmwst= :nMwStVoll WHERE lepmwst=0 AND leptext=1')
				
				// Set nRechZaehl = 0
				
				// Set dtRechDat = SalDateCurrent()
				
				// If cbOhneAbr=TRUE
				
				// Set bAufschlag=FALSE
				
				// Else
				
				// Call SqlIstDa(' FROM AU WHERE auarztnr=:frmSpeRg.nArztNr',bAufschlag)
				
				// If bAufschlag
				
				// Call SqlImmedSel('SELECT augrenze,audm,aukzab,aurgtext
				
				// INTO :frmSpeRg.nAuGrenze, :frmSpeRg.nAuDM, :frmSpeRg.nAuKZ, :frmSpeRg.strAuRgText
				
				// FROM AU WHERE auarztnr=:frmSpeRg.nArztNr')
				
				// Call SqlImmedSel('SELECT max(rkrechnr) INTO :frmSpeRg.nRechNr
				
				// FROM RK WHERE rkarztnr=:frmSpeRg.nArztNr AND rkrechnr <999990')
				
				// Call SqlImmedSel('SELECT max(lerechnr) INTO :frmSpeRg.nRechNrLe
				
				// FROM LE WHERE learztnr=:frmSpeRg.nArztNr')
				
				// If nRechNrLe > nRechNr
				
				// Set nRechNr = nRechNrLe
				
				// Set strSelect = 'SELECT lehalternr,leposnr,lerechnr
				
				// INTO :frmSpeRg.nHalterNr,:frmSpeRg.nPosNr, :frmSpeRg.nRechNrLe
				
				// FROM h,le WHERE learztnr=:frmSpeRg.nArztNr
				
				// AND (lerechnr IS NULL Or lerechnr BETWEEN :frmSpeRg.dfA1von AND :frmSpeRg.dfA1bis)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND learztnr=harztnr AND lehalternr = hhalternr
				
				// ORDER BY hnn, hvn, hhalternr'
				
				// Call SalWaitCursor( TRUE )
				
				// Call SqlHandleExecX(hSqlLe,strSelect,'Lesen Halter bei RechDruck')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// While nFetchLe != FETCH_EOF
				
				// If nRechNrLe = NUMBER_Null
				
				// Set nRechNr = nRechNr +1
				
				// Set nRechNrLe = nRechNr
				
				// If SqlImmedX('UPDATE LE SET
				
				// lerechnr = :frmSpeRg.nRechNr,
				
				// lerechdat = :frmSpeRg.dtRechDat
				
				// WHERE learztnr=:frmSpeRg.nArztNr
				
				// AND lehalternr = :frmSpeRg.nHalterNr
				
				// AND leposnr = :frmSpeRg.nPosNr
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// If SqlImmedX('UPDATE LEP SET leprechnr = :frmSpeRg.nRechNr
				
				// WHERE leparztnr=:frmSpeRg.nArztNr
				
				// AND lephalternr = :frmSpeRg.nHalterNr
				
				// AND lepposnr = :frmSpeRg.nPosNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// ------------------------AUFSCHLÄGE-----------------
				
				// Set strLA = 'L'
				
				// If bAufschlag
				
				// Call SqlImmedSel('SELECT sum(lepdm),max(lepdatum) FROM LEP
				
				// INTO :frmSpeRg.nRechSumme, :frmSpeRg.dtDatum
				
				// WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND lepposnr = :frmSpeRg.nPosNr')
				
				// If nAuKZ=1 And nRechSumme>=nAuGrenze
				
				// 04.06.07 F182
				
				// If dtDatum < 2007-01-01
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)')
				
				// Else
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)')
				
				// XXXXX 15.03.99  And nRechSumme >0
				
				// If nAuKZ=0 And nRechSumme<=nAuGrenze And nRechSumme >0
				
				// 04.06.07 F182
				
				// If dtDatum < 2007-01-01
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)')
				
				// Else
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)')
				
				// If cbAbrZeit = TRUE
				
				// Set strAuRgText = 'Abrechnungszeitraum vom ' || dfAbrZeit
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
				
				// :frmSpeRg.strAuRgText, NULL, 0,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 1980-01-01)')
				
				// Else
				
				// 27.09.06 F66
				
				// If SqlImmedX('UPDATE LEP SET leprechnr = :frmSpeRg.nRechNrLe
				
				// WHERE leparztnr=:frmSpeRg.nArztNr
				
				// AND lephalternr = :frmSpeRg.nHalterNr
				
				// AND lepposnr = :frmSpeRg.nPosNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND leprechnr IS NULL')
				
				// 19.02.04 für Tierseuchenkassenabrechnungen
				
				// If nArztNr >=9000 and nArztNr <= 9999
				
				// Call SqlImmed('DELETE FROM LEP
				
				// WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lephalternr = :frmSpeRg.nHalterNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND lepposnr = :frmSpeRg.nPosNr
				
				// AND lepzeidat = 2199-12-31')
				
				// Call SqlImmedSel('SELECT SUM(@ROUND(lepdm+(lepdm * lepmwst / 100),2)), MAX(lepdatum), MAX(lepmwst) FROM LEP
				
				// INTO :frmSpeRg.nRechSumme, :frmSpeRg.dtDatum, :frmSpeRg.nSBMMwSt
				
				// WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lephalternr = :frmSpeRg.nHalterNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND lepposnr = :frmSpeRg.nPosNr')
				
				// Call SqlImmedSel('select st1, stgeb INTO :frmSpeRg.nSBMSt1, :frmSpeRg.nSBMStGeb from a, st where astaffel=stnr and aarztnr = :frmSpeRg.nArztNr')
				
				// Set nAuDM = nPorto1 + nSBMStGeb + SalNumberRound(nSBMSt1 * nRechSumme) / 100
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, \'L\', :frmSpeRg.nSBMMwSt,
				
				// \'Auslagen des Tierarztes\', :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-31)')
				
				// Set strMZF = '11' || PalNullen(nArztNr,4) || PalNullen(nRechNrLe,6)
				
				// Set strMZF = strMZF || PalPruefZiffer(strMZF)
				
				// Set strRT1 = ''
				
				// Set strRT2 = ''
				
				// Call SqlImmedSel('SELECT RTZEILE1, RTZEILE2
				
				// INTO :frmSpeRg.strRT1, :frmSpeRg.strRT2
				
				// FROM RT WHERE RTARZTNR = :frmSpeRg.nArztNr')
				
				// Call BerechneBrutto('L')
				
				// If SqlImmedX('UPDATE LE SET
				
				// lezeile1 = :frmSpeRg.strRT1,
				
				// lezeile2 = :frmSpeRg.strRT2,
				
				// lemzf = :frmSpeRg.strMZF,
				
				// lebrutto = :frmSpeRg.nBrutto
				
				// WHERE learztnr=:frmSpeRg.nArztNr
				
				// AND lehalternr = :frmSpeRg.nHalterNr
				
				// AND leposnr = :frmSpeRg.nPosNr
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// Call SalStatusSetText(hWndForm,'Speichere Rech-Nr.: '||SalNumberToStrX(nArztNr,0)||
				
				// '/'||SalNumberToStrX(nRechNrLe,0))
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// Call SqlCommit( hSqlLe )
				
				// If Not SalIsNull(dfArztNr2)
				
				// If cbOhneAbr=TRUE
				
				// Set bAufschlag=FALSE
				
				// Else
				
				// Call SqlIstDa(' FROM AU WHERE auarztnr=:frmSpeRg.nArztNr2',bAufschlag)
				
				// If bAufschlag
				
				// Call SqlImmedSel('SELECT augrenze,audm,aukzab,aurgtext
				
				// INTO :frmSpeRg.nAuGrenze, :frmSpeRg.nAuDM, :frmSpeRg.nAuKZ, :frmSpeRg.strAuRgText
				
				// FROM AU WHERE auarztnr=:frmSpeRg.nArztNr2')
				
				// Call SqlImmedSel('SELECT max(rkrechnr) INTO :frmSpeRg.nRechNr
				
				// FROM RK WHERE rkarztnr=:frmSpeRg.nArztNr2 AND rkrechnr<999990')
				
				// Call SqlImmedSel('SELECT max(lerechnr) INTO :frmSpeRg.nRechNrLe
				
				// FROM LE WHERE learztnr=:frmSpeRg.nArztNr2')
				
				// If nRechNrLe > nRechNr
				
				// Set nRechNr = nRechNrLe
				
				// Set strSelect = 'SELECT lehalternr,leposnr,lerechnr
				
				// INTO :frmSpeRg.nHalterNr,:frmSpeRg.nPosNr, :frmSpeRg.nRechNrLe
				
				// FROM h,le WHERE learztnr=:frmSpeRg.nArztNr2
				
				// AND (lerechnr IS NULL Or lerechnr BETWEEN :frmSpeRg.dfA2von AND :frmSpeRg.dfA2bis)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND learztnr=harztnr AND lehalternr = hhalternr
				
				// ORDER BY hnn, hvn, hhalternr'
				
				// Call SalWaitCursor( TRUE )
				
				// Call SqlHandleExecX(hSqlLe,strSelect,'Lesen Halter bei RechDruck')
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// While nFetchLe != FETCH_EOF
				
				// If nRechNrLe = NUMBER_Null
				
				// Set nRechNr = nRechNr +1
				
				// Set nRechNrLe = nRechNr
				
				// If SqlImmedX('UPDATE LE SET
				
				// lerechnr = :frmSpeRg.nRechNr,
				
				// lerechdat = :frmSpeRg.dtRechDat
				
				// WHERE learztnr=:frmSpeRg.nArztNr2
				
				// AND lehalternr = :frmSpeRg.nHalterNr
				
				// AND leposnr = :frmSpeRg.nPosNr
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// If SqlImmedX('UPDATE LEP SET leprechnr = :frmSpeRg.nRechNr
				
				// WHERE leparztnr=:frmSpeRg.nArztNr2
				
				// AND lephalternr = :frmSpeRg.nHalterNr
				
				// AND lepposnr = :frmSpeRg.nPosNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// ------------------------AUFSCHLÄGE-----------------
				
				// Set strLA = 'A'
				
				// If bAufschlag
				
				// DATEV #39 #49 und #52
				
				// Call SqlIstDa(' FROM LEP WHERE leparztnr=:frmSpeRg.nArztNr
				
				// AND lepzeidat = 2199-12-30
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND lepposnr = :frmSpeRg.nPosNr',bExists)
				
				// If Not bExists
				
				// Call SqlImmedSel('SELECT sum(lepdm),max(lepdatum) FROM LEP
				
				// INTO :frmSpeRg.nRechSumme, :frmSpeRg.dtDatum
				
				// WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND lepposnr = :frmSpeRg.nPosNr')
				
				// If nAuKZ=1 And nRechSumme>=nAuGrenze
				
				// 04.06.07 F182
				
				// If dtDatum < 2007-01-01
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )')
				
				// Else
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )')
				
				// XXXXX 15.03.99  And nRechSumme >0
				
				// If nAuKZ=0 And nRechSumme<=nAuGrenze And nRechSumme >0
				
				// 04.06.07 F182
				
				// If dtDatum < 2007-01-01
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )')
				
				// Else
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
				
				// :frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )')
				
				// If cbAbrZeit = TRUE
				
				// Set strAuRgText = 'Abrechnungszeitraum vom ' || dfAbrZeit
				
				// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
				
				// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
				
				// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
				
				// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
				
				// :frmSpeRg.strAuRgText, NULL, 0,
				
				// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 1980-01-01 )')
				
				// Else
				
				// 27.09.06 F66
				
				// If SqlImmedX('UPDATE LEP SET leprechnr = :frmSpeRg.nRechNrLe
				
				// WHERE leparztnr=:frmSpeRg.nArztNr2
				
				// AND lephalternr = :frmSpeRg.nHalterNr
				
				// AND lepposnr = :frmSpeRg.nPosNr
				
				// AND lepbearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND leprechnr IS NULL')
				
				// Set strMZF = '11' || PalNullen(nArztNr2,4) || PalNullen(nRechNrLe,6)
				
				// Set strMZF = strMZF || PalPruefZiffer(strMZF)
				
				// Set strRT1 = ''
				
				// Set strRT2 = ''
				
				// Call SqlImmedSel('SELECT RTZEILE1, RTZEILE2
				
				// INTO :frmSpeRg.strRT1, :frmSpeRg.strRT2
				
				// FROM RT WHERE RTARZTNR = :frmSpeRg.nArztNr2')
				
				// Call BerechneBrutto('A')
				
				// If SqlImmedX('UPDATE LE SET
				
				// lezeile1 = :frmSpeRg.strRT1,
				
				// lezeile2 = :frmSpeRg.strRT2,
				
				// lemzf = :frmSpeRg.strMZF,
				
				// lebrutto = :frmSpeRg.nBrutto
				
				// WHERE learztnr=:frmSpeRg.nArztNr2
				
				// AND lehalternr = :frmSpeRg.nHalterNr
				
				// AND leposnr = :frmSpeRg.nPosNr
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// Call SalStatusSetText(hWndForm,' Speichere Rech-Nr.: '|| SalNumberToStrX(dfArztNr2,0)||
				
				// '/'||SalNumberToStrX(nRechNrLe,0))
				
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				
				// Call SqlCommit( hSqlLe )
				
				// If SqlImmedX('COMMIT')
				
				// Call SalFileClose(hFile)
				
				// Call SalWaitCursor( FALSE )
				
				// 05.06.07 LL-Druck
				
				// LL
				
				// Call SalModalDialog( dlgLlDruck, frmMain, 'Rechnungen.lst', '' )
				
				// 15.09.98
				
				// Call SqlImmedSel('SELECT alogo INTO :frmSpeRg.strLogo FROM a WHERE aarztnr = :frmSpeRg.nArztNr')
				
				// If strLogo != ''
				
				// Set strDrucker= 'RECH_LOG.RPT'
				
				// 20.09.99
				
				// Call SqlIstDa('FROM dk WHERE dkdruck = \'RECH_LOG\' ', bExists)
				
				// While bExists
				
				// Call SalMessageBox('Rechnungsdruck mit Logo ist gerade belegt.
				
				// Bitte warten Sie einen Moment und drücken Sie
				
				// erneut <Ok>.','Druck belegt', MB_Ok)
				
				// Call SqlIstDa('FROM dk WHERE dkdruck = \'RECH_LOG\' ', bExists)
				
				// Set strLogo = strLogo || '.BMP'
				
				// Set nFileSize = PalFileGetSize ( strLogo )
				
				// Set nStatus = SalFileCopy( strLogo, 'rg0000.bmp', TRUE )
				
				// Set nFileSize0 = PalFileGetSize ( 'rg0000.bmp' )
				
				// If nStatus != FILE_CopyOK
				
				// Call SalMessageBox('Das Logo fehlt !','Fehler', MB_Ok)
				
				// Call SalDestroyWindow( hWndForm)
				
				// Else If nFileSize != nFileSize0
				
				// Call SalMessageBox('Das Logo wurde nicht richtig kopiert !','Fehler', MB_Ok)
				
				// Call SalDestroyWindow( hWndForm)
				
				// 20.09.99
				
				// Call SqlImmed('INSERT INTO dk (dkdruck, dkuser) VALUES(\'RECH_LOG\', :strBNUser)')
				
				// Else
				
				// Set strDrucker= 'RECHNUNG.RPT'
				
				// 30.4.98 rech_ra.rpt
				
				// 15.11.05 If dfA1von = 0 and dfA1bis = 0
				
				// If dfA1von = 0 and dfA1bis = 0
				
				// Else
				
				// Call Ausdruck( frmSpeRg.nArztNr, dfA1von, dfA1bis, dfExempl, strDrucker )
				
				// If Not SalIsNull(dfArztNr2)
				
				// 15.09.98
				
				// Call SqlImmedSel('SELECT alogo INTO :frmSpeRg.strLogo FROM a WHERE aarztnr = :frmSpeRg.nArztNr2')
				
				// If strLogo != ''
				
				// Set strDrucker= 'RECH_LOG.RPT'
				
				// Set strLogo = strLogo || '.BMP'
				
				// Set nFileSize = PalFileGetSize ( strLogo )
				
				// Set nStatus = SalFileCopy( strLogo, 'rg0000.bmp', TRUE )
				
				// Set nFileSize0 = PalFileGetSize ( 'rg0000.bmp' )
				
				// If nStatus != FILE_CopyOK
				
				// Call SalMessageBox('Das Logo fehlt !','Fehler', MB_Ok)
				
				// Call SalDestroyWindow( hWndForm)
				
				// Else If nFileSize != nFileSize0
				
				// Call SalMessageBox('Das Logo wurde nicht richtig kopiert !','Fehler', MB_Ok)
				
				// Call SalDestroyWindow( hWndForm)
				
				// Else
				
				// Set strDrucker= 'RECHNUNG.RPT'
				
				// 15.11.05 If dfA2von = 0 and dfA2bis = 0
				
				// If dfA2von = 0 and dfA2bis = 0
				
				// Else
				
				// Call Ausdruck( frmSpeRg.dfArztNr2, dfA2von, dfA2bis, dfExempl, strDrucker )
				
				// 20.09.99
				
				// Call SqlImmed('DELETE FROM dk WHERE dkdruck = \'RECH_LOG\'
				
				// AND dkuser = :strBNUser')
				
				// If SqlImmed('UPDATE le SET lestatus=\'RgDru\'
				
				// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
				
				// If SqlImmedSel('SELECT count(*) FROM le,h INTO :frmSpeRg.nCount
				
				// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND hland NOT IN (\'CH\',\'DE\',\'--\') AND learztnr=harztnr AND lehalternr=hhalternr')
				
				// If nCount > 0
				
				// Call SalMessageBox('Bitte nach dem Druck "EU-Standard-Überweisungen" drucken.', 'Achtung', MB_Ok|MB_IconExclamation)
				
				// If SqlImmedSel('SELECT count(*) FROM le,h INTO :frmSpeRg.nCount
				
				// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				
				// AND hland = \'CH\' AND learztnr=harztnr AND lehalternr=hhalternr')
				
				// If nCount > 0
				
				// Call SalMessageBox('Bitte nach dem Druck "CHF-Überweisungen" drucken.', 'Achtung', MB_Ok|MB_IconExclamation)
				
				// Call SalDestroyWindow(hWndForm)
				
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// XXXXX
			if (this.dfA1von.IsEmpty()) 
			{
				this.dfA1von.Number = 1;
			}
			if (this.dfA1bis.IsEmpty()) 
			{
				this.dfA1bis.Number = 999989; // 12.04.12 F1283 99999 -> 999989
			}
			if (this.dfA2von.IsEmpty()) 
			{
				this.dfA2von.Number = 1;
			}
			if (this.dfA2bis.IsEmpty()) 
			{
				this.dfA2bis.Number = 999989; // 12.04.12 F1283 99999 -> 999989
			}
			// 13.04.06
			this.strPFehler = "";
			this.strSelect = @"SELECT learztnr, lehalternr, lerechnr
INTO :frmSpeRg.nPArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nRechNr
FROM le,h WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.dfArztNr2)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND harztnr=learztnr AND hhalternr=lehalternr AND (hland IS NULL OR hland = '--') AND hdeaktiv IS NULL
GROUP BY 1,2,3";
			Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Prüfe ob Land vorhanden", ref Var.nErr);
			this.nFetchLe = this.hSqlLe.FetchNext();
			while (this.nFetchLe != Sys.FETCH_EOF) 
			{
				this.strPFehler = this.strPFehler + this.nPArztNr.ToString(0) + " /H " + this.nHalterNr.ToString(0) + @"
";
				Int.PalLog("SpeRg ohne Land: " + this.nPArztNr.ToString(0) + " /H " + this.nHalterNr.ToString(0));
				this.nFetchLe = this.hSqlLe.FetchNext();
			}
			this.hSqlLe.Commit();
			if (this.strPFehler != "") 
			{
				Sal.MessageBox(@"Bei folgenden Haltern fehlt das Land:
" + this.strPFehler, "Achtung", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else
			{

				Int.SqlIstDa(@" FROM LE WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.nArztNr2)
AND (lehalternr=0 OR lehalternr IS NULL)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum", ref this.bExists);
				if (!(this.bExists)) 
				{
					Int.SqlIstDa(@" FROM LEP WHERE (leparztnr=:frmSpeRg.nArztNr OR leparztnr=:frmSpeRg.nArztNr2)
AND (lephalternr=0 OR lephalternr IS NULL)
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum", ref this.bExists);
				}
				if (this.bExists) 
				{
					Sal.MessageBox("Es gibt noch Halter mit der Nr.0", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
				}
				if (!(this.bExists)) 
				{
					// 19.11.14 F2181
					Int.SqlIstDa(@"FROM lep
WHERE lepbearbeiter = :frmSpeRg.strBearbeiter AND lebearbdatum = :frmSpeRg.dtBearbDatum
AND (leparztnr=:frmSpeRg.nArztNr OR leparztnr=:frmSpeRg.nArztNr2)
AND lepmwst=0 AND lepreverseversion=0 AND leptext=0 AND lepdm>0", ref this.bExists);
					if (this.bExists) 
					{
						Sal.MessageBox("Es wurden Rechnungen mit 0% MwSt. gefunden, ohne daß Informationen über den Grund vorliegen !", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
					}
					else
					{
						// 28.09.20 Ä1900
						this.strPFehler = "";
						if (this.nArztNr != this.nArztNr2 && this.nArztNr2 != 0) 
						{
							this.strSelect = @"SELECT hhalternr, count(*)
INTO :frmSpeRg.nHalterNr, :frmSpeRg.nCount
FROM h, le
WHERE (harztnr=:frmSpeRg.nArztNr OR harztnr=:frmSpeRg.nArztNr2)
and hhalternr in
(select lehalternr from le where (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.nArztNr2) and lebearbeiter = :frmSpeRg.strBearbeiter AND lebearbdatum = :frmSpeRg.dtBearbDatum)
group by 1 having count(*)<2";
							Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Prüfe ob Halter bei beiden Arztnummern vorhanden", ref Var.nErr);
							this.nFetchLe = this.hSqlLe.FetchNext();
							while (this.nFetchLe != Sys.FETCH_EOF) 
							{
								this.strPFehler = this.strPFehler + " /H " + this.nHalterNr.ToString(0) + @"
";
								Int.PalLog("SpeRg beide Halter: " + this.nArztNr.ToString(0) + " /H " + this.nHalterNr.ToString(0));
								this.nFetchLe = this.hSqlLe.FetchNext();
							}
							this.hSqlLe.Commit();
						}
						if (this.strPFehler != "") 
						{
							Sal.MessageBox(@"Bei folgenden Haltern ist der Halter nur bei einer Arztnummer angelegt:
" + this.strPFehler, "Abrechnung " + this.nArztNr.ToString(0) + " und " + this.nArztNr2.ToString(0), (Sys.MB_Ok | Sys.MB_IconExclamation));
						}
						else
						{
							Sal.WaitCursor(true);

							// 28.09.98
							Int.SqlImmed("UPDATE lep SET lepmwst= :nMwStVoll WHERE lepmwst=0 AND leptext=1");
							// 25.07.08 A190 Einzüge
							this.strPFehler = "";
							this.strSelect = @"SELECT learztnr, lehalternr, leeinzug, leblz, lekonto
INTO :frmSpeRg.nPArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nEinzug, :frmSpeRg.strBLZ, :frmSpeRg.strKonto
FROM le WHERE (learztnr=:frmSpeRg.nArztNr OR learztnr=:frmSpeRg.dfArztNr2)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND leeinzug IS NOT NULL
GROUP BY 1,2,3,4,5";
							Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Prüfe ob Bankeinzug", ref Var.nErr);
							this.nFetchLe = this.hSqlLe.FetchNext();
							while (this.nFetchLe != Sys.FETCH_EOF) 
							{
								// 15.09.11 F1023
								if (this.nEinzug == SalNumber.Null) 
								{
									this.nEinzug = 0;
								}
								// 20.08.08
								Int.SqlImmedSel(@"SELECT hbankeinzug, hbezblz, hbezkonto
INTO :frmSpeRg.nEinzugAlt, :frmSpeRg.strBLZAlt, :frmSpeRg.strKontoAlt FROM h WHERE harztnr = :frmSpeRg.nPArztNr AND hhalternr = :frmSpeRg.nHalterNr AND hdeaktiv IS NULL ");
								// 14.02.12 Ä724 +  or strBLZ != strBLZAlt or strKonto != strKontoAlt
								if (this.nEinzug != this.nEinzugAlt || this.strBLZ != this.strBLZAlt || this.strKonto != this.strKontoAlt) 
								{

									if (this.nEinzug == 1) 
									{
										this.strEinzug = "ja";
									}
									else
									{
										this.strEinzug = "nein";
									}
									this.strPFehler = this.strPFehler + this.nPArztNr.ToString(0) + " /H " + this.nHalterNr.ToString(0) + " Einzug:" + this.strEinzug + " BLZ: " + this.strBLZ + " Konto:" + this.strKonto + @"
";
									// 14.02.12 Ä724
									// Call SqlImmed('UPDATE h SET hbankeinzug = :frmSpeRg.nEinzug, hblz = :frmSpeRg.strBLZ, hkonto = :frmSpeRg.strKonto WHERE harztnr = :frmSpeRg.nPArztNr AND hhalternr = :frmSpeRg.nHalterNr')
									// 23.04.12 Ä752 keine autmatische Änderung mehr gewünscht
									// Call SqlImmed('UPDATE h SET hbankeinzug = :frmSpeRg.nEinzug, hbezblz = :frmSpeRg.strBLZ, hbezkonto = :frmSpeRg.strKonto WHERE harztnr = :frmSpeRg.nPArztNr AND hhalternr = :frmSpeRg.nHalterNr')

									Int.PalLog("SpeRg BEZ: " + this.nPArztNr.ToString(0) + " /H " + this.nHalterNr.ToString(0) + " " + this.nEinzug.ToString(0) + " " + this.strBLZ + " " + this.strKonto);
								}
								this.nFetchLe = this.hSqlLe.FetchNext();
							}
							this.hSqlLe.Commit();
							// 14.12.22 löschen laut SD
							// If strPFehler != ''
							// Call SalMessageBox('Bei folgenden Haltern hat die Praxis Bankeinzugsinformationen im Halterstamm geändert :
							// ' || strPFehler || '
							// 
							// Lt.H.Sasse bitte mit Mitglied abstimmen und evtl. in Halterstamm korrigieren.','Achtung', MB_Ok|MB_IconExclamation)
							// Call SalMessageBox('Es wurden durch die Praxis Bankeinzugs-Informationen im Halterstamm geändert.','Achtung', MB_Ok|MB_IconExclamation)

							this.nRechZaehl = 0;
							this.dtRechDat = SalDateTime.Current;
							if (this.cbOhneAbr.Checked == true) 
							{
								this.bAufschlag = false;
							}
							else
							{
								Int.SqlIstDa(" FROM AU WHERE auarztnr=:frmSpeRg.nArztNr", ref this.bAufschlag);
							}
							if (this.bAufschlag) 
							{
								Int.SqlImmedSel(@"SELECT augrenze,audm,aukzab,aurgtext
INTO :frmSpeRg.nAuGrenze, :frmSpeRg.nAuDM, :frmSpeRg.nAuKZ, :frmSpeRg.strAuRgText
FROM AU WHERE auarztnr=:frmSpeRg.nArztNr");
							}

							Int.SqlImmedSel(@"SELECT max(rkrechnr) INTO :frmSpeRg.nRechNr
FROM RK WHERE rkarztnr=:frmSpeRg.nArztNr AND rkrechnr <999989");
							Int.SqlImmedSel(@"SELECT max(lerechnr) INTO :frmSpeRg.nRechNrLe
FROM LE WHERE learztnr=:frmSpeRg.nArztNr");
							if (this.nRechNrLe > this.nRechNr) 
							{
								this.nRechNr = this.nRechNrLe;
							}
							// 18.03.21 Ä1925
							this.strSelect = @"SELECT lehalternr, leepost, leepostmail, leepostaenddat
INTO :frmSpeRg.nHalterNr,  :frmSpeRg.nEPost, :frmSpeRg.strEPostMail, :frmSpeRg.dtEPostAenDat
FROM le WHERE learztnr=:frmSpeRg.nArztNr
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum";
							Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Fehler Halter-E-Post", ref this.nCount);
							this.nFetchLe = this.hSqlLe.FetchNext();
							while (this.nFetchLe != Sys.FETCH_EOF) 
							{

								this.SetStatusBarText("Halter-E-Post Halter-Nr.: " + this.nArztNr.ToString(0) + "/" + this.nHalterNr.ToString(0));
								// 11.03.21 Ä1925 / Ä1944
								if (this.dtEPostAenDat != SalDateTime.Null) 
								{
									Int.SqlImmedSel(@"SELECT hepostaenddat, hpmemail INTO :frmSpeRg.dtEPostAenDatH, :frmSpeRg.strPMMail FROM h
WHERE harztnr = :frmSpeRg.nArztNr AND hhalternr = :frmSpeRg.nHalterNr");
									if (this.dtEPostAenDatH == SalDateTime.Null) 
									{
										this.dtEPostAenDatH = new SalDateTime(1900, 1, 1);
									}
									if (this.dtEPostAenDat > this.dtEPostAenDatH) 
									{
										if (this.nEPost == 0 || this.nEPost == SalNumber.Null) 
										{
											this.strEPostMail = "";
										}
										Int.SqlImmed(@"UPDATE h SET hpmemail = :frmSpeRg.strEPostMail, hepostaenddat = :frmSpeRg.dtEPostAenDat
WHERE harztnr = :frmSpeRg.nArztNr AND hhalternr = :frmSpeRg.nHalterNr");
										Int.PalLogTyp(Int.PalStrNum0(this.nArztNr, 4, 0) + "/H" + Int.PalStrNum0(this.nHalterNr, 5, 0) + ": E-Post-Daten von Pegasus übernommen: " + this.strEPostMail + " (H:" + Int.PalDateToStrDE(this.dtEPostAenDatH) + "/M:" + Int.PalDateToStrDE(
												this.dtEPostAenDat) + ")", 1);
									}
									else
									{
										Int.PalLogTyp(Int.PalStrNum0(this.nArztNr, 4, 0) + "/H" + Int.PalStrNum0(this.nHalterNr, 5, 0) + ": E-Post-Daten NICHT von Pegasus übernommen: " + this.strEPostMail + " (H:" + Int.PalDateToStrDE(this.dtEPostAenDatH) + "/M:" + Int.PalDateToStrDE(
												this.dtEPostAenDat) + ")", 1);
									}
								}
								this.nFetchLe = this.hSqlLe.FetchNext();
							}
							this.hSqlLe.Commit();
							// 27.08.18  + lebarcode
							// 26.11.18 Ä1805 + hbezabzug
							this.strSelect = @"SELECT lehalternr,leposnr,lerechnr, lebarcode, hbezabzug, hbezabzugtext
INTO :frmSpeRg.nHalterNr,:frmSpeRg.nPosNr, :frmSpeRg.nRechNrLe, :frmSpeRg.strBarcode,
:frmSpeRg.nBEZAbzug, :frmSpeRg.strBEZAbzugText
FROM h,le WHERE learztnr=:frmSpeRg.nArztNr
AND (lerechnr IS NULL Or lerechnr BETWEEN :frmSpeRg.dfA1von AND :frmSpeRg.dfA1bis)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND learztnr=harztnr AND lehalternr = hhalternr
ORDER BY hnn, hvn, hhalternr";
							Sal.WaitCursor(true);
							Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Lesen Halter bei RechDruck", ref Var.nErr);
							this.nFetchLe = this.hSqlLe.FetchNext();
							while (this.nFetchLe != Sys.FETCH_EOF) 
							{
								if (this.nRechNrLe == SalNumber.Null) 
								{
									this.nRechNr = this.nRechNr + 1;
									this.nRechNrLe = this.nRechNr;
									// 27.08.18 Ä1769 + Barcode
									if (this.strBarcode == "") 
									{
										this.bBarcode = true;
									}
									else
									{
										if (Int.PalCopyBCDatei("A" + Int.PalStrNullen(this.nArztNr.ToString(0), 4) + "\\" + "R" + Int.PalStrNullen(this.nRechNrLe.ToString(0), 6), this.strBarcode + "*.*", this.strBarcode + ".pdf") < 0) 
										{
											this.bBarcode = false;
										}
										else
										{
											this.bBarcode = true;
										}
									}
									if (this.bBarcode) 
									{
										if (Int.SqlImmedX(@"UPDATE LE SET
lerechnr = :frmSpeRg.nRechNr,
lerechdat = :frmSpeRg.dtRechDat
WHERE learztnr=:frmSpeRg.nArztNr
AND lehalternr = :frmSpeRg.nHalterNr
AND leposnr = :frmSpeRg.nPosNr
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum")) 
										{
											if (Int.SqlImmedX(@"UPDATE LEP SET leprechnr = :frmSpeRg.nRechNr
WHERE leparztnr=:frmSpeRg.nArztNr
AND lephalternr = :frmSpeRg.nHalterNr
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum")) 
											{
											}
										}
										// ------------------------AUFSCHLÄGE-----------------
										this.strLA = "L";
										if (this.bAufschlag) 
										{
											Int.SqlImmedSel(@"SELECT sum(lepdm),max(lepdatum) FROM LEP
INTO :frmSpeRg.nRechSumme, :frmSpeRg.dtDatum
WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND lepposnr = :frmSpeRg.nPosNr");
											if (this.nAuKZ == 1 && this.nRechSumme >= this.nAuGrenze) 
											{
												// 04.06.07 F182	15.06.20 Ä1892  + or (dtDatum >= 2020-07-01 And dtDatum <= 2020-12-31)
												if (this.dtDatum < new SalDateTime(2007, 1, 1) || (this.dtDatum >= new SalDateTime(2020, 7, 1) && this.dtDatum <= new SalDateTime(2020, 12, 31))) 
												{
													if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)")) 
													{
													}
												}
												else
												{
													if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)")) 
													{
													}
												}
											}
											// XXXXX 15.03.99  And nRechSumme >0
											if (this.nAuKZ == 0 && this.nRechSumme <= this.nAuGrenze && this.nRechSumme > 0) 
											{
												// 04.06.07 F182
												if (this.dtDatum < new SalDateTime(2007, 1, 1)) 
												{
													if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)")) 
													{
													}
												}
												else
												{
													if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30)")) 
													{
													}
												}
											}
										}
										if (this.cbAbrZeit.Checked == true) 
										{
											this.strAuRgText = "Abrechnungszeitraum vom " + this.dfAbrZeit.Text;
											if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
:frmSpeRg.strAuRgText, NULL, 0,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, '1980-01-01')")) 
											{
											}
										}
									}
									else
									{
										this.nRechNr = this.nRechNr - 1;
									}
								}
								else
								{
									// 27.09.06 F66
									if (Int.SqlImmedX(@"UPDATE LEP SET leprechnr = :frmSpeRg.nRechNrLe
WHERE leparztnr=:frmSpeRg.nArztNr
AND lephalternr = :frmSpeRg.nHalterNr
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND leprechnr IS NULL")) 
									{
									}
								}
								// 19.02.04 für Tierseuchenkassenabrechnungen 19.02.09 OTÄ187 raus
								// If nArztNr >=9000 and nArztNr <= 9999
								// Call SqlImmed('DELETE FROM LEP
								// WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
								// AND lephalternr = :frmSpeRg.nHalterNr
								// AND lepbearbeiter=:frmSpeRg.strBearbeiter
								// AND lebearbdatum=:frmSpeRg.dtBearbDatum
								// AND lepposnr = :frmSpeRg.nPosNr
								// AND lepzeidat = 2199-12-31')
								// Call SqlImmedSel('SELECT SUM(@ROUND(lepdm+(lepdm * lepmwst / 100),2)), MAX(lepdatum), MAX(lepmwst) FROM LEP
								// INTO :frmSpeRg.nRechSumme, :frmSpeRg.dtDatum, :frmSpeRg.nSBMMwSt
								// WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
								// AND lephalternr = :frmSpeRg.nHalterNr
								// AND lepbearbeiter=:frmSpeRg.strBearbeiter
								// AND lebearbdatum=:frmSpeRg.dtBearbDatum
								// AND lepposnr = :frmSpeRg.nPosNr')
								// Call SqlImmedSel('select st1, stgeb INTO :frmSpeRg.nSBMSt1, :frmSpeRg.nSBMStGeb from a, st where astaffel=stnr and aarztnr = :frmSpeRg.nArztNr')
								// Set nAuDM = nPorto1 + nSBMStGeb + SalNumberRound(nSBMSt1 * nRechSumme) / 100
								// If SqlImmedX('INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
								// LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
								// LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
								// VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, \'L\', :frmSpeRg.nSBMMwSt,
								// \'Auslagen des Tierarztes\', :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
								// 0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-31)')

								// Set strMZF = '11' || PalNullen(nArztNr,4) || PalNullen(nRechNrLe,6)
								// Set strMZF = strMZF || PalPruefZiffer(strMZF)
								// Set strRT1 = ''
								// Set strRT2 = ''
								// Call SqlImmedSel('SELECT RTZEILE1, RTZEILE2
								// INTO :frmSpeRg.strRT1, :frmSpeRg.strRT2
								// FROM RT WHERE RTARZTNR = :frmSpeRg.nArztNr')
								// 26.11.18 Ä1805
								if (this.nBEZAbzug != 0 && this.nBEZAbzug != SalNumber.Null) 
								{
									if (this.strBEZAbzugText == "") 
									{
										this.strBEZAbzugText = "Skonto";
									}
									this.PalBEZAbzug(this.nArztNr, "L");
								}

								this.BerechneBrutto("L");
								// 08.08.07 F223: +  leprechnr = :frmSpeRg.nRechNrLe
								// If SqlImmedX('UPDATE LE SET lebrutto = :frmSpeRg.nBrutto
								// WHERE learztnr=:frmSpeRg.nArztNr
								// AND lehalternr = :frmSpeRg.nHalterNr
								// AND leposnr = :frmSpeRg.nPosNr
								// AND lebearbeiter=:frmSpeRg.strBearbeiter
								// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
								if (Int.SqlImmedX(@"UPDATE LE SET lebrutto = :frmSpeRg.nBrutto
WHERE learztnr=:frmSpeRg.nArztNr
AND lehalternr = :frmSpeRg.nHalterNr
AND lerechnr = :frmSpeRg.nRechNrLe
AND leposnr = :frmSpeRg.nPosNr
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum")) 
								{
								}

								this.SetStatusBarText("Speichere Rech-Nr.: " + this.nArztNr.ToString(0) + "/" + this.nRechNrLe.ToString(0));
								this.nFetchLe = this.hSqlLe.FetchNext();
							}
							this.hSqlLe.Commit();
							if (!(this.dfArztNr2.IsEmpty())) 
							{
								if (this.cbOhneAbr.Checked == true) 
								{
									this.bAufschlag = false;
								}
								else
								{
									Int.SqlIstDa(" FROM AU WHERE auarztnr=:frmSpeRg.nArztNr2", ref this.bAufschlag);
								}
								if (this.bAufschlag) 
								{
									Int.SqlImmedSel(@"SELECT augrenze,audm,aukzab,aurgtext
INTO :frmSpeRg.nAuGrenze, :frmSpeRg.nAuDM, :frmSpeRg.nAuKZ, :frmSpeRg.strAuRgText
FROM AU WHERE auarztnr=:frmSpeRg.nArztNr2");
								}
								Int.SqlImmedSel(@"SELECT max(rkrechnr) INTO :frmSpeRg.nRechNr
FROM RK WHERE rkarztnr=:frmSpeRg.nArztNr2 AND rkrechnr<999989");
								Int.SqlImmedSel(@"SELECT max(lerechnr) INTO :frmSpeRg.nRechNrLe
FROM LE WHERE learztnr=:frmSpeRg.nArztNr2");
								if (this.nRechNrLe > this.nRechNr) 
								{
									this.nRechNr = this.nRechNrLe;
								}
								// 18.03.21 Ä1925
								this.strSelect = @"SELECT lehalternr, leepost, leepostmail, leepostaenddat
INTO :frmSpeRg.nHalterNr,  :frmSpeRg.nEPost, :frmSpeRg.strEPostMail, :frmSpeRg.dtEPostAenDat
FROM le WHERE learztnr=:frmSpeRg.nArztNr2
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum";
								Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Fehler Halter-E-Post", ref this.nCount);
								this.nFetchLe = this.hSqlLe.FetchNext();
								while (this.nFetchLe != Sys.FETCH_EOF) 
								{

									this.SetStatusBarText("Halter-E-Post Halter-Nr.: " + this.nArztNr2.ToString(0) + "/" + this.nHalterNr.ToString(0));
									// 11.03.21 Ä1925 / Ä1944
									if (this.dtEPostAenDat != SalDateTime.Null) 
									{
										Int.SqlImmedSel(@"SELECT hepostaenddat, hpmemail INTO :frmSpeRg.dtEPostAenDatH, :frmSpeRg.strPMMail FROM h
WHERE harztnr = :frmSpeRg.nArztNr2 AND hhalternr = :frmSpeRg.nHalterNr");
										if (this.dtEPostAenDatH == SalDateTime.Null) 
										{
											this.dtEPostAenDatH = new SalDateTime(1900, 1, 1);
										}
										if (this.dtEPostAenDat > this.dtEPostAenDatH) 
										{
											if (this.nEPost == 0 || this.nEPost == SalNumber.Null) 
											{
												this.strEPostMail = "";
											}
											Int.SqlImmed(@"UPDATE h SET hpmemail = :frmSpeRg.strEPostMail, hepostaenddat = :frmSpeRg.dtEPostAenDat
WHERE harztnr = :frmSpeRg.nArztNr2 AND hhalternr = :frmSpeRg.nHalterNr");
											Int.PalLogTyp(Int.PalStrNum0(this.nArztNr2, 4, 0) + "/H" + Int.PalStrNum0(this.nHalterNr, 5, 0) + ": E-Post-Daten von Pegasus übernommen: " + this.strEPostMail + " (H:" + Int.PalDateToStrDE(this.dtEPostAenDatH) + "/M:" + Int.PalDateToStrDE(
													this.dtEPostAenDat) + ")", 1);
										}
									}
									this.nFetchLe = this.hSqlLe.FetchNext();
								}
								this.hSqlLe.Commit();
								// 25.10.18 F3416 + Barcode
								this.strSelect = @"SELECT lehalternr,leposnr,lerechnr, lebarcode
INTO :frmSpeRg.nHalterNr,:frmSpeRg.nPosNr, :frmSpeRg.nRechNrLe, :frmSpeRg.strBarcode
FROM h,le WHERE learztnr=:frmSpeRg.nArztNr2
AND (lerechnr IS NULL Or lerechnr BETWEEN :frmSpeRg.dfA2von AND :frmSpeRg.dfA2bis)
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND learztnr=harztnr AND lehalternr = hhalternr
ORDER BY hnn, hvn, hhalternr";
								Sal.WaitCursor(true);
								Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Lesen Halter bei RechDruck", ref Var.nErr);
								this.nFetchLe = this.hSqlLe.FetchNext();
								while (this.nFetchLe != Sys.FETCH_EOF) 
								{
									if (this.nRechNrLe == SalNumber.Null) 
									{
										this.nRechNr = this.nRechNr + 1;
										this.nRechNrLe = this.nRechNr;
										// 27.08.18 Ä1769 + Barcode
										if (this.strBarcode == "") 
										{
											this.bBarcode = true;
										}
										else
										{
											if (Int.PalCopyBCDatei("A" + Int.PalStrNullen(this.nArztNr2.ToString(0), 4) + "\\" + "R" + Int.PalStrNullen(this.nRechNrLe.ToString(0), 6), this.strBarcode + "*.*", this.strBarcode + ".pdf") < 0) 
											{
												this.bBarcode = false;
											}
											else
											{
												this.bBarcode = true;
											}
										}
										if (this.bBarcode) 
										{
											if (Int.SqlImmedX(@"UPDATE LE SET
lerechnr = :frmSpeRg.nRechNr,
lerechdat = :frmSpeRg.dtRechDat
WHERE learztnr=:frmSpeRg.nArztNr2
AND lehalternr = :frmSpeRg.nHalterNr
AND leposnr = :frmSpeRg.nPosNr
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum")) 
											{
												if (Int.SqlImmedX(@"UPDATE LEP SET leprechnr = :frmSpeRg.nRechNr
WHERE leparztnr=:frmSpeRg.nArztNr2
AND lephalternr = :frmSpeRg.nHalterNr
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum")) 
												{
												}
											}
											// ------------------------AUFSCHLÄGE-----------------
											this.strLA = "A";
											if (this.bAufschlag) 
											{
												// DATEV #39 #49 und #52
												Int.SqlIstDa(@" FROM LEP WHERE leparztnr=:frmSpeRg.nArztNr
AND lepzeidat = '2199-12-30'
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND lepposnr = :frmSpeRg.nPosNr", ref this.bExists);
												if (!(this.bExists)) 
												{
													Int.SqlImmedSel(@"SELECT sum(lepdm),max(lepdatum) FROM LEP
INTO :frmSpeRg.nRechSumme, :frmSpeRg.dtDatum
WHERE leparztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND lepposnr = :frmSpeRg.nPosNr");
													if (this.nAuKZ == 1 && this.nRechSumme >= this.nAuGrenze) 
													{
														// 04.06.07 F182	15.06.20 Ä1892 + or (dtDatum >= 2020-07-01 And dtDatum <= 2020-12-31)
														if (this.dtDatum < new SalDateTime(2007, 1, 1) || (this.dtDatum >= new SalDateTime(2020, 7, 1) && this.dtDatum <= new SalDateTime(2020, 12, 31))) 
														{
															if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )")) 
															{
															}
														}
														else
														{
															if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )")) 
															{
															}
														}
													}
													// XXXXX 15.03.99  And nRechSumme >0
													if (this.nAuKZ == 0 && this.nRechSumme <= this.nAuGrenze && this.nRechSumme > 0) 
													{
														// 04.06.07 F182
														if (this.dtDatum < new SalDateTime(2007, 1, 1)) 
														{
															if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, 16,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )")) 
															{
															}
														}
														else
														{
															if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
:frmSpeRg.strAuRgText, :frmSpeRg.dtDatum, :frmSpeRg.nAuDM,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, 2199-12-30 )")) 
															{
															}
														}
													}
												}
											}
											if (this.cbAbrZeit.Checked == true) 
											{
												this.strAuRgText = "Abrechnungszeitraum vom " + this.dfAbrZeit.Text;
												if (Int.SqlImmedX(@"INSERT INTO LEP (LEPBEARBEITER, LEPARZTNR,
LEPHALTERNR, LEPPOSNR, LEPLA, LEPMWST, LEPRECHTEXT,
LEPDATUM, LEPDM, LEPTEXT,LEBEARBDATUM,LEPRECHNR, LEPZEIDAT)
VALUES(:frmSpeRg.strBearbeiter, :frmSpeRg.nArztNr2, :frmSpeRg.nHalterNr, :frmSpeRg.nPosNr, :frmSpeRg.strLA, :nMwStVoll,
:frmSpeRg.strAuRgText, NULL, 0,
0, :frmSpeRg.dtBearbDatum, :frmSpeRg.nRechNrLe, '1980-01-01' )")) 
												{
												}
											}
										}
										else
										{
											this.nRechNr = this.nRechNr - 1;
										}
									}
									else
									{
										// 27.09.06 F66
										if (Int.SqlImmedX(@"UPDATE LEP SET leprechnr = :frmSpeRg.nRechNrLe
WHERE leparztnr=:frmSpeRg.nArztNr2
AND lephalternr = :frmSpeRg.nHalterNr
AND lepposnr = :frmSpeRg.nPosNr
AND lepbearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum
AND leprechnr IS NULL")) 
										{
										}
									}
									// Set strMZF = '11' || PalNullen(nArztNr2,4) || PalNullen(nRechNrLe,6)
									// Set strMZF = strMZF || PalPruefZiffer(strMZF)
									// Set strRT1 = ''
									// Set strRT2 = ''
									// Call SqlImmedSel('SELECT RTZEILE1, RTZEILE2
									// INTO :frmSpeRg.strRT1, :frmSpeRg.strRT2
									// FROM RT WHERE RTARZTNR = :frmSpeRg.nArztNr2')
									// 26.11.18 Ä1805
									if (this.nBEZAbzug != 0 && this.nBEZAbzug != SalNumber.Null) 
									{
										if (this.strBEZAbzugText == "") 
										{
											this.strBEZAbzugText = "Skonto";
										}
										this.PalBEZAbzug(this.nArztNr2, "A");
									}

									this.BerechneBrutto("A");
									// 08.08.07 F223: +  leprechnr = :frmSpeRg.nRechNrLe
									// If SqlImmedX('UPDATE LE SET lebrutto = :frmSpeRg.nBrutto
									// WHERE learztnr=:frmSpeRg.nArztNr2
									// AND lehalternr = :frmSpeRg.nHalterNr
									// AND leposnr = :frmSpeRg.nPosNr
									// AND lebearbeiter=:frmSpeRg.strBearbeiter
									// AND lebearbdatum=:frmSpeRg.dtBearbDatum')
									if (Int.SqlImmedX(@"UPDATE LE SET lebrutto = :frmSpeRg.nBrutto
WHERE learztnr=:frmSpeRg.nArztNr2
AND lehalternr = :frmSpeRg.nHalterNr
AND lerechnr = :frmSpeRg.nRechNrLe
AND leposnr = :frmSpeRg.nPosNr
AND lebearbeiter=:frmSpeRg.strBearbeiter
AND lebearbdatum=:frmSpeRg.dtBearbDatum")) 
									{
									}

									this.SetStatusBarText(" Speichere Rech-Nr.: " + this.dfArztNr2.Number.ToString(0) + "/" + this.nRechNrLe.ToString(0));
									this.nFetchLe = this.hSqlLe.FetchNext();
								}
								this.hSqlLe.Commit();
							}
							if (Int.SqlImmedX("COMMIT")) 
							{
							}
							// Call SalFileClose(hFile)
							Sal.WaitCursor(false);
							// 25.06.10 OTÄ134
							App.frmMain.bRepKopie = this.cbKopie.Checked;
							// 05.06.07 LL-Druck
							// LL
							// 20.07.10
							if (this.cbS1.Checked && this.cbS2.Checked) 
							{
								App.frmMain.nRepBeilage = 3;
							}
							else if (this.cbS1.Checked) 
							{
								App.frmMain.nRepBeilage = 1;
							}
							else if (this.cbS2.Checked) 
							{
								App.frmMain.nRepBeilage = 2;
							}
							else
							{
								App.frmMain.nRepBeilage = 0;
							}

							if (this.cbA4.Checked) 
							{
								if (1 == dlgLlDruck.ModalDialog(App.frmMain, "Rechnung A4.lst", "LE")) 
								{
									// 18.02.08
									if (this.cbUeberw.Checked) 
									{
										dlgLlDruck.ModalDialog(App.frmMain, "Überweisung A4.lst", "LE");
										// 12.08.10 OTÄ420
										// If SqlImmedSel('SELECT count(*) FROM le,h INTO :frmSpeRg.nCount
										// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
										// AND lebearbeiter=:frmSpeRg.strBearbeiter
										// AND lebearbdatum=:frmSpeRg.dtBearbDatum
										// AND hland = \'AT\' AND learztnr=harztnr AND lehalternr=hhalternr')
										// If nCount > 0
										// Call SalModalDialog( dlgLlDruck, frmMain, 'Überweisung AT.lst', 'LE' )
									}
								}
							}
							else
							{
								if (1 == dlgLlDruck.ModalDialog(App.frmMain, "Rechnungen.lst", "LE")) 
								{
								}
							}
						}
					}
				}
				// 30.4.98 rech_ra.rpt
				// 15.11.05 If dfA1von = 0 and dfA1bis = 0
				// If dfA1von = 0 and dfA1bis = 0
				// Else
				// Call Ausdruck( frmSpeRg.nArztNr, dfA1von, dfA1bis, dfExempl, strDrucker )
				// If SqlImmed('UPDATE le SET lestatus=\'RgDru\'
				// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum')

				// If SqlImmedSel('SELECT count(*) FROM le,h INTO :frmSpeRg.nCount
				// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				// AND hland NOT IN (\'CH\',\'DE\',\'--\') AND learztnr=harztnr AND lehalternr=hhalternr')
				// If nCount > 0
				// Call SalMessageBox('Bitte nach dem Druck "EU-Standard-Überweisungen" drucken.', 'Achtung', MB_Ok|MB_IconExclamation)

				// If SqlImmedSel('SELECT count(*) FROM le,h INTO :frmSpeRg.nCount
				// WHERE learztnr IN (:frmSpeRg.nArztNr, :frmSpeRg.nArztNr2)
				// AND lebearbeiter=:frmSpeRg.strBearbeiter
				// AND lebearbdatum=:frmSpeRg.dtBearbDatum
				// AND hland = \'CH\' AND learztnr=harztnr AND lehalternr=hhalternr')
				// If nCount > 0
				// Call SalMessageBox('Bitte nach dem Druck "CHF-Überweisungen" drucken.', 'Achtung', MB_Ok|MB_IconExclamation)

			}
			// 14.03.19 Ä1829
			// If strParent = 'D'
			// Call frmDiskAbr.PalHoleTabelle(  )

			this.DestroyWindow();
			#endregion
		}
		
		/// <summary>
		/// cbAbrZeit WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbAbrZeit_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.cbAbrZeit_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbAbrZeit_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.dfAbrZeit.SetFocus();
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Call SalPostMsg(hWndForm, SAM_Close, 0, 0)
			this.DestroyWindow();
			#endregion
		}
		#endregion
		
		#region SqlLocals
		
		/// <summary>
		/// Container class used to group the inner classes that contain
		/// the local variables that have been extracted from methods that use sql calls.
		/// </summary>
		private class SqlLocals
		{
			
			/// <summary>
			/// Contains the local variables that have been extracted from the
			/// method that uses sql calls and might need to access local bind variables.
			/// </summary>
			public class BerechneBruttoLocals
			{
				public SalSqlHandle hSqlBrutto = SalSqlHandle.Null;
				public SalNumber nFetchBrutto = 0;
				public SalString strPLA = "";
			}
		}
		#endregion
	}
}
