// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	/// <param name="nArztNr"></param>
	/// <param name="nHalterNr"></param>
	/// <param name="nOP"></param>
	public partial class tblHistorie : SalFormTableWindow
	{
		#region Window Parameters
		public SalNumber nArztNr;
		public SalNumber nHalterNr;
		public SalNumber nOP;
		#endregion
		
		#region Window Variables
		public SalNumber nArztNr2 = 0;
		public SalNumber nFetch = 0;
		public SalNumber nCount = 0;
		public SalSqlHandle hSqlHist = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalString strTitel = "";
		public SalDateTime dtDatum = SalDateTime.Null;
		public SalNumber nRechNr = 0;
		public SalString strTyp = "";
		public SalString strBez = "";
		public SalString lsBez = "";
		public SalNumber nDM = 0;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public tblHistorie(SalNumber nArztNr, SalNumber nHalterNr, SalNumber nOP)
		{
			// Assign global reference.
			App.tblHistorie = this;
			// Window Parameters initialization.
			this.nArztNr = nArztNr;
			this.nHalterNr = nHalterNr;
			this.nOP = nOP;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static tblHistorie CreateWindow(Control owner, SalNumber nArztNr, SalNumber nHalterNr, SalNumber nOP)
		{
			tblHistorie frm = new tblHistorie(nArztNr, nHalterNr, nOP);
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static tblHistorie FromHandle(SalWindowHandle handle)
		{
			return ((tblHistorie)SalWindow.FromHandle(handle, typeof(tblHistorie)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// tblHistorie WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblHistorie_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblHistorie_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblHistorie_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this, 0xbfffbf);
			Int.SqlImmedSel("SELECT ANR2 INTO :tblHistorie.nArztNr2 FROM A WHERE AARZTNR = :tblHistorie.nArztNr");
			if (this.nArztNr2 == 0) 
			{
				this.nArztNr2 = this.nArztNr;
			}
			Int.SqlImmedSel(@"SELECT hti || hvn || ' ' || hnn || hname2
into :tblHistorie.strTitel
from H where hhalternr=:tblHistorie.nHalterNr and harztnr=:tblHistorie.nArztNr AND hdeaktiv IS NULL");
			this.strTitel = this.strTitel + "/ OP : â‚¬ " + Int.PalStrNum(this.nOP, 8, 2);
			this.SetText(this.strTitel);

			Sal.WaitCursor(true);
			Int.SqlConnection(ref this.hSqlHist);
			// RK
			this.strSelect = @"SELECT rkrechdat, rkrechnr, 'Rg', 'Rechnung erstellt', (rkdmleis+rkdmarzn)
INTO :dtDatum, :nRechNr, :strTyp, :strBez, :nDM
FROM rk WHERE " + Int.PalArztNr("rk", this.nArztNr, this.nArztNr2) + @"
AND rkhalternr = :tblHistorie.nHalterNr AND rkdeaktiv IS NULL";
			Int.SqlHandleExec(this.hSqlHist, this.strSelect, "Fehler", ref this.nCount);
			this.nFetch = this.hSqlHist.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				if (this.nRechNr < 999990) 
				{
					Var.nRow = this.InsertRow(Sys.TBL_MaxRow);
					this.colDatum.DateTime = this.dtDatum;
					this.colRgNr.Number = this.nRechNr;
					this.colTyp.Text = this.strTyp;
					this.colBez.Text = this.strBez;
					this.colDM.Number = this.nDM;
					// Call VisTblSetRowColor(tblHistorie, nRow, COLOR_Red)
					XSal.TblSetRowBackColor(this, Var.nRow, 0xbfbfff);
				}
				this.nFetch = this.hSqlHist.FetchNext();
			}
			this.hSqlHist.Commit();
			// ZA
			this.strSelect = @"SELECT zabuchdat, zarechnr, 'Za',
@CHOOSE(zakz, NULL, 'Teilzahlung', 'Vollzahlung', 'Vollzahlung, Mahngeb.ausgebucht', 'ausgebucht', 'ausgebucht, da MB-Kosten zu hoch'),
zadm
INTO :dtDatum, :nRechNr, :strTyp, :strBez, :nDM
FROM za WHERE " + Int.PalArztNr("za", this.nArztNr, this.nArztNr2) + @"
AND zahalternr = :tblHistorie.nHalterNr AND zadeaktiv IS NULL";
			Int.SqlHandleExec(this.hSqlHist, this.strSelect, "Fehler", ref this.nCount);
			this.nFetch = this.hSqlHist.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				Var.nRow = this.InsertRow(Sys.TBL_MaxRow);
				this.colDatum.DateTime = this.dtDatum;
				this.colRgNr.Number = this.nRechNr;
				this.colTyp.Text = this.strTyp;
				this.colBez.Text = this.strBez;
				this.colDM.Number = this.nDM;
				// Call VisTblSetRowColor(tblHistorie, nRow, COLOR_Yellow)
				XSal.TblSetRowBackColor(this, Var.nRow, 0xbfffff);
				this.nFetch = this.hSqlHist.FetchNext();
			}
			this.hSqlHist.Commit();
			// MA
			this.strSelect = @"SELECT madatum, marechnr, 'Mg',
'Mahnung MS ' || mams, madmgeb
INTO :dtDatum, :nRechNr, :strTyp, :strBez, :nDM
FROM rk,ma WHERE " + Int.PalArztNr("ma", this.nArztNr, this.nArztNr2) + @"
AND rkhalternr = :tblHistorie.nHalterNr AND rkdeaktiv IS NULL AND madeaktiv IS NULL
AND rkarztnr=maarztnr AND rkrechnr=marechnr";
			Int.SqlHandleExec(this.hSqlHist, this.strSelect, "Fehler", ref this.nCount);
			this.nFetch = this.hSqlHist.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				Var.nRow = this.InsertRow(Sys.TBL_MaxRow);
				this.colDatum.DateTime = this.dtDatum;
				this.colRgNr.Number = this.nRechNr;
				this.colTyp.Text = this.strTyp;
				this.colBez.Text = this.strBez;
				this.colDM.Number = this.nDM;
				// Call VisTblSetRowColor(tblHistorie, nRow, COLOR_Blue)
				XSal.TblSetRowBackColor(this, Var.nRow, 0xffbfbf);
				this.nFetch = this.hSqlHist.FetchNext();
			}
			this.hSqlHist.Commit();
			// Z
			this.strSelect = @"SELECT zdatum, zrechnr, 'Zt',
zbemerk, zvon
INTO :dtDatum, :nRechNr, :strTyp, :lsBez, :strBez
FROM z WHERE " + Int.PalArztNr("z", this.nArztNr, this.nArztNr2) + @"
AND zhalternr = :tblHistorie.nHalterNr AND zdeaktiv IS NULL";
			Int.SqlHandleExec(this.hSqlHist, this.strSelect, "Fehler", ref this.nCount);
			this.nFetch = this.hSqlHist.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				this.lsBez = this.strBez + " :  " + this.lsBez;
				Var.nRow = this.InsertRow(Sys.TBL_MaxRow);
				this.colDatum.DateTime = this.dtDatum;
				this.colRgNr.Number = this.nRechNr;
				this.colTyp.Text = this.strTyp;
				this.colBez.Text = this.lsBez;
				// Call VisTblSetRowColor(tblHistorie, nRow, COLOR_DarkGreen)
				XSal.TblSetRowBackColor(this, Var.nRow, 0xbfffbf);
				this.nFetch = this.hSqlHist.FetchNext();
			}
			this.hSqlHist.Commit();
			// AK
			this.strSelect = @"SELECT akdatum, akrechnr, 'Tb',
aktyp || ' :  ' || vbez, akdm
INTO :dtDatum, :nRechNr, :strTyp, :strBez, :nDM
FROM ak,v WHERE " + Int.PalArztNr("ak", this.nArztNr, this.nArztNr2) + @"
AND akhalternr = :tblHistorie.nHalterNr
AND aktypdetail = vcode AND akdeaktiv IS NULL ";
			Int.SqlHandleExec(this.hSqlHist, this.strSelect, "Fehler", ref this.nCount);
			this.nFetch = this.hSqlHist.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				Var.nRow = this.InsertRow(Sys.TBL_MaxRow);
				this.colDatum.DateTime = this.dtDatum;
				this.colRgNr.Number = this.nRechNr;
				this.colTyp.Text = this.strTyp;
				this.colBez.Text = this.strBez;
				this.colDM.Number = this.nDM;
				// Call VisTblSetRowColor(tblHistorie, nRow, COLOR_Cyan)
				XSal.TblSetRowBackColor(this, Var.nRow, 0xffbfff);
				this.nFetch = this.hSqlHist.FetchNext();
			}
			this.hSqlHist.Commit();
			// PR
			this.strSelect = @"SELECT prdatum, prnr, 'MB',
prbemerk, NULL
INTO :dtDatum, :nRechNr, :strTyp, :strBez, :nDM
FROM pr WHERE " + Int.PalArztNr("pr", this.nArztNr, this.nArztNr2) + @"
AND prhalternr = :tblHistorie.nHalterNr ";
			Int.SqlHandleExec(this.hSqlHist, this.strSelect, "Fehler", ref this.nCount);
			this.nFetch = this.hSqlHist.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				Var.nRow = this.InsertRow(Sys.TBL_MaxRow);
				this.colDatum.DateTime = this.dtDatum;
				this.colRgNr.Number = this.nRechNr;
				this.colTyp.Text = this.strTyp;
				this.colBez.Text = this.strBez;
				this.colDM.Number = this.nDM;
				// Call VisTblSetRowColor(tblHistorie, nRow, COLOR_Cyan)
				XSal.TblSetRowBackColor(this, Var.nRow, 0xffbfff);
				this.nFetch = this.hSqlHist.FetchNext();
			}
			this.hSqlHist.Commit();
			this.hSqlHist.Disconnect();

			this.SortRows(1, Sys.TBL_SortDecreasing);
			// Call VisTblAutoSizeColumn(tblHistorie, hWndNULL)
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.DestroyWindow();
			#endregion
		}
		
		/// <summary>
		/// pbDruck WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDruck_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 04.08.10 OTÃ„448
			if (dlgLlDruck.ModalDialog(App.frmMain, "Historie.lst", "")) 
			{
			}
			#endregion
		}
		#endregion
	}
}
