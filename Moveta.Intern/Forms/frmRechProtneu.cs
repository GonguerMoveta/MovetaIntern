// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	/// <param name="nArztNr"></param>
	/// <param name="strBearbeiter"></param>
	/// <param name="dtBearbDatum"></param>
	/// <param name="strParent"></param>
	public partial class frmRechProtneu : SalFormWindow
	{
		#region Window Parameters
		public SalNumber nArztNr;
		public SalString strBearbeiter;
		public SalDateTime dtBearbDatum;
		public SalString strParent;
		#endregion
		
		#region Window Variables
		public SalSqlHandle hSqlLe = SalSqlHandle.Null;
		public SalSqlHandle hSqlLp = SalSqlHandle.Null;
		public SalSqlHandle hSqlH = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalString strSelectLp = "";
		public SalString strSelectH = "";
		public SalNumber nFetchLe = 0;
		public SalNumber nFetchLp = 0;
		public SalNumber nFetchH = 0;
		public SalNumber nHalterNr = 0;
		public SalNumber nPosNr = 0;
		public SalNumber nArztNr2 = 0;
		public SalNumber nRechNr = 0;
		public SalString strPraxArt = "";
		public SalBoolean bExists = false;
		public SalDateTime dtRkRechDat = SalDateTime.Null;
		public SalDateTime dtRkFaellDat = SalDateTime.Null;
		public SalDateTime dtRkVerjaehr = SalDateTime.Null;
		public SalString strRA = "";
		public SalNumber nMwSt = 0;
		public SalString strRechText = "";
		public SalDateTime dtDatum = SalDateTime.Null;
		public SalNumber nDM = 0;
		public SalNumber nText = 0;
		public SalNumber nSeite = 0;
		public SalNumber nZeile = 0;
		public SalNumber nGesNettoL1 = 0;
		public SalNumber nGesMwStL1 = 0;
		public SalNumber nGesNettoA1 = 0;
		public SalNumber nGesMwStA1 = 0;
		public SalNumber nGesNettoL = 0;
		public SalNumber nGesMwStL = 0;
		public SalNumber nGesNettoA = 0;
		public SalNumber nGesMwStA = 0;
		public SalArray<SalNumber> nMwNettoL = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwMwStL = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwBruttoL = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwNettoA = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwMwStA = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwBruttoA = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwNettoGL = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwMwStGL = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwBruttoGL = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwNettoGA = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwMwStGA = new SalArray<SalNumber>("0:20");
		public SalArray<SalNumber> nMwBruttoGA = new SalArray<SalNumber>("0:20");
		public SalNumber nAnzE = 0;
		public SalNumber nAnzG = 0;
		public SalNumber nRgL = 0;
		public SalNumber nRgL1 = 0;
		public SalNumber nAnzLA = 0;
		public SalNumber nArztNrMin = 0;
		public SalNumber nRgL3 = 0;
		public SalNumber nRgL9 = 0;
		public SalNumber nRgLG = 0;
		public SalNumber nRgA3 = 0;
		public SalNumber nRgA9 = 0;
		public SalNumber nRgAG = 0;
		public SalNumber nRgZ3 = 0;
		public SalNumber nRgZ9 = 0;
		public SalNumber nRgZG = 0;
		public SalNumber nRgLePost = 0;
		public SalNumber nRgAePost = 0;
		public SalNumber nRgZePost = 0;
		public SalString strHPMEMail = "";
		public SalString strDigitalMail = "";
		public SalNumber nRgA = 0;
		public SalNumber nRgZ = 0;
		public SalNumber nAbrSumme1 = 0;
		public SalNumber nAbrSumme = 0;
		public SalNumber nAbrSL = 0;
		public SalNumber nAbrSA = 0;
		public SalNumber nAbrSL2 = 0;
		public SalNumber nAbrSA2 = 0;
		public SalNumber nUnterKappung = 0;
		public SalNumber nUnterKL = 0;
		public SalNumber nUnterKA = 0;
		public SalNumber nProz = 0;
		public SalNumber nProz2 = 0;
		public SalNumber nDMBearbE = 0;
		public SalNumber nDMBearbZ = 0;
		public SalNumber nDMProz = 0;
		public SalNumber nDMPortoE = 0;
		public SalNumber nDMPortoZ = 0;
		public SalNumber nDMVSt = 0;
		public SalNumber nUFRechSumm = 0;
		public SalNumber nUFGeb = 0;
		public SalNumber nUFPorto = 0;
		public SalNumber nUFAnzRg = 0;
		public SalString strDrucker = "";
		public SalNumber nRgX = 0;
		public SalNumber nRgXalt = 0;
		public SalNumber nRgZalt = 0;
		public SalNumber nSeitealt = 0;
		public SalString strDevice = "";
		public SalString strDriver = "";
		public SalString strPort = "";
		public SalString strOldDevice = "";
		public SalString strOldDriver = "";
		public SalString strOldPort = "";
		public SalSqlHandle hSqlDisk = SalSqlHandle.Null;
		public SalNumber nFetch = 0;
		public SalWindowHandle hWndReport = SalWindowHandle.Null;
		public SalString strReportName = "";
		public SalNumber nDummy = 0;
		public SalNumber nMehrporto = 0;
		public SalNumber nTANr = 0;
		public SalNumber nTANralt = 0;
		public SalString strTATitel = "";
		public SalString strTAN1 = "";
		public SalString strTAN2 = "";
		public SalString strTAStr = "";
		public SalString strTAOrt = "";
		public SalString strTALand = "";
		public SalNumber nTHNr = 0;
		public SalString strTHN1 = "";
		public SalString strTHN2 = "";
		public SalString strTHStr = "";
		public SalString strTHOrt = "";
		public SalString strKennungTA = "";
		public SalNumber nNetto = 0;
		public SalNumber nMwPr = 0;
		public SalNumber nDMMwSt = 0;
		public SalString strLA = "";
		public SalNumber nBearbGebOri = 0;
		public SalNumber nBearbGeb = 0;
		public SalNumber nPorto1 = 0;
		public SalNumber nPorto2 = 0;
		public SalString strMatch = "";
		public SalNumber nKZPraxArt = 0;
		public SalNumber nAnzu500 = 0;
		public SalNumber nAnz = 0;
		public SalNumber nReverse = 0;
		public SalString strTHUStID = "";
		public SalNumber nUFMwSt = 0;
		public SalNumber nRPBeihilfe = 0;
		public SalNumber nNegativ = 0;
		public SalNumber nNegativL = 0;
		public SalNumber nNegativA = 0;
		public SalDateTime dtHSperrDatum = SalDateTime.Null;
		public SalNumber nHSperrSumme = 0;
		public SalNumber nSperrL = 0;
		public SalNumber nSperrA = 0;
		public SalNumber nUFSperrSumme = 0;
		public SalNumber nAKappung = 0;
		public SalString strDateiName = "";
		public SalString strFremdrechnungsnrMin = "";
		public SalString strFremdrechnungsnrMax = "";
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmRechProtneu(SalNumber nArztNr, SalString strBearbeiter, SalDateTime dtBearbDatum, SalString strParent)
		{
			// Assign global reference.
			App.frmRechProtneu = this;
			// Window Parameters initialization.
			this.nArztNr = nArztNr;
			this.strBearbeiter = strBearbeiter;
			this.dtBearbDatum = dtBearbDatum;
			this.strParent = strParent;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmRechProtneu CreateWindow(Control owner, SalNumber nArztNr, SalString strBearbeiter, SalDateTime dtBearbDatum, SalString strParent)
		{
			frmRechProtneu frm = new frmRechProtneu(nArztNr, strBearbeiter, dtBearbDatum, strParent);
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmRechProtneu FromHandle(SalWindowHandle handle)
		{
			return ((frmRechProtneu)SalWindow.FromHandle(handle, typeof(frmRechProtneu)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalAnfang()
		{
			#region Actions
			using (new SalContext(this))
			{
				if (!(hSqlLe)) 
				{
					Int.SqlConnection(ref hSqlLe);
				}
				// 15.08.16 Ä1410 :nKappung -> :frmRechProtneu.nAKappung
				// Errechne Unterkappung bzw. UnterKL+UnterKA
				if (nArztNr2 == 0) 
				{
					strSelect = @"SELECT lephalternr, lepposnr
FROM lep INTO  :frmRechProtneu.nRgX, :frmRechProtneu.nRgZ
where leparztnr =  :frmRechProtneu.nArztNr
AND lepbearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
GROUP BY 1,2
having sum(@round(lepdm+(lepdm * lepmwst / 100),2)) <= :frmRechProtneu.nAKappung";
					Sal.WaitCursor(true);
					Int.SqlHandleExec(hSqlLe, strSelect, "Fehler", ref Var.nCount);
					nUnterKappung = hSqlLe.GetResultSetCount();
					hSqlLe.Commit();
				}
				else
				{
					// 15.08.16 Ä1410 :nKappung -> :frmRechProtneu.nAKappung
					strSelect = @"SELECT lephalternr, lepposnr
FROM lep INTO :frmRechProtneu.nRgX, :frmRechProtneu.nRgZ
where leparztnr=:frmRechProtneu.nArztNr
AND lepbearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
GROUP BY 1,2
having sum(@round(lepdm+(lepdm * lepmwst / 100),2)) <= :frmRechProtneu.nAKappung";
					Sal.WaitCursor(true);
					Int.SqlHandleExec(hSqlLe, strSelect, "Fehler", ref Var.nCount);
					nUnterKL = hSqlLe.GetResultSetCount();
					hSqlLe.Commit();

					// 15.08.16 Ä1410 :nKappung -> :frmRechProtneu.nAKappung
					strSelect = @"SELECT lephalternr, lepposnr
FROM lep INTO :frmRechProtneu.nRgX, :frmRechProtneu.nRgZ
where leparztnr=:frmRechProtneu.nArztNr2
AND lepbearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
GROUP BY 1,2
having sum(@round(lepdm+(lepdm * lepmwst / 100),2)) <= :frmRechProtneu.nAKappung";
					Sal.WaitCursor(true);
					Int.SqlHandleExec(hSqlLe, strSelect, "Fehler", ref Var.nCount);
					nUnterKA = hSqlLe.GetResultSetCount();
					hSqlLe.Commit();
				}
				if (nArztNr2 == 0) 
				{
					strSelect = @"SELECT leparztnr, lephalternr, lepposnr, lepmwst, lepla, sum(lepdm)
FROM lep INTO :frmRechProtneu.nRgZ,:frmRechProtneu.nRgX, :frmRechProtneu.nSeite,
:frmRechProtneu.nRgA, :frmRechProtneu.strRA ,:frmRechProtneu.nRgL
where leparztnr = :frmRechProtneu.nArztNr
AND lepbearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
GROUP BY 1,2,3,4,5";
				}
				else
				{
					strSelect = @"SELECT leparztnr,lephalternr, lepposnr, lepmwst, lepla, sum(lepdm)
FROM lep INTO :frmRechProtneu.nRgZ,:frmRechProtneu.nRgX, :frmRechProtneu.nSeite,
:frmRechProtneu.nRgA , :frmRechProtneu.strRA ,:frmRechProtneu.nRgL
where " + Int.PalArztNr("lep", nArztNr, nArztNr2) + @"
AND lepbearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
GROUP BY 1,2,3,4,5";
				}
				Sal.WaitCursor(true);
				Int.SqlHandleExec(hSqlLe, strSelect, "Fehler", ref Var.nCount);
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				nTANralt = 0;
				nMehrporto = dfMehrporto.Number;
				// 23.08.01
				// Set nBearbGeb = 1.5
				Int.SqlImmedSel("select stgeb INTO :frmRechProtneu.nBearbGeb from a, st where astaffel=stnr and aarztnr = :frmRechProtneu.nArztNr");
				// 03.01.13 Ä850
				// 26.05.14 F2035, da vergessen, hier zu machen: Ä1003
				// Set nPorto1 = 0.58
				// 30.12.14 Ä1142
				// Set nPorto1 = 0.6
				// 30.12.15 Ä1282
				// Set nPorto1 = 0.62
				// 02.07.19 Ä1856
				// Set nPorto1 = 0.7
				// 03.01.22 Ä1992
				// Set nPorto1 = 0.8
				nPorto1 = 0.85m;

				// 03.06.08 Ä257
				// Set nPorto2 = 1.00
				// 30.12.14 Ä1142
				// Set nPorto2 = 0.9
				// 02.07.19 Ä1856
				// Set nPorto2 = 0.85
				// 03.01.22 Ä1992
				// Set nPorto2 = 0.95
				nPorto2 = 1.00m;

				nAbrSumme1 = 0.00m;
				nAbrSL = 0.00m;
				nAbrSA = 0.00m;
				nRgZalt = 0;
				nRgXalt = 0;
				nSeitealt = 0;
				nRgL1 = 0;
				// 11.03.14 F1917
				nNegativ = 0;
				nNegativL = 0;
				nNegativA = 0;

				nFetchLe = 0;
				while (nFetchLe != Sys.FETCH_EOF) 
				{
					nFetchLe = hSqlLe.FetchNext();
					if (nFetchLe == Sys.FETCH_EOF) 
					{
						// Set nRgZ=0
						nRgX = 0;
						nSeite = 0;
					}
					// gleiche Rechnung
					if (nRgZ == nRgZalt && nRgX == nRgXalt && nSeite == nSeitealt) 
					{
					}
					else
					{
						if (nRgXalt != 0) 
						{
							// 15.08.16 Ä1410 :nKappung -> :frmRechProtneu.nAKappung
							if (nRgL1 <= nAKappung) 
							{
								nAbrSumme1 = nAbrSumme1 + nRgL1;
								if (nArztNr2 != 0) 
								{
									if (nRgZalt == nArztNr) 
									{
										nAbrSL = nAbrSL + nRgL1;
									}
									else if (nRgZalt == nArztNr2) 
									{
										nAbrSA = nAbrSA + nRgL1;
									}
								}
							}
							// 11.03.14 F1917
							if (nRgL1 <= 0) 
							{
								nNegativ = nNegativ + nRgL1;
								if (nArztNr2 != 0) 
								{
									if (nRgZalt == nArztNr) 
									{
										nNegativL = nNegativL + nRgL1;
									}
									else if (nRgZalt == nArztNr2) 
									{
										nNegativA = nNegativA + nRgL1;
									}
								}
							}

							nRgL1 = 0;
						}
						nRgZalt = nRgZ;
						nRgXalt = nRgX;
						nSeitealt = nSeite;
					}
					nRgL1 = nRgL1 + nRgL + (nRgL * nRgA).Round() / 100.00m;
				}
				hSqlLe.Commit();
				nRgL = 0.00m;
				nRgA = 0.00m;
				nRgZ = 0.00m;
				Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgL FROM LE
WHERE LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum");
				if (nArztNr2 != 0) 
				{
					Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgZ FROM LE
WHERE LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND leposnr*100000+lehalternr IN
(SELECT leposnr*100000+lehalternr FROM LE WHERE
LEARZTNR = :frmRechProtneu.nArztNr2
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum)");
					nRgZ = nRgZ / 2.0m;
					Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgL FROM LE
WHERE LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND leposnr*100000+lehalternr NOT IN
(SELECT leposnr*100000+lehalternr FROM LE WHERE
LEARZTNR = :frmRechProtneu.nArztNr2
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum)");
					Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgA FROM LE
WHERE LEARZTNR = :frmRechProtneu.nArztNr2
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND leposnr*100000+lehalternr NOT IN
(SELECT leposnr*100000+lehalternr FROM LE WHERE
LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum)");
					// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgA FROM LE
					// WHERE LEARZTNR = :frmRechProtneu.nArztNr2
					// AND lebearbeiter=:frmRechProtneu.strBearbeiter
					// AND lebearbdatum=:frmRechProtneu.dtBearbDatum')
				}
				nRgL1 = nRgL;
				// 23.10.18 Ä1798
				nRgLePost = 0.00m;
				nRgAePost = 0.00m;
				nRgZePost = 0.00m;
				// 30.11.20 Ä1922 hpmemail IS NOT NULL -> (ledigitalmail is not null or hpmemail IS NOT NULL)
				Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgLePost FROM LE, H
WHERE LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr=harztnr AND lehalternr=hhalternr AND (ledigitalmail is not null or hpmemail IS NOT NULL)");
				if (nArztNr2 != 0) 
				{
					Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgZePost FROM LE, H
WHERE LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr=harztnr AND lehalternr=hhalternr AND (ledigitalmail is not null or hpmemail IS NOT NULL)
AND leposnr*100000+lehalternr IN
(SELECT leposnr*100000+lehalternr FROM LE WHERE
LEARZTNR = :frmRechProtneu.nArztNr2
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum)");
					nRgZePost = nRgZePost / 2.0m;
					Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgLePost FROM LE, H
WHERE LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr=harztnr AND lehalternr=hhalternr AND (ledigitalmail is not null or hpmemail IS NOT NULL)
AND leposnr*100000+lehalternr NOT IN
(SELECT leposnr*100000+lehalternr FROM LE WHERE
LEARZTNR = :frmRechProtneu.nArztNr2
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum)");
					Int.SqlImmedSel(@"SELECT COUNT(*) INTO :frmRechProtneu.nRgAePost FROM LE, H
WHERE LEARZTNR = :frmRechProtneu.nArztNr2
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr=harztnr AND lehalternr=hhalternr AND (ledigitalmail is not null or hpmemail IS NOT NULL)
AND leposnr*100000+lehalternr NOT IN
(SELECT leposnr*100000+lehalternr FROM LE WHERE
LEARZTNR = :frmRechProtneu.nArztNr
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum)");
					// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgA FROM LE
					// WHERE LEARZTNR = :frmRechProtneu.nArztNr2
					// AND lebearbeiter=:frmRechProtneu.strBearbeiter
					// AND lebearbdatum=:frmRechProtneu.dtBearbDatum')
				}

				// 15.08.16 Ä1410 :nKappung -> :frmRechProtneu.nAKappung
				nAbrSumme1 = nAbrSumme1 + ((nRgL + nRgA + (nRgZ * 2)) - nUnterKappung) * nAKappung;
				nAbrSL = nAbrSL + ((nRgL + nRgZ * 2) - nUnterKL) * nAKappung;
				nAbrSA = nAbrSA + ((nRgA + nRgZ * 2) - nUnterKA) * nAKappung;
				// 11.03.14 F1917
				nAbrSumme1 = nAbrSumme1 - nNegativ;
				nAbrSL = nAbrSL - nNegativL;
				nAbrSA = nAbrSA - nNegativA;

				// ---------------------------------
				// 19.02.04	für 9000er
				Int.SqlImmedSel(@"SELECT sum(lepdm)
INTO :frmRechProtneu.nNetto
FROM lep  WHERE " + Int.PalArztNr("lep", nArztNr, nArztNr2) + @"
AND lepbearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum
AND lepzeidat = '2199-12-31'");
				nAbrSumme1 = nAbrSumme1 - nNetto;
				nAbrSL = nAbrSL - nNetto;

				nAbrSL2 = nAbrSL;
				nAbrSA2 = nAbrSA;
				// wenn noch nicht fertig :
				Int.SqlIstDa(@" FROM LE WHERE (learztnr=:frmRechProtneu.nArztNr OR learztnr=:frmRechProtneu.nArztNr2)
AND lehalternr=0
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum", ref bExists);
				if (bExists) 
				{
					Sal.MessageBox("Es gibt noch Halter mit der Nr.0", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
					return false;
				}
				else
				{
					Int.SqlIstDa(@" FROM LE WHERE (learztnr=:frmRechProtneu.nArztNr OR learztnr=:frmRechProtneu.nArztNr2)
AND lerechnr IS NULL
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum", ref bExists);
					if (bExists) 
					{
						Sal.MessageBox(@"Bitte erst
Rechnungen drucken
anwählen", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
						return false;
					}
				}
				// sonst weiter ...
				nSeite = 0;

				nGesNettoL1 = 0.00m;
				nGesMwStL1 = 0.00m;
				nGesNettoA1 = 0.00m;
				nGesMwStA1 = 0.00m;
				// 20.10.15 Ä1252 + hsperrdatum
				dtHSperrDatum = SalDateTime.Null;
				nHSperrSumme = 0;
				nSperrL = 0;
				nSperrA = 0;

				nFetchLe = 0;
				// Call SqlIstDa( 'FROM le,h WHERE ' || PalArztNr('le', frmRechProtneu.nArztNr, frmRechProtneu.nArztNr2) || '
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND learztnr = harztnr AND lehalternr = hhalternr
				// AND hsperrdatum IS NOT NULL', bExists )
				// 20.10.15 Ä1252 + hsperrdatum
				strSelect = @"SELECT akzpraxart, learztnr, hnn || ', ' || hti || hvn,HNAME2,HSTR,hland || ' ' || HORT, hsperrdatum, lekennungta, lehalternr,leposnr,lerechnr,
lepmwst, lepla, sum(lepdm)
INTO :frmRechProtneu.nKZPraxArt, :frmRechProtneu.nTANr,
:frmRechProtneu.strTHN1, :frmRechProtneu.strTHN2, :frmRechProtneu.strTHStr, :frmRechProtneu.strTHOrt, :frmRechProtneu.dtHSperrDatum,
:frmRechProtneu.strKennungTA, :frmRechProtneu.nTHNr,:frmRechProtneu.nPosNr,:frmRechProtneu.nRechNr,
:frmRechProtneu.nMwSt, :frmRechProtneu.strLA, :frmRechProtneu.nNetto
FROM le, lep, h, a  WHERE " + Int.PalArztNr("le", nArztNr, nArztNr2) + @"
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr = leparztnr AND lehalternr=lephalternr AND lebearbeiter=lepbearbeiter AND le.lebearbdatum = lep.lebearbdatum
 AND leposnr=lepposnr AND learztnr=harztnr AND lehalternr=hhalternr AND learztnr=aarztnr AND hdeaktiv IS NULL
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13";
				Int.SqlHandleExec(hSqlLe, strSelect, "Rechnungsprotokoll", ref Var.nErr);
				nFetchLe = hSqlLe.FetchNext();
				while (nFetchLe != Sys.FETCH_EOF) 
				{
					nDMMwSt = (nNetto * nMwSt).Round() / 100.00m;
					// Set nAnz = nAnz + 1
					// If nNetto < 400
					// Set nAnzu500 = nAnzu500 + 1

					if (strLA == "L") 
					{
						nGesNettoL1 = nGesNettoL1 + nNetto;
						nGesMwStL1 = nGesMwStL1 + nDMMwSt;
						// 20.10.15 Ä1252 + hsperrdatum
						if (dtHSperrDatum != SalDateTime.Null) 
						{
							nSperrL = nSperrL + nNetto + nDMMwSt;
						}

					}
					else
					{
						nGesNettoA1 = nGesNettoA1 + nNetto;
						nGesMwStA1 = nGesMwStA1 + nDMMwSt;
						// 20.10.15 Ä1252 + hsperrdatum
						if (dtHSperrDatum != SalDateTime.Null) 
						{
							nSperrA = nSperrA + nNetto + nDMMwSt;
						}

					}
					nFetchLe = hSqlLe.FetchNext();
				}
				hSqlLe.Commit();
				// für 8000er
				nAnz = 0;
				nAnzu500 = 0;
				nFetchLe = 0;
				// 16.03.10 OTÄ397 + lereverse + hustid
				Int.SqlHandleExec(hSqlLe, @"SELECT akzpraxart, learztnr, hnn || ', ' || hvn || ' ' || hti, HNAME2,HSTR,hland || ' ' || HORT, hustid, lekennungta, lehalternr,leposnr,lerechnr, lereverse, sum(lepdm)
INTO :frmRechProtneu.nKZPraxArt, :frmRechProtneu.nTANr,
:frmRechProtneu.strTHN1, :frmRechProtneu.strTHN2, :frmRechProtneu.strTHStr, :frmRechProtneu.strTHOrt,  :frmRechProtneu.strTHUStID,
:frmRechProtneu.strKennungTA, :frmRechProtneu.nTHNr,:frmRechProtneu.nPosNr,:frmRechProtneu.nRechNr, :frmRechProtneu.nReverse , :frmRechProtneu.nNetto
FROM le, lep, h, a  WHERE " + Int.PalArztNr("le", nArztNr, nArztNr2) + @"
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr = leparztnr AND lehalternr=lephalternr AND lebearbeiter=lepbearbeiter AND le.lebearbdatum = lep.lebearbdatum
 AND leposnr=lepposnr AND learztnr=harztnr AND lehalternr=hhalternr AND learztnr=aarztnr AND hdeaktiv IS NULL
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12", "Rechnungsprotokoll", ref Var.nErr);
				nFetchLe = hSqlLe.FetchNext();
				while (nFetchLe != Sys.FETCH_EOF) 
				{
					nAnz = nAnz + 1;
					if (nNetto < 204.52m) 
					{
						nAnzu500 = nAnzu500 + 1;
					}

					nFetchLe = hSqlLe.FetchNext();
				}
				hSqlLe.Commit();

				nMwPr = 0;
				while (nMwPr < Var.nAnzMwSt) 
				{
					nMwPr = nMwPr + 1;
					nMwNettoGL[nMwPr] = 0;
					nMwNettoGA[nMwPr] = 0;
					nMwMwStGL[nMwPr] = 0;
					nMwMwStGA[nMwPr] = 0;
				}

				if (nArztNr2 == 0) 
				{
					nProz = Int.PalGebuehrenProz(nArztNr, (nGesNettoL1 + nGesNettoA1 + nGesMwStL1 + nGesMwStA1) / nRgL, ref nBearbGeb);
				}
				else
				{
					nProz = Int.PalGebuehrenProz(nArztNr, (nGesNettoL1 + nGesNettoA1 + nGesMwStL1 + nGesMwStA1) / (nRgL + nRgA + nRgZ * 2), ref nBearbGeb);
				}

				if (nTANr == nArztNr) 
				{
					if (nArztNr2 != 0)  // L+A getrennt
					{
						nAbrSumme = nAbrSL;
						nGesNettoL = nGesNettoL1;
						nGesNettoA = 0;
						nGesMwStL = nGesMwStL1;
						nGesMwStA = 0;
					}
					else
					{
						nAbrSumme = nAbrSumme1;
						nGesNettoL = nGesNettoL1;
						nGesNettoA = nGesNettoA1;
						nGesMwStL = nGesMwStL1;
						nGesMwStA = nGesMwStA1;
					}
				}
				else
				{
					nAbrSumme = nAbrSA;
					nGesNettoA = nGesNettoA1;
					nGesNettoL = 0;
					nGesMwStA = nGesMwStA1;
					nGesMwStL = 0;
				}
				// 04.04.00 8000er
				if (nArztNr >= 8000 && nArztNr <= 8999) 
				{
					nBearbGebOri = nBearbGeb;
					nBearbGeb = ((nAnz * nBearbGeb) - (nAnzu500 * 2.56m)) / nAnz; // DM 5,- weniger
					nPorto1 = 0;
					nPorto2 = 0;
				}

				if (cbohneGeb.Checked) 
				{
					nProz = 0;
					nBearbGeb = 0;
				}
				if (cbohnePorto.Checked) 
				{
					nPorto1 = 0;
					nPorto2 = 0;
				}
				// 29.01.21 F4710 wegen Fehler 4710 alles wieder auskommentiert, da zur alten Portoberechnung zurück
				// 16.12.20 Ä1858
				// Set nRgL = 0
				// Set nRgL3 = 0
				// Set nRgL9 = 0
				// Set nRgLG = 0
				// Set nRgA = 0
				// Set nRgA3 = 0
				// Set nRgA9 = 0
				// Set nRgAG = 0
				// Set nRgZ = 0
				// Set nRgZ3 = 0
				// Set nRgZ9 = 0
				// Set nRgZG = 0
				// Call SqlHandleExec(hSqlLe,
				// 'SELECT lehalternr, COUNT(*), SUM( lebriefart ), MIN( learztnr )
				// INTO :frmRechProtneu.nHalterNr, :frmRechProtneu.nAnzLA, :frmRechProtneu.nAnz, :frmRechProtneu.nArztNrMin
				// FROM LE, H
				// WHERE ' || PalArztNr('le', nArztNr, nArztNr2) || '
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND learztnr=harztnr AND lehalternr=hhalternr AND (ledigitalmail is null and hpmemail IS NULL) GROUP BY 1'
				// ,'Rechnungsprotokoll', nErr)
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// While nFetchLe != FETCH_EOF
				// If nAnzLA >= 2
				// Set nRgZ = nRgZ + 1
				// If nAnz < 4
				// Set nRgZ3 = nRgZ3 + 1
				// Else If nAnz >=4 And nAnz < 10
				// Set nRgZ9 = nRgZ9 + 1
				// Else
				// Set nRgZG = nRgZG + 1
				// Else
				// If nArztNrMin = nArztNr
				// Set nRgL = nRgL + 1
				// If nAnz < 4
				// Set nRgL3 = nRgL3 + 1
				// Else If nAnz >=4 And nAnz < 10
				// Set nRgL9 = nRgL9 + 1
				// Else
				// Set nRgLG = nRgLG + 1
				// Else
				// Set nRgA = nRgA + 1
				// If nAnz < 4
				// Set nRgA3 = nRgA3 + 1
				// Else If nAnz >=4 And nAnz < 10
				// Set nRgA9 = nRgA9 + 1
				// Else
				// Set nRgAG = nRgAG + 1
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// Call SqlCommit( hSqlLe )
				// Set nRgL1 = nRgL
				// Set nRgZ = nRgZ / 2
				// 29.01.21 F4710 bis hier wegen Fehler 4710 alles wieder auskommentiert, da zur alten Portoberechnung zurück

				Int.SqlIstDa(@" FROM UF WHERE ufarztnr = :frmRechProtneu.nArztNr
AND ufbearbeiter=:frmRechProtneu.strBearbeiter
AND ufbearbdatum=:frmRechProtneu.dtBearbDatum", ref bExists);
				if (nArztNr2 == 0) 
				{
					nUFRechSumm = nGesNettoL1 + nGesNettoA1 + nGesMwStL1 + nGesMwStA1;
					nDMProz = (nAbrSumme1 * nProz).Round() / 100;
					nUFGeb = (nRgL1 * nBearbGeb) + nDMProz;
					// 23.10.18 Ä1798 nRgL1 -> nRgL1ePost
					nUFPorto = (nRgL1 - nRgLePost) * nPorto1;
					nUFAnzRg = nRgL1;
					// NumberRound(((nBearbGeb * (nRgL + nRgZ*2)) + NumberRound(nAbrSumme * nProz /100,2) + (nPorto1 * nRgL)
					// + (nPorto2 * nRgZ) + nMehrporto) * nMwStVoll / 100, 2)
					// 20.10.15 Ä1252 + hsperrdatum
					nUFSperrSumme = nSperrL + nSperrA;
				}
				else
				{
					nUFRechSumm = nGesNettoL1 + nGesMwStL1;
					nDMProz = (nAbrSL * nProz).Round() / 100;
					nUFGeb = (nRgL1 * nBearbGeb) + (nRgZ * 2 * nBearbGeb) + nDMProz;
					// 23.10.18 Ä1798 nRgL1 -> nRgLePost
					nUFPorto = (nRgL1 - nRgLePost) * nPorto1 + (nRgZ - nRgZePost) * nPorto2;
					nUFAnzRg = nRgL1 + nRgZ * 2;
					// 20.10.15 Ä1252 + hsperrdatum
					nUFSperrSumme = nSperrL;

				}
				// 04.04.00 8000er
				if (nArztNr >= 8000 && nArztNr <= 8999) 
				{
					nUFGeb = (nAnz * nBearbGebOri) - (nAnzu500 * 2.56m);
					if (cbohneGeb.Checked) 
					{
						nUFGeb = 0;
					}
				}
				// 03.05.10 OTÄ420
				nUFMwSt = Int.PalCheckAuslMwSt(nArztNr);

				if (dfMehrporto.Number != Sys.NUMBER_Null) 
				{
					nUFPorto = nUFPorto + dfMehrporto.Number;
				}
				nDMVSt = ((nUFGeb + nUFPorto) * nUFMwSt).Round() / 100;
				nUFGeb = nUFGeb + nDMVSt;
				// 20.10.15 Ä1252 + hsperrdatum
				if (bExists) 
				{
					Int.SqlImmedX(@"UPDATE UF SET
ufrechsumm = :frmRechProtneu.nUFRechSumm,
ufdmgebuehr = :frmRechProtneu.nUFGeb,
ufprozgebuehr = :frmRechProtneu.nProz,
ufdmporto = :frmRechProtneu.nUFPorto,
ufdmvst = :frmRechProtneu.nDMVSt,
ufanzrg = :frmRechProtneu.nUFAnzRg,
ufsperrsumme = :frmRechProtneu.nUFSperrSumme
WHERE ufarztnr= :frmRechProtneu.nArztNr
AND ufbearbeiter= :frmRechProtneu.strBearbeiter
AND ufbearbdatum= :frmRechProtneu.dtBearbDatum");
				}
				else
				{
					Int.SqlImmedX(@"INSERT INTO UF (UFBEARBEITER, UFBEARBDATUM,
UFARZTNR, UFRECHSUMM, UFDMGEBUEHR,
UFPROZGEBUEHR, UFDMPORTO, UFDMVST, UFPROZVST, UFANZRG, UFSPERRSUMME)
VALUES(:frmRechProtneu.strBearbeiter, :frmRechProtneu.dtBearbDatum,
:frmRechProtneu.nArztNr, :frmRechProtneu.nUFRechSumm,
:frmRechProtneu.nUFGeb,
:frmRechProtneu.nProz, :frmRechProtneu.nUFPorto,
:frmRechProtneu.nDMVSt, :frmRechProtneu.nUFMwSt,
:frmRechProtneu.nUFAnzRg, :frmRechProtneu.nUFSperrSumme)");
				}

				if (nArztNr2 != 0) 
				{
					// 03.05.10 OTÄ420
					nUFMwSt = Int.PalCheckAuslMwSt(nArztNr2);

					Int.SqlIstDa(@" FROM UF WHERE ufarztnr = :frmRechProtneu.nArztNr2
AND ufbearbeiter=:frmRechProtneu.strBearbeiter
AND ufbearbdatum=:frmRechProtneu.dtBearbDatum", ref bExists);
					nUFRechSumm = nGesNettoA1 + nGesMwStA1;
					nDMProz = (nAbrSA * nProz).Round() / 100;
					nUFGeb = (nRgA * nBearbGeb) + (nRgZ * 2 * nBearbGeb) + nDMProz;
					// 23.10.18 Ä1798 nRgL1 -> nRgL1ePost
					nUFPorto = (nRgA - nRgAePost) * nPorto1 + (nRgZ - nRgZePost) * nPorto2;
					nDMVSt = ((nUFGeb + nUFPorto) * nUFMwSt).Round() / 100;
					nUFGeb = nUFGeb + nDMVSt;
					nUFAnzRg = nRgA + nRgZ * 2;
					// 20.10.15 Ä1252 + hsperrdatum
					nUFSperrSumme = nSperrA;

					if (bExists) 
					{
						Int.SqlImmedX(@"UPDATE UF SET
ufrechsumm = :frmRechProtneu.nUFRechSumm,
ufdmgebuehr = :frmRechProtneu.nUFGeb,
ufprozgebuehr = :frmRechProtneu.nProz,
ufdmporto = :frmRechProtneu.nUFPorto,
ufdmvst = :frmRechProtneu.nDMVSt,
ufanzrg = :frmRechProtneu.nUFAnzRg,
ufsperrsumme = :frmRechProtneu.nUFSperrSumme
WHERE ufarztnr= :frmRechProtneu.nArztNr2
AND ufbearbeiter= :frmRechProtneu.strBearbeiter
AND ufbearbdatum= :frmRechProtneu.dtBearbDatum");
					}
					else
					{
						Int.SqlImmedX(@"INSERT INTO UF (UFBEARBEITER, UFBEARBDATUM,
UFARZTNR, UFRECHSUMM, UFDMGEBUEHR,
UFPROZGEBUEHR, UFDMPORTO, UFDMVST, UFPROZVST, UFANZRG, UFSPERRSUMME)
VALUES(:frmRechProtneu.strBearbeiter, :frmRechProtneu.dtBearbDatum,
:frmRechProtneu.nArztNr2, :frmRechProtneu.nUFRechSumm,
:frmRechProtneu.nUFGeb,
:frmRechProtneu.nProz, :frmRechProtneu.nUFPorto,
:frmRechProtneu.nDMVSt, :frmRechProtneu.nUFMwSt,
:frmRechProtneu.nUFAnzRg, :frmRechProtneu.nUFSperrSumme)");
					}
				}
				// If 1 = SalModalDialog( dlgLlDruck, frmMain, 'Rechnungsprotokoll.lst', '' )
				// Return TRUE
				// Else
				// Return FALSE
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalFetchNext()
		{
			#region Actions
			using (new SalContext(this))
			{
				if (nTANr != nTANralt) 
				{

					if (nTANralt != 0) 
					{
						nMehrporto = 0;
					}

					nMwPr = 0;
					// 19.03.10 OTÄ397 nAnzMwSt --> (nAnzMwSt + 2)
					// 02.05.16 -> nAnzMwSt
					while (nMwPr < Var.nAnzMwSt) 
					{
						nMwNettoGL[nMwPr] = 0;
						nMwNettoGA[nMwPr] = 0;
						nMwMwStGL[nMwPr] = 0;
						nMwMwStGA[nMwPr] = 0;
						nMwPr = nMwPr + 1;
					}
					Int.SqlImmedSel(@"SELECT ATITEL, ANAME1,ANAME2,ASTR,AORT, ALAND
INTO :frmRechProtneu.strTATitel, :frmRechProtneu.strTAN1, :frmRechProtneu.strTAN2, :frmRechProtneu.strTAStr, :frmRechProtneu.strTAOrt, :frmRechProtneu.strTALand
FROM A WHERE AARZTNR = :frmRechProtneu.nTANr");
					nTANralt = nTANr;
				}
				nDMMwSt = (nNetto * nMwSt).Round() / 100.00m;
				nMwPr = 0;
				// 19.03.10 OTÄ397 nAnzMwSt --> (nAnzMwSt + 2)
				// 02.05.16 F2680 (nAnzMwSt + 2) -> nAnzMwSt
				// If nMwSt = 17 or nMwSt = 0
				// Call SalMessageBeep( 0 )
				while (nMwPr < (Var.nAnzMwSt + 2)) 
				{
					// 03.07.03 0%MwSt doppelt gedruckt , daher zusätzl. And (nMwPr=0 Or nMwSatz[nMwPr] > 0)
					// 19.03.10 OTÄ397
					if (nReverse > 0 && nMwSt == 0 && ((nMwPr == Var.nAnzMwSt && strTHUStID != "") || (nMwPr == (Var.nAnzMwSt + 1) && strTHUStID == ""))) 
					{
						if (nNetto != 0) 
						{
							if (strLA == "L") 
							{
								nMwNettoGL[nMwPr] = nMwNettoGL[nMwPr] + nNetto;
								nMwMwStGL[nMwPr] = nMwMwStGL[nMwPr] + nDMMwSt;
							}
							else
							{
								nMwNettoGA[nMwPr] = nMwNettoGA[nMwPr] + nNetto;
								nMwMwStGA[nMwPr] = nMwMwStGA[nMwPr] + nDMMwSt;
							}
						}
					}
					else if (nReverse == 0 || nReverse == SalNumber.Null)  // 10.07.12 F1344 +  or nReverse = NUMBER_Null
					{
						if (nMwSt == Var.nMwSatz[nMwPr] && (nMwPr == 0 || Var.nMwSatz[nMwPr] > 0)) 
						{
							if (nNetto != 0) 
							{
								if (strLA == "L") 
								{
									nMwNettoGL[nMwPr] = nMwNettoGL[nMwPr] + nNetto;
									nMwMwStGL[nMwPr] = nMwMwStGL[nMwPr] + nDMMwSt;
								}
								else
								{
									nMwNettoGA[nMwPr] = nMwNettoGA[nMwPr] + nNetto;
									nMwMwStGA[nMwPr] = nMwMwStGA[nMwPr] + nDMMwSt;
								}
							}
						}
					}
					nMwPr = nMwPr + 1;
				}

				hSqlLe.Commit();
				if (nTANr == nArztNr) 
				{
					nRgL = nRgL1;
					if (nArztNr2 != 0)  // L+A getrennt
					{
						nAbrSumme = nAbrSL;
						nGesNettoL = nGesNettoL1;
						nGesNettoA = 0;
						nGesMwStL = nGesMwStL1;
						nGesMwStA = 0;
					}
					else
					{
						nAbrSumme = nAbrSumme1;
						nGesNettoL = nGesNettoL1;
						nGesNettoA = nGesNettoA1;
						nGesMwStL = nGesMwStL1;
						nGesMwStA = nGesMwStA1;
					}
				}
				else
				{
					nRgL = nRgA;
					// 16.12.20 Ä1858
					nRgL3 = nRgA3;
					nRgL9 = nRgA9;
					nRgLG = nRgAG;

					nRgLePost = nRgAePost;
					nAbrSumme = nAbrSA;
					nGesNettoA = nGesNettoA1;
					nGesNettoL = 0;
					nGesMwStA = nGesMwStA1;
					nGesMwStL = 0;
				}

				if (cbohneGeb.Checked) 
				{
					nProz = 0;
					nBearbGeb = 0;
				}
				if (cbohnePorto.Checked) 
				{
					nPorto1 = 0;
					nPorto2 = 0;
				}

				this.SetStatusBarText("Rech-Nr.: " + nArztNr.ToString(0) + "/" + nRechNr.ToString(0));
			}

			return 0;
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmRechProtneu WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmRechProtneu_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Destroy:
					this.frmRechProtneu_OnSAM_Destroy(sender, e);
					break;
				
				case Sys.SAM_ReportStart:
					this.frmRechProtneu_OnSAM_ReportStart(sender, e);
					break;
				
				case Sys.SAM_ReportFetchInit:
					this.frmRechProtneu_OnSAM_ReportFetchInit(sender, e);
					break;
				
				case Sys.SAM_ReportFetchNext:
					this.frmRechProtneu_OnSAM_ReportFetchNext(sender, e);
					break;
				
				case Sys.SAM_ReportFinish:
					this.frmRechProtneu_OnSAM_ReportFinish(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (!(Int.PalFormFrei("Übergaben"))) 
			{
				Sal.MessageBox("Abschluß läuft. Protokolldruck nicht erlaubt !", "Achtung", Sys.MB_Ok);
				// Call SalPostMsg(hWndForm, SAM_Close,0,0)
				this.DestroyWindow();
			}
			else
			{
				// If SalPrtGetDefault( strDevice, strDriver, strPort )
				// Set dfDrucker = strDevice || ' an ' || strPort
				// Set strOldDevice = strDevice
				// Set strOldDriver = strDriver
				// Set strOldPort = strPort

				this.nRgL = 0;
				this.nRgA = 0;
				this.nRgZ = 0;
				this.dfMehrporto.Number = 0;
				// 15.08.16 Ä1410 + akappung
				Int.SqlImmedSel(@"SELECT AKZPRAXART,ANR2, akappung INTO :frmRechProtneu.strPraxArt,:frmRechProtneu.nArztNr2, :frmRechProtneu.nAKappung
FROM A WHERE AARZTNR = :frmRechProtneu.nArztNr");
				if (this.strPraxArt == "2") 
				{
					this.nDummy = this.nArztNr;
					this.nArztNr = this.nArztNr2;
					this.nArztNr2 = this.nDummy;
				}
				else if (this.strPraxArt == "0") 
				{
					this.nArztNr2 = 0;
				}
				this.dfArztNr.Number = this.nArztNr;
				this.dfArztNr2.Number = this.nArztNr2;
				// 05.10.99
				if (this.nArztNr >= 800 && this.nArztNr <= 899) 
				{
					this.cbohneGeb.Checked = true;
				}
				// 15.08.16 Ä1410 + akappung
				if (this.nAKappung == SalNumber.Null) 
				{
					this.nAKappung = Var.nKappung;
				}

				Int.SqlConnection(ref this.hSqlLp);
				Int.SqlConnection(ref this.hSqlH);
				Sal.WaitCursor(false);
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Destroy event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_OnSAM_Destroy(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlLp.Disconnect();
			this.hSqlH.Disconnect();
			// 12.05.14
			this.hSqlLe.Disconnect();

			Sal.PrtSetDefault(this.strOldDevice, this.strOldDriver, this.strOldPort);
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportStart event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_OnSAM_ReportStart(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 30.04.03
			if (Var.hWndfrmReport) 
			{
				Var.hWndfrmReport.BringWindowToTop();
			}

			if (this.strReportName == "RECHPROT") 
			{
				Sal.ReportDlgOptions(Sys.wParam.ToWindowHandle(), "Rechnungsprotokoll", "Das Rechnungsprotokoll", "wird gedruckt", "Rechnungsprotokoll");
				this.PalAnfang();
				// Call SqlConnection(hSqlLe)
				// Errechne Unterkappung bzw. UnterKL+UnterKA
				// If nArztNr2 = 0
				// Set strSelect = 'SELECT lephalternr, lepposnr
				// FROM lep INTO  :frmRechProtneu.nRgX, :frmRechProtneu.nRgZ
				// where leparztnr =  :frmRechProtneu.nArztNr
				// AND lepbearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// GROUP BY 1,2
				// having sum(@round(lepdm+(lepdm * lepmwst / 100),2)) <= :nKappung'
				// Call SalWaitCursor( TRUE )
				// Call SqlHandleExec(hSqlLe,strSelect,'Fehler',nCount)
				// Call SqlGetResultSetCount(hSqlLe,nUnterKappung)
				// Call SqlCommit( hSqlLe )
				// Else
				// Set strSelect = 'SELECT lephalternr, lepposnr
				// FROM lep INTO :frmRechProtneu.nRgX, :frmRechProtneu.nRgZ
				// where leparztnr=:frmRechProtneu.nArztNr
				// AND lepbearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// GROUP BY 1,2
				// having sum(@round(lepdm+(lepdm * lepmwst / 100),2)) <= :nKappung'
				// Call SalWaitCursor( TRUE )
				// Call SqlHandleExec(hSqlLe,strSelect,'Fehler',nCount)
				// Call SqlGetResultSetCount(hSqlLe,nUnterKL)
				// Call SqlCommit( hSqlLe )
				// Set strSelect = 'SELECT lephalternr, lepposnr
				// FROM lep INTO :frmRechProtneu.nRgX, :frmRechProtneu.nRgZ
				// where leparztnr=:frmRechProtneu.nArztNr2
				// AND lepbearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// GROUP BY 1,2
				// having sum(@round(lepdm+(lepdm * lepmwst / 100),2)) <= :nKappung'
				// Call SalWaitCursor( TRUE )
				// Call SqlHandleExec(hSqlLe,strSelect,'Fehler',nCount)
				// Call SqlGetResultSetCount(hSqlLe,nUnterKA)
				// Call SqlCommit( hSqlLe )
				// If nArztNr2 = 0
				// Set strSelect = 'SELECT leparztnr, lephalternr, lepposnr, lepmwst, lepla, sum(lepdm)
				// FROM lep INTO :frmRechProtneu.nRgZ,:frmRechProtneu.nRgX, :frmRechProtneu.nSeite,
				// :frmRechProtneu.nRgA, :frmRechProtneu.strRA ,:frmRechProtneu.nRgL
				// where leparztnr = :frmRechProtneu.nArztNr
				// AND lepbearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// GROUP BY 1,2,3,4,5'
				// Else
				// Set strSelect = 'SELECT leparztnr,lephalternr, lepposnr, lepmwst, lepla, sum(lepdm)
				// FROM lep INTO :frmRechProtneu.nRgZ,:frmRechProtneu.nRgX, :frmRechProtneu.nSeite,
				// :frmRechProtneu.nRgA , :frmRechProtneu.strRA ,:frmRechProtneu.nRgL
				// where ' || PalArztNr('lep', nArztNr, nArztNr2) || '
				// AND lepbearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// GROUP BY 1,2,3,4,5'
				// Call SalWaitCursor( TRUE )
				// Call SqlHandleExec(hSqlLe,strSelect,'Fehler',nCount)
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// Set nTANralt = 0
				// Set nMehrporto = dfMehrporto
				// 23.08.01
				// Set nBearbGeb = 1.5
				// Call SqlImmedSel('select stgeb INTO :frmRechProtneu.nBearbGeb from a, st where astaffel=stnr and aarztnr = :frmRechProtneu.nArztNr')
				// Set nPorto1 = 0.55
				// Set nPorto2 = 1.00
				// Set nAbrSumme1 = 0.00
				// Set nAbrSL = 0.00
				// Set nAbrSA = 0.00
				// Set nRgZalt=0
				// Set nRgXalt=0
				// Set nSeitealt=0
				// Set nRgL1 = 0
				// Set nFetchLe = 0
				// While nFetchLe != FETCH_EOF
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// If nFetchLe = FETCH_EOF
				// Set nRgZ=0
				// Set nRgX=0
				// Set nSeite=0
				// gleiche Rechnung
				// If nRgZ=nRgZalt And nRgX=nRgXalt And nSeite=nSeitealt
				// Else
				// If nRgXalt != 0
				// If nRgL1 <= nKappung
				// Set nAbrSumme1 = nAbrSumme1 + nRgL1
				// If nArztNr2 != 0
				// If nRgZalt = nArztNr
				// Set nAbrSL = nAbrSL + nRgL1
				// Else If nRgZalt = nArztNr2
				// Set nAbrSA = nAbrSA+ nRgL1
				// Set nRgL1 = 0
				// Set nRgZalt = nRgZ
				// Set nRgXalt = nRgX
				// Set nSeitealt = nSeite
				// Set nRgL1 = nRgL1 + nRgL +
				// SalNumberRound(nRgL * nRgA) / 100.00
				// Call SqlCommit( hSqlLe )
				// Set nRgL = 0.00
				// Set nRgA = 0.00
				// Set nRgZ = 0.00
				// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgL FROM LE
				// WHERE LEARZTNR = :frmRechProtneu.nArztNr
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum')
				// If nArztNr2 != 0
				// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgZ FROM LE
				// WHERE LEARZTNR = :frmRechProtneu.nArztNr
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND leposnr*100000+lehalternr IN
				// (SELECT leposnr*100000+lehalternr FROM LE WHERE
				// LEARZTNR = :frmRechProtneu.nArztNr2
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum)')
				// Set nRgZ = nRgZ / 2.0
				// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgL FROM LE
				// WHERE LEARZTNR = :frmRechProtneu.nArztNr
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND leposnr*100000+lehalternr NOT IN
				// (SELECT leposnr*100000+lehalternr FROM LE WHERE
				// LEARZTNR = :frmRechProtneu.nArztNr2
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum)')
				// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgA FROM LE
				// WHERE LEARZTNR = :frmRechProtneu.nArztNr2
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND leposnr*100000+lehalternr NOT IN
				// (SELECT leposnr*100000+lehalternr FROM LE WHERE
				// LEARZTNR = :frmRechProtneu.nArztNr
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum)')
				// Call SqlImmedSel('SELECT COUNT(*) INTO :frmRechProtneu.nRgA FROM LE
				// WHERE LEARZTNR = :frmRechProtneu.nArztNr2
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum')
				// Set nRgL1 = nRgL
				// Set nAbrSumme1 = nAbrSumme1 + ((nRgL+nRgA+(nRgZ*2))-nUnterKappung)*nKappung
				// Set nAbrSL = nAbrSL +((nRgL+nRgZ*2)-nUnterKL)*nKappung
				// Set nAbrSA = nAbrSA+((nRgA+nRgZ*2)-nUnterKA)*nKappung
				// ---------------------------------
				// 19.02.04	für 9000er
				// Call SqlImmedSel('SELECT sum(lepdm)
				// INTO :frmRechProtneu.nNetto
				// FROM lep  WHERE ' || PalArztNr('lep', nArztNr, nArztNr2) || '
				// AND lepbearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND lepzeidat = 2199-12-31')
				// Set nAbrSumme1 = nAbrSumme1 - nNetto
				// Set nAbrSL = nAbrSL - nNetto

				// Set nAbrSL2 = nAbrSL
				// Set nAbrSA2 = nAbrSA
				// wenn noch nicht fertig :
				// Call SqlIstDa(' FROM LE WHERE (learztnr=:frmRechProtneu.nArztNr OR learztnr=:frmRechProtneu.nArztNr2)
				// AND lehalternr=0
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum',bExists)
				// If bExists
				// Call SalMessageBox( 'Es gibt noch Halter mit der Nr.0','Fehler',
				// MB_Ok|MB_IconExclamation )
				// Return FALSE
				// Else
				// Call SqlIstDa(' FROM LE WHERE (learztnr=:frmRechProtneu.nArztNr OR learztnr=:frmRechProtneu.nArztNr2)
				// AND lerechnr IS NULL
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND lebearbdatum=:frmRechProtneu.dtBearbDatum',bExists)
				// If bExists
				// Call SalMessageBox( 'Bitte erst
				// Rechnungen drucken
				// anwählen','Fehler',
				// MB_Ok|MB_IconExclamation )
				// Return FALSE
				// sonst weiter ...
				// Set nSeite = 0

				// Set nGesNettoL1 = 0.00
				// Set nGesMwStL1 = 0.00
				// Set nGesNettoA1 = 0.00
				// Set nGesMwStA1 = 0.00
				// Set nFetchLe = 0
				// Set strSelect = 'SELECT akzpraxart, learztnr, hnn || \', \' || hti || hvn,HNAME2,HSTR,hland || \' \' || HORT, lekennungta, lehalternr,leposnr,lerechnr,
				// lepmwst, lepla, sum(lepdm)
				// INTO :frmRechProtneu.nKZPraxArt, :frmRechProtneu.nTANr,
				// :frmRechProtneu.strTHN1, :frmRechProtneu.strTHN2, :frmRechProtneu.strTHStr, :frmRechProtneu.strTHOrt,
				// :frmRechProtneu.strKennungTA, :frmRechProtneu.nTHNr,:frmRechProtneu.nPosNr,:frmRechProtneu.nRechNr,
				// :frmRechProtneu.nMwSt, :frmRechProtneu.strLA, :frmRechProtneu.nNetto
				// FROM le, lep, h, a  WHERE ' || PalArztNr('le', nArztNr, nArztNr2) || '
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND learztnr = leparztnr AND lehalternr=lephalternr AND lebearbeiter=lepbearbeiter AND le.lebearbdatum = lep.lebearbdatum
				//  AND leposnr=lepposnr AND learztnr=harztnr AND lehalternr=hhalternr AND learztnr=aarztnr
				// GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12'
				// Call SqlHandleExecX(hSqlLe,strSelect,'Rechnungsprotokoll')
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// While nFetchLe != FETCH_EOF
				// Set nDMMwSt = SalNumberRound(nNetto * nMwSt) / 100.00
				// Set nAnz = nAnz + 1
				// If nNetto < 400
				// Set nAnzu500 = nAnzu500 + 1
				// If strLA = 'L'
				// Set nGesNettoL1 = nGesNettoL1 + nNetto
				// Set nGesMwStL1 = nGesMwStL1 + nDMMwSt
				// Else
				// Set nGesNettoA1 = nGesNettoA1 + nNetto
				// Set nGesMwStA1 = nGesMwStA1 + nDMMwSt
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// Call SqlCommit( hSqlLe )
				// für 8000er
				// Set nAnz = 0
				// Set nAnzu500 = 0
				// Set nFetchLe = 0
				// Call SqlHandleExecX(hSqlLe,
				// 'SELECT akzpraxart, learztnr, hnn || \', \' || hvn || \' \' || hti, HNAME2,HSTR,hland || \' \' || HORT, lekennungta, lehalternr,leposnr,lerechnr, sum(lepdm)
				// INTO :frmRechProtneu.nKZPraxArt, :frmRechProtneu.nTANr,
				// :frmRechProtneu.strTHN1, :frmRechProtneu.strTHN2, :frmRechProtneu.strTHStr, :frmRechProtneu.strTHOrt,
				// :frmRechProtneu.strKennungTA, :frmRechProtneu.nTHNr,:frmRechProtneu.nPosNr,:frmRechProtneu.nRechNr, :frmRechProtneu.nNetto
				// FROM le, lep, h, a  WHERE ' || PalArztNr('le', nArztNr, nArztNr2) || '
				// AND lebearbeiter=:frmRechProtneu.strBearbeiter
				// AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
				// AND learztnr = leparztnr AND lehalternr=lephalternr AND lebearbeiter=lepbearbeiter AND le.lebearbdatum = lep.lebearbdatum
				//  AND leposnr=lepposnr AND learztnr=harztnr AND lehalternr=hhalternr AND learztnr=aarztnr
				// GROUP BY 1,2,3,4,5,6,7,8,9,10'
				// ,'Rechnungsprotokoll')
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// While nFetchLe != FETCH_EOF
				// Set nAnz = nAnz + 1
				// If nNetto < 204.52
				// Set nAnzu500 = nAnzu500 + 1
				// Call SqlFetchNext(hSqlLe,nFetchLe)
				// Call SqlCommit( hSqlLe )

				// Set nMwPr = 0
				// While nMwPr < nAnzMwSt
				// Set nMwPr = nMwPr + 1
				// Set nMwNettoGL[nMwPr]=0
				// Set nMwNettoGA[nMwPr]=0
				// Set nMwMwStGL[nMwPr]=0
				// Set nMwMwStGA[nMwPr]=0

				// If nArztNr2 = 0
				// Set nProz = PalGebuehrenProz(nArztNr,(nGesNettoL1 + nGesNettoA1 + nGesMwStL1 + nGesMwStA1)/nRgL, nBearbGeb)
				// Else
				// Set nProz = PalGebuehrenProz(nArztNr,(nGesNettoL1 + nGesNettoA1 + nGesMwStL1 + nGesMwStA1)/(nRgL+nRgA+nRgZ*2), nBearbGeb)

				// If nTANr = nArztNr
				// If nArztNr2 != 0			! L+A getrennt
				// Set nAbrSumme = nAbrSL
				// Set nGesNettoL = nGesNettoL1
				// Set nGesNettoA = 0
				// Set nGesMwStL = nGesMwStL1
				// Set nGesMwStA = 0
				// Else ! L+A gemeinsam
				// Set nAbrSumme = nAbrSumme1
				// Set nGesNettoL = nGesNettoL1
				// Set nGesNettoA = nGesNettoA1
				// Set nGesMwStL = nGesMwStL1
				// Set nGesMwStA = nGesMwStA1
				// Else
				// Set nAbrSumme = nAbrSA
				// Set nGesNettoA = nGesNettoA1
				// Set nGesNettoL = 0
				// Set nGesMwStA = nGesMwStA1
				// Set nGesMwStL = 0
				// 04.04.00 8000er
				// If nArztNr >= 8000 And nArztNr <= 8999
				// Set nBearbGebOri = nBearbGeb
				// Set nBearbGeb = ((nAnz * nBearbGeb) - (nAnzu500 * 2.56)) / nAnz	! DM 5,- weniger
				// Set nPorto1 = 0
				// Set nPorto2 = 0

				// If cbohneGeb
				// Set nProz =0
				// Set nBearbGeb = 0
				// If cbohnePorto
				// Set nPorto1 = 0
				// Set nPorto2 = 0

				// Call SqlIstDa(' FROM UF WHERE ufarztnr = :frmRechProtneu.nArztNr
				// AND ufbearbeiter=:frmRechProtneu.strBearbeiter
				// AND ufbearbdatum=:frmRechProtneu.dtBearbDatum',bExists)
				// If nArztNr2 = 0
				// Set nUFRechSumm = nGesNettoL1 + nGesNettoA1 + nGesMwStL1 + nGesMwStA1
				// Set nDMProz = SalNumberRound(nAbrSumme1 * nProz) / 100
				// Set nUFGeb = (nRgL1 * nBearbGeb) +nDMProz
				// Set nUFPorto = nRgL1 * nPorto1
				// Set nUFAnzRg = nRgL1
				// NumberRound(((nBearbGeb * (nRgL + nRgZ*2)) + NumberRound(nAbrSumme * nProz /100,2) + (nPorto1 * nRgL)
				// + (nPorto2 * nRgZ) + nMehrporto) * nMwStVoll / 100, 2)
				// Else
				// Set nUFRechSumm = nGesNettoL1 + nGesMwStL1
				// Set nDMProz = SalNumberRound(nAbrSL * nProz) / 100
				// Set nUFGeb = (nRgL1 * nBearbGeb) + (nRgZ * 2 * nBearbGeb) +nDMProz
				// Set nUFPorto = nRgL1 * nPorto1 + nRgZ * nPorto2
				// Set nUFAnzRg = nRgL1 + nRgZ *2
				// 04.04.00 8000er
				// If nArztNr >= 8000 And nArztNr <= 8999
				// Set nUFGeb = ((nAnz * nBearbGebOri) - (nAnzu500 * 2.56)) 	! DM 5,- weniger
				// If cbohneGeb
				// Set nUFGeb = 0

				// If dfMehrporto != NUMBER_Null
				// Set nUFPorto = nUFPorto + dfMehrporto
				// Set nDMVSt = SalNumberRound((nUFGeb + nUFPorto) * nMwStVoll) / 100
				// Set nUFGeb = nUFGeb + nDMVSt
				// If bExists
				// Call SqlImmedX('UPDATE UF SET
				// ufrechsumm = :frmRechProtneu.nUFRechSumm,
				// ufdmgebuehr = :frmRechProtneu.nUFGeb,
				// ufprozgebuehr = :frmRechProtneu.nProz,
				// ufdmporto = :frmRechProtneu.nUFPorto,
				// ufdmvst = :frmRechProtneu.nDMVSt,
				// ufanzrg = :frmRechProtneu.nUFAnzRg
				// WHERE ufarztnr= :frmRechProtneu.nArztNr
				// AND ufbearbeiter= :frmRechProtneu.strBearbeiter
				// AND ufbearbdatum= :frmRechProtneu.dtBearbDatum')
				// Else
				// Call SqlImmedX('INSERT INTO UF (UFBEARBEITER, UFBEARBDATUM,
				// UFARZTNR, UFRECHSUMM, UFDMGEBUEHR,
				// UFPROZGEBUEHR, UFDMPORTO, UFDMVST, UFPROZVST, UFANZRG)
				// VALUES(:frmRechProtneu.strBearbeiter, :frmRechProtneu.dtBearbDatum,
				// :frmRechProtneu.nArztNr, :frmRechProtneu.nUFRechSumm,
				// :frmRechProtneu.nUFGeb,
				// :frmRechProtneu.nProz, :frmRechProtneu.nUFPorto,
				// :frmRechProtneu.nDMVSt, :nMwStVoll,
				// :frmRechProtneu.nUFAnzRg)')

				// If nArztNr2 != 0
				// Call SqlIstDa(' FROM UF WHERE ufarztnr = :frmRechProtneu.nArztNr2
				// AND ufbearbeiter=:frmRechProtneu.strBearbeiter
				// AND ufbearbdatum=:frmRechProtneu.dtBearbDatum',bExists)
				// Set nUFRechSumm = nGesNettoA1 + nGesMwStA1
				// Set nDMProz = SalNumberRound(nAbrSA * nProz) / 100
				// Set nUFGeb = (nRgA * nBearbGeb) + (nRgZ * 2 * nBearbGeb) +nDMProz
				// Set nUFPorto = nRgA * nPorto1 + nRgZ * nPorto2
				// Set nDMVSt = SalNumberRound((nUFGeb + nUFPorto) * nMwStVoll) / 100
				// Set nUFGeb = nUFGeb + nDMVSt
				// Set nUFAnzRg = nRgA + nRgZ *2
				// If bExists
				// Call SqlImmedX('UPDATE UF SET
				// ufrechsumm = :frmRechProtneu.nUFRechSumm,
				// ufdmgebuehr = :frmRechProtneu.nUFGeb,
				// ufprozgebuehr = :frmRechProtneu.nProz,
				// ufdmporto = :frmRechProtneu.nUFPorto,
				// ufdmvst = :frmRechProtneu.nDMVSt,
				// ufanzrg = :frmRechProtneu.nUFAnzRg
				// WHERE ufarztnr= :frmRechProtneu.nArztNr2
				// AND ufbearbeiter= :frmRechProtneu.strBearbeiter
				// AND ufbearbdatum= :frmRechProtneu.dtBearbDatum')
				// Else
				// Call SqlImmedX('INSERT INTO UF (UFBEARBEITER, UFBEARBDATUM,
				// UFARZTNR, UFRECHSUMM, UFDMGEBUEHR,
				// UFPROZGEBUEHR, UFDMPORTO, UFDMVST, UFPROZVST, UFANZRG)
				// VALUES(:frmRechProtneu.strBearbeiter, :frmRechProtneu.dtBearbDatum,
				// :frmRechProtneu.nArztNr2, :frmRechProtneu.nUFRechSumm,
				// :frmRechProtneu.nUFGeb,
				// :frmRechProtneu.nProz, :frmRechProtneu.nUFPorto,
				// :frmRechProtneu.nDMVSt, :nMwStVoll,
				// :frmRechProtneu.nUFAnzRg)')
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportFetchInit event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_OnSAM_ReportFetchInit(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.strReportName == "RECHPROT") 
			{
				if (Int.SqlHandleExec(this.hSqlLe, this.strSelect, "Rechnungsprotokoll", ref Var.nErr) != Sys.IDOK) 
				{
					e.Return = false;
					return;
				}
				else
				{
					this.hSqlLe.Commit();
					e.Return = true;
					return;
				}
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportFetchNext event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_OnSAM_ReportFetchNext(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.strReportName == "RECHPROT") 
			{
				if (this.hSqlLe.FetchNext(ref this.nFetch)) 
				{
					if (this.nFetch == Sys.FETCH_Ok) 
					{
						// If nTANr != nTANralt
						// If nTANralt != 0
						// Set nMehrporto = 0
						// Set nMwPr = 0
						// While nMwPr < nAnzMwSt
						// Set nMwPr = nMwPr + 1
						// Set nMwNettoGL[nMwPr]=0
						// Set nMwNettoGA[nMwPr]=0
						// Set nMwMwStGL[nMwPr]=0
						// Set nMwMwStGA[nMwPr]=0
						// Call SqlImmedSel('SELECT ATITEL, ANAME1,ANAME2,ASTR,AORT
						// INTO :frmRechProtneu.strTATitel, :frmRechProtneu.strTAN1, :frmRechProtneu.strTAN2, :frmRechProtneu.strTAStr, :frmRechProtneu.strTAOrt
						// FROM A WHERE AARZTNR = :frmRechProtneu.nTANr')
						// Set nTANralt = nTANr
						// Set nDMMwSt = SalNumberRound(nNetto * nMwSt) / 100.00
						// Set nMwPr = 0
						// While nMwPr < nAnzMwSt
						// 03.07.03 0%MwSt doppelt gedruckt , daher zusätzl. And (nMwPr=0 Or nMwSatz[nMwPr] > 0)
						// If nMwSt = nMwSatz[nMwPr] And (nMwPr=0 Or nMwSatz[nMwPr] > 0)
						// If nNetto != 0
						// If strLA = 'L'
						// Set nMwNettoGL[nMwPr] = nMwNettoGL[nMwPr] + nNetto
						// Set nMwMwStGL[nMwPr] = nMwMwStGL[nMwPr] + nDMMwSt
						// Else
						// Set nMwNettoGA[nMwPr] = nMwNettoGA[nMwPr] + nNetto
						// Set nMwMwStGA[nMwPr] = nMwMwStGA[nMwPr] + nDMMwSt
						// Set nMwPr = nMwPr + 1

						// Call SqlCommit(hSqlLe)
						// If nTANr = nArztNr
						// Set nRgL = nRgL1
						// If nArztNr2 != 0			! L+A getrennt
						// Set nAbrSumme = nAbrSL
						// Set nGesNettoL = nGesNettoL1
						// Set nGesNettoA = 0
						// Set nGesMwStL = nGesMwStL1
						// Set nGesMwStA = 0
						// Else ! L+A gemeinsam
						// Set nAbrSumme = nAbrSumme1
						// Set nGesNettoL = nGesNettoL1
						// Set nGesNettoA = nGesNettoA1
						// Set nGesMwStL = nGesMwStL1
						// Set nGesMwStA = nGesMwStA1
						// Else
						// Set nRgL = nRgA
						// Set nAbrSumme = nAbrSA
						// Set nGesNettoA = nGesNettoA1
						// Set nGesNettoL = 0
						// Set nGesMwStA = nGesMwStA1
						// Set nGesMwStL = 0

						// If cbohneGeb
						// Set nProz =0
						// Set nBearbGeb = 0
						// If cbohnePorto
						// Set nPorto1 = 0
						// Set nPorto2 = 0

						// Call SalStatusSetText(hWndForm,'Rech-Nr.: '
						// || SalNumberToStrX(nArztNr,0) || '/' || SalNumberToStrX(nRechNr,0))
						this.PalFetchNext();
						e.Return = true;
						return;
					}
					else
					{
						e.Return = false;
						return;
					}
				}
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportFinish event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmRechProtneu_OnSAM_ReportFinish(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlLe.Disconnect();
			if (this.strReportName == "RECHPROT") 
			{
				Int.SqlImmed(@"UPDATE le SET lestatus='RProt'
WHERE " + Int.PalArztNr("le", this.nArztNr, this.nArztNr2) + @"
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND lebearbdatum=:frmRechProtneu.dtBearbDatum");
			}
			this.DestroyWindow();
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Set nErr = 1
			// Set strReportName = 'RECHPROT'
			// Call PalReport(frmRechProtneu,'RECHPROT.QRP',
			// ':frmRechProtneu.nTANr,:frmRechProtneu.strTATitel,:frmRechProtneu.strTAN1,:frmRechProtneu.strTAN2,:frmRechProtneu.strTAStr,:frmRechProtneu.strTAOrt,
			// :frmRechProtneu.nTHNr,:frmRechProtneu.strTHN1,:frmRechProtneu.strTHN2,:frmRechProtneu.strTHStr,:frmRechProtneu.strTHOrt, :frmRechProtneu.strKennungTA,
			// :frmRechProtneu.strBearbeiter,:frmRechProtneu.dtBearbDatum,
			// :frmRechProtneu.nRechNr,  :frmRechProtneu.nMwSt, :frmRechProtneu.nNetto, :frmRechProtneu.nDMMwSt,
			// :frmRechProtneu.strLA, :frmRechProtneu.nRgL, :frmRechProtneu.nRgZ, :frmRechProtneu.nProz,
			// :nMwStVoll, :frmRechProtneu.nBearbGeb, :frmRechProtneu.nAbrSumme,
			// :frmRechProtneu.nPorto1, :frmRechProtneu.nPorto2, :frmRechProtneu.nMehrporto,
			// :frmRechProtneu.nGesNettoL, :frmRechProtneu.nGesNettoA,
			// :frmRechProtneu.nGesMwStL, :frmRechProtneu.nGesMwStA,
			// :frmRechProtneu.nMwNettoGL[0], :frmRechProtneu.nMwMwStGL[0],
			// :frmRechProtneu.nMwNettoGL[1], :frmRechProtneu.nMwMwStGL[1],
			// :frmRechProtneu.nMwNettoGL[2], :frmRechProtneu.nMwMwStGL[2],
			// :frmRechProtneu.nMwNettoGL[3], :frmRechProtneu.nMwMwStGL[3],
			// :frmRechProtneu.nMwNettoGL[4], :frmRechProtneu.nMwMwStGL[4],
			// :frmRechProtneu.nMwNettoGL[5], :frmRechProtneu.nMwMwStGL[5],
			// :frmRechProtneu.nMwNettoGL[6], :frmRechProtneu.nMwMwStGL[6],
			// :frmRechProtneu.nMwNettoGL[7], :frmRechProtneu.nMwMwStGL[7],
			// :frmRechProtneu.nMwNettoGL[8], :frmRechProtneu.nMwMwStGL[8],
			// :frmRechProtneu.nMwNettoGL[9], :frmRechProtneu.nMwMwStGL[9],
			// :frmRechProtneu.nMwNettoGL[10], :frmRechProtneu.nMwMwStGL[10],
			// :frmRechProtneu.nMwNettoGL[11], :frmRechProtneu.nMwMwStGL[11],
			// :frmRechProtneu.nMwNettoGA[0], :frmRechProtneu.nMwMwStGA[0],
			// :frmRechProtneu.nMwNettoGA[1], :frmRechProtneu.nMwMwStGA[1],
			// :frmRechProtneu.nMwNettoGA[2], :frmRechProtneu.nMwMwStGA[2],
			// :frmRechProtneu.nMwNettoGA[3], :frmRechProtneu.nMwMwStGA[3],
			// :frmRechProtneu.nMwNettoGA[4], :frmRechProtneu.nMwMwStGA[4],
			// :frmRechProtneu.nMwNettoGA[5], :frmRechProtneu.nMwMwStGA[5],
			// :frmRechProtneu.nMwNettoGA[6], :frmRechProtneu.nMwMwStGA[6],
			// :frmRechProtneu.nMwNettoGA[7], :frmRechProtneu.nMwMwStGA[7],
			// :frmRechProtneu.nMwNettoGA[8], :frmRechProtneu.nMwMwStGA[8],
			// :frmRechProtneu.nMwNettoGA[9], :frmRechProtneu.nMwMwStGA[9],
			// :frmRechProtneu.nMwNettoGA[10], :frmRechProtneu.nMwMwStGA[10],
			// :frmRechProtneu.nMwNettoGA[11], :frmRechProtneu.nMwMwStGA[11],
			// :nMwSatz[0], :nMwSatz[1], :nMwSatz[2], :nMwSatz[3], :nMwSatz[4], :nMwSatz[5], :nMwSatz[6],
			// :nMwSatz[7], :nMwSatz[8], :nMwSatz[9], :nMwSatz[10], :nMwSatz[11]',
			// 'TANR,TATITEL, TANAME1,TANAME2,TASTR,TAORT,
			// THNR,THNAME1,THNAME2,THSTR,THORT, KENNUNGTA,
			// BEARBEITER,BEARBDATUM,
			// nRechNr,  nMwPr, nNetto, nDMMwSt,
			// strLA, nRgL, nRgZ, nProz,
			// nMwStVoll, nBearbGeb, nAbrSumme,
			// nPorto1, nPorto2, nMehrporto,
			// nGesNettoL, nGesNettoA,
			// nGesMwStL, nGesMwStA,
			// Netto0, MwSt0,
			// Netto1, MwSt1,
			// Netto2, MwSt2,
			// Netto3, MwSt3,
			// Netto4, MwSt4,
			// Netto5, MwSt5,
			// Netto6, MwSt6,
			// Netto7, MwSt7,
			// Netto8, MwSt8,
			// Netto9, MwSt9,
			// Netto10, MwSt10,
			// Netto11, MwSt11,
			// NettoA0, MwStA0,
			// NettoA1, MwStA1,
			// NettoA2, MwStA2,
			// NettoA3, MwStA3,
			// NettoA4, MwStA4,
			// NettoA5, MwStA5,
			// NettoA6, MwStA6,
			// NettoA7, MwStA7,
			// NettoA8, MwStA8,
			// NettoA9, MwStA9,
			// NettoA10, MwStA10,
			// NettoA11, MwStA11,
			// MwPr0, MwPr1, MwPr2, MwPr3, MwPr4, MwPr5, MwPr6, MwPr7, MwPr8, MwPr9, MwPr10, MwPr11',
			// nErr)
			// LL	29.02.08
			// If PalAnfang()
			// Call SalDestroyWindow(hWndForm)
			if (dlgLlDruck.ModalDialog(App.frmMain, "Rechnungsprotokoll.lst", "")) 
			{
			}
			// 12.10.15 Ä1252
			// Set frmRechProtneu.strSelect = 'SELECT akzpraxart, learztnr, hnn || \', \' || hti || hvn,HNAME2,HSTR,hland || \' \' || HORT, hustid,
			// lekennungta, lehalternr,leposnr,lerechnr, lereverse,
			// lepmwst, lepla, sum(lepdm), sum(lepbeihilfe)
			// INTO :frmRechProtneu.nKZPraxArt, :frmRechProtneu.nTANr,
			// :frmRechProtneu.strTHN1, :frmRechProtneu.strTHN2, :frmRechProtneu.strTHStr, :frmRechProtneu.strTHOrt, :frmRechProtneu.strTHUStID,
			// :frmRechProtneu.strKennungTA, :frmRechProtneu.nTHNr,:frmRechProtneu.nPosNr,:frmRechProtneu.nRechNr, , :frmRechProtneu.nReverse,
			// :frmRechProtneu.nMwSt, :frmRechProtneu.strLA, :frmRechProtneu.nNetto, :frmRechProtneu.nRPBeihilfe
			// FROM le, lep, h, a  WHERE ' || PalArztNr('le', frmRechProtneu.nArztNr, frmRechProtneu.nArztNr2) || '
			// AND lebearbeiter=:frmRechProtneu.strBearbeiter
			// AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
			// AND learztnr = leparztnr AND lehalternr=lephalternr AND lebearbeiter=lepbearbeiter AND le.lebearbdatum = lep.lebearbdatum
			//  AND leposnr=lepposnr AND learztnr=harztnr AND lehalternr=hhalternr AND learztnr=aarztnr
			// GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14'
			Int.SqlIstDa("FROM le,h WHERE " + Int.PalArztNr("le", this.nArztNr, this.nArztNr2) + @"
AND lebearbeiter=:frmRechProtneu.strBearbeiter
AND le.lebearbdatum=:frmRechProtneu.dtBearbDatum
AND learztnr = harztnr AND lehalternr = hhalternr
AND hsperrdatum IS NOT NULL AND hdeaktiv IS NULL", ref this.bExists);
			if (this.bExists) 
			{
				dlgLlDruck.ModalDialog(App.frmMain, "RP-Sperrinfo.lst", "");
			}
			// 14.03.19 Ä1829
			// If strParent = 'D'
			// Call frmDiskAbr.PalHoleTabelle(  )


			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// dfMehrporto WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfMehrporto_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfMehrporto_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfMehrporto_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.dfMehrporto.Number == Sys.NUMBER_Null) 
			{
				this.dfMehrporto.Number = 0;
			}
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Call SalPostMsg(hWndForm, SAM_Close, 0, 0)
			this.DestroyWindow();
			#endregion
		}
		#endregion
	}
}
