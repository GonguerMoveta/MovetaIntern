// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmDatLoe : SalFormWindow
	{
		#region Window Variables
		public SalNumber nRow = 0;
		public SalBoolean bExists = false;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmDatLoe()
		{
			// Assign global reference.
			App.frmDatLoe = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmDatLoe CreateWindow(Control owner)
		{
			frmDatLoe frm = new frmDatLoe();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmDatLoe FromHandle(SalWindowHandle handle)
		{
			return ((frmDatLoe)SalWindow.FromHandle(handle, typeof(frmDatLoe)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmDatLoe WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmDatLoe_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmDatLoe_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmDatLoe_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nRow = this.tblDaten.InsertRow(Sys.TBL_MaxRow);
			this.tblDaten.SetContextRow(this.nRow);
			this.tblDaten.colsBez.Text = "Batch-Buchungen";

			this.nRow = this.tblDaten.InsertRow(Sys.TBL_MaxRow);
			this.tblDaten.SetContextRow(this.nRow);
			this.tblDaten.colsBez.Text = "Mahnbescheide";

			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.DestroyWindow();
			#endregion
		}
		#endregion
		
		#region tblDaten
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblDatenTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmDatLoe _frmDatLoe = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblDatenTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmDatLoe frmDatLoe
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmDatLoe == null) 
					{
						_frmDatLoe = (frmDatLoe)this.FindForm();
					}
					return _frmDatLoe;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblDatenTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblDatenTableWindow)SalWindow.FromHandle(handle, typeof(tblDatenTableWindow)));
			}
			#endregion
			
			#region Window Actions
			
			/// <summary>
			/// colnArztNr WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colnArztNr_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_SetFocus:
						this.colnArztNr_OnSAM_SetFocus(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_SetFocus event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colnArztNr_OnSAM_SetFocus(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				this.colnArztNr.Number = Sys.NUMBER_Null;
				this.colnHalterNr.Number = Sys.NUMBER_Null;
				this.colnRechNr.Number = Sys.NUMBER_Null;
				this.colsErgebnis.Text = "";
				#endregion
			}
			
			/// <summary>
			/// colsOk WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colsOk_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colsOk_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colsOk_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				if (this.colsOk.Text == "J") 
				{
					if (this.colsBez.Text == "Batch-Buchungen") 
					{

						// PPJ: Automatically generated temporary assignments. Properties canot be passed by reference.
						SalBoolean temp1 = this.frmDatLoe.bExists;
						Int.SqlIstDa(@" FROM bb WHERE bbarztnr = :frmDatLoe.tblDaten.colnArztNr
AND bbhalternr  = :frmDatLoe.tblDaten.colnHalterNr
AND bbrechnr = :frmDatLoe.tblDaten.colnRechNr", ref temp1);
						this.frmDatLoe.bExists = temp1;

						if (!(this.frmDatLoe.bExists)) 
						{
							this.colsErgebnis.Text = "nicht vorhanden !";
						}
						else
						{
							if (Int.SqlImmed(@"DELETE FROM bb WHERE bbarztnr = :frmDatLoe.tblDaten.colnArztNr
AND bbhalternr  = :frmDatLoe.tblDaten.colnHalterNr
AND bbrechnr = :frmDatLoe.tblDaten.colnRechNr")) 
							{
								this.colsErgebnis.Text = "gelöscht";
							}
							else
							{
								this.colsErgebnis.Text = "nicht gelöscht";
							}
						}
					}
					if (this.colsBez.Text == "Mahnbescheide") 
					{

						// PPJ: Automatically generated temporary assignments. Properties canot be passed by reference.
						SalBoolean temp2 = this.frmDatLoe.bExists;
						Int.SqlIstDa(@" FROM mb WHERE mbarztnr = :frmDatLoe.tblDaten.colnArztNr
AND mbhalternr  = :frmDatLoe.tblDaten.colnHalterNr", ref temp2);
						this.frmDatLoe.bExists = temp2;

						if (!(this.frmDatLoe.bExists)) 
						{
							this.colsErgebnis.Text = "nicht vorhanden !";
						}
						else
						{
							if (Int.SqlImmed(@"DELETE FROM mb WHERE mbarztnr = :frmDatLoe.tblDaten.colnArztNr
AND mbhalternr  = :frmDatLoe.tblDaten.colnHalterNr")) 
							{
								this.colsErgebnis.Text = "gelöscht";
							}
							else
							{
								this.colsErgebnis.Text = "nicht gelöscht";
							}
						}
					}
				}
				#endregion
			}
			#endregion
		}
		#endregion
	}
}
