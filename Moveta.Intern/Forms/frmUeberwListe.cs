// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;
using System.Xml;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmUeberwListe : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlUeberwListe = SalSqlHandle.Null;
		public SalSqlHandle hSqlUeberwDTAUS = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalNumber nFetch = 0;
		public SalNumber nErr = 0;
		public SalWindowHandle hWndReport = SalWindowHandle.Null;
		public SalFileHandle hFile = SalFileHandle.Null;
		public SalString strText = "";
		public SalString strDatei = "";
		public SalBoolean bOK = false;
		public SalNumber nResult = 0;
		public SalString strDatum = "";
		public SalNumber nTVNr = 0;
		public SalString strEmpfName = "";
		public SalString strEmpfBank = "";
		public SalString strEmpfBLZ = "";
		public SalString strEmpfKonto = "";
		public SalString strAbsBank = "";
		public SalString strAbsBLZ = "";
		public SalString strAbsKonto = "";
		public SalNumber nDM = 0;
		public SalString strVerw1 = "";
		public SalString strVerw2 = "";
		public SalString strVerw3 = "";
		public SalString strVerw4 = "";
		public SalString strROWID = "";
		public SalNumber nBankNr = 0; // nur für PalBTX
		public SalNumber nSumBLZ = 0;
		public SalNumber nSumKonto = 0;
		public SalNumber nSumSatz = 0;
		public SalNumber nSumDM = 0;
		public SalBoolean bJa = false;
		public SalString strBEZID = "";
		public SalString strEmpfIBAN = "";
		public SalString strAbsIBAN = "";
		public SalString strEmpfBIC = "";
		public SalString strAbsBIC = "";
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmUeberwListe()
		{
			// Assign global reference.
			App.frmUeberwListe = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmUeberwListe CreateWindow(Control owner)
		{
			frmUeberwListe frm = new frmUeberwListe();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmUeberwListe FromHandle(SalWindowHandle handle)
		{
			return ((frmUeberwListe)SalWindow.FromHandle(handle, typeof(frmUeberwListe)));
		}
		#endregion

		#region Methods

		/// <summary>
		/// </summary>
		/// <param name="nBankNrX"></param>
		/// <returns></returns>
		public SalNumber PalSEPA(SalNumber nBankNrX)
		{
			#region Local Variables
			SqlLocals.PalSEPALocals locals = new SqlLocals.PalSEPALocals();
			#endregion

			#region Actions
			using (new SalContext(this, locals))
			{

				// PPJ: Assign parameters to the locals instance.
				locals.nBankNrX = nBankNrX;

				// Set nResult = SalMessageBox( 'Wurde die
				// Überweisungs-Liste
				// schon gedruckt ?','Liste ?',
				// MB_YesNo|MB_IconQuestion )
				// If nResult=IDYES
				nBankNr = locals.nBankNrX;
				nSumBLZ = 0;
				nSumKonto = 0;
				// 30.05.00
				nSumDM = 0;

				nSumSatz = 0;
				nResult = Sal.MessageBox("Soll die alte Überweisungsdatei gelöscht werden  ?", "Achtung", (Sys.MB_YesNo | Sys.MB_IconExclamation));
				if (nResult == Sys.IDYES)
				{
					if (hFile.Open(Const.PATH_SFIRM_SEPA + nBankNr.ToString(0) + ".xml", Sys.OF_Delete))
					{
						hFile.Close();
					}
					if (hFile.Open(Const.PATH_SFIRM_SEPA + nBankNr.ToString(0) + ".xml", Sys.OF_Create))
					{
						hFile.Close();
						locals.bOk = true;
					}
					else
					{
						locals.bOk = false;
					}
					if (locals.bOk)
					{
						Sal.WaitCursor(true);
						//FC:FINAL: XML Änderungen
						// SEPA Kopf
						locals.oDoc = new XmlDocument();
						XmlDeclaration xmlDeclaration = locals.oDoc.CreateXmlDeclaration("1.0", "UTF-8", "no");
						//locals.oDoc.createNewDoc("", "Document");
						//locals.oDoc.getDocumentElement(locals.oRoot);
						locals.oRoot = locals.oDoc.CreateElement("Document", "");
						locals.oDoc.AppendChild(locals.oRoot);
						locals.oDoc.InsertBefore(xmlDeclaration, locals.oRoot);
						// 22.09.21 Ä1971 pain.001.002.03 -> pain.001.001.03
						locals.strns = "urn:iso:std:iso:20022:tech:xsd:pain.001.001.03";
						locals.strxsi = "http://www.w3.org/2001/XMLSchema-instance";
						locals.strsl = "urn:iso:59std:iso:20022:tech:xsd:pain.001.001.03 pain.001.001.03.xsd";
                        //FC:FINAL:#59 Setze Xml-Attribute
                        XmlAttribute xmlns = locals.oDoc.CreateAttribute("xmlns");
                        xmlns.Value = locals.strns;
                        locals.oRoot.Attributes.Append(xmlns);
                        XmlAttribute xmlnsxsi = locals.oDoc.CreateAttribute("xmlns:xsi");
                        xmlnsxsi.Value = locals.strxsi;
                        locals.oRoot.Attributes.Append(xmlnsxsi);
                        XmlAttribute schemaLocation = locals.oDoc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
                        schemaLocation.Value = locals.strsl;
                        locals.oRoot.Attributes.Append(schemaLocation);
                        // !
                        //locals.oElement = new XmlElement();
                        //locals.oDoc.createElement(locals.oTrfInit, "CstmrCdtTrfInitn");
                        locals.oTrfInit = locals.oDoc.CreateElement("CstmrCdtTrfInitn");
                        locals.oRoot.AppendChild(locals.oTrfInit);
						// ! Group Header
						//locals.oDoc.createElement(locals.oGrpHdr, "GrpHdr");
                        locals.oGrpHdr = locals.oDoc.CreateElement("GrpHdr");
                        locals.oTrfInit.AppendChild(locals.oGrpHdr);
						locals.oElement = locals.oDoc.CreateElement("MsgId");
						locals.oElement.InnerText = Int.PalDateToStrJJJJMMTThhmmsst(SalDateTime.Current);
						locals.oGrpHdr.AppendChild(locals.oElement);
						locals.oElement = locals.oDoc.CreateElement("CreDtTm");
						locals.oElement.InnerText = Int.PalDateToStrISO(SalDateTime.Current);
						locals.oGrpHdr.AppendChild(locals.oElement);
						locals.oNbOfTxs = locals.oDoc.CreateElement("NbOfTxs");
						locals.oGrpHdr.AppendChild(locals.oNbOfTxs);
						// !
						locals.oTemp = locals.oDoc.CreateElement("InitgPty");
						locals.oGrpHdr.AppendChild(locals.oTemp);
						locals.oElement = locals.oDoc.CreateElement("Nm");
						// 17.11.21 F4832 TV Nds. -> Moveta r.V.k.V.
						locals.oElement.InnerText = "Moveta r.V.k.V.";
						locals.oTemp.AppendChild(locals.oElement);
						// ! Daten
						locals.oPmtInf = locals.oDoc.CreateElement("PmtInf");
						locals.oTrfInit.AppendChild(locals.oPmtInf);
						locals.oElement = locals.oDoc.CreateElement("PmtInfId");
						locals.oElement.InnerText = "Payment-Information-ID-4711";
						locals.oPmtInf.AppendChild(locals.oElement);
						locals.oElement = locals.oDoc.CreateElement("PmtMtd");
						locals.oElement.InnerText = "TRF";
						locals.oPmtInf.AppendChild(locals.oElement);
						locals.oElement = locals.oDoc.CreateElement("BtchBookg");
						locals.oElement.InnerText = "true";
						locals.oPmtInf.AppendChild(locals.oElement);
						locals.oPmtNbOfTxs = locals.oDoc.CreateElement("NbOfTxs");
						locals.oPmtInf.AppendChild(locals.oPmtNbOfTxs);
						locals.oPmtCtrlSum = locals.oDoc.CreateElement("CtrlSum");
						locals.oPmtInf.AppendChild(locals.oPmtCtrlSum);
						// ! Call oDoc.createElement( oTemp, 'PmtTpInf' )
						// ! Call oPmtInf.appendChild( oTemp )
						// ! Call oDoc.createElement( oTemp1, 'SvcLvl' )
						// ! Call oTemp.appendChild( oTemp1 )
						// ! Call oDoc.createElement( oTemp2, 'Cd' )
						// ! Call oTemp2.setTextContent( 'SEPA' )
						// ! Call oTemp2.appendChild( oTemp1 )
						locals.oTemp1 = locals.oDoc.CreateElement("PmtTpInf");
						locals.oPmtInf.AppendChild(locals.oTemp1);
						locals.oTemp2 = locals.oDoc.CreateElement("SvcLvl");
						locals.oTemp1.AppendChild(locals.oTemp2);
						locals.oElement = locals.oDoc.CreateElement("Cd");
						locals.oElement.InnerText = "SEPA";
						locals.oTemp2.AppendChild(locals.oElement);
						// !
						locals.oElement = locals.oDoc.CreateElement("ReqdExctnDt");
						// ! gewünschtes Ausführungsdatum
						locals.oElement.InnerText = Int.PalDateToStrISO(SalDateTime.Current + 1).Left(10);
						locals.oPmtInf.AppendChild(locals.oElement);
						locals.oTemp = locals.oDoc.CreateElement("Dbtr");
						locals.oPmtInf.AppendChild(locals.oTemp);
						locals.oElement = locals.oDoc.CreateElement("Nm");
						// 17.11.21 F4832 TV Nds. -> Moveta r.V.k.V.
						locals.oElement.InnerText = "Moveta r.V.k.V.";
						locals.oTemp.AppendChild(locals.oElement);
						// ! Call oDoc.createElement( oTemp, 'DbtrAcct' )
						// ! Call oPmtInf.appendChild( oTemp )
						// ! Call oDoc.createElement( oTemp1, 'Id' )
						// ! Call oTemp.appendChild( oTemp1 )
						// ! Call oDoc.createElement( oElement, 'IBAN' )
						// ! Call oElement.setTextContent( 'DE13259501300007006573' )
						// ! Call oTemp.appendChild( oElement )
						locals.oTemp1 = locals.oDoc.CreateElement("DbtrAcct");
						locals.oPmtInf.AppendChild(locals.oTemp1);
						locals.oTemp2 = locals.oDoc.CreateElement("Id");
						locals.oTemp1.AppendChild(locals.oTemp2);
						// 29.11.13 F1797
						// 16.02.17 Ä1496
						// Set strSelect =
						// 'SELECT  uetaname, uetabank, uetablz, uetakonto,
						// uetvbank, uetvblz, uetvkonto,
						// uedm, ueverw1, ueverw2, ueverw3, ueverw4, ROWID,
						// uetaiban, uetviban, uetabic, uetvbic
						// INTO
						// :frmUeberwListe.strEmpfName, :frmUeberwListe.strEmpfBank, :frmUeberwListe.strEmpfBLZ, :frmUeberwListe.strEmpfKonto,
						// :frmUeberwListe.strAbsBank, :frmUeberwListe.strAbsBLZ, :frmUeberwListe.strAbsKonto,
						// :frmUeberwListe.nDM, :frmUeberwListe.strVerw1, :frmUeberwListe.strVerw2, :frmUeberwListe.strVerw3, :frmUeberwListe.strVerw4, :frmUeberwListe.strROWID,
						// :frmUeberwListe.strEmpfIBAN, :frmUeberwListe.strAbsIBAN, :frmUeberwListe.strEmpfBIC, :frmUeberwListe.strAbsBIC
						// FROM ue
						// WHERE uetvnr = :frmUeberwListe.nBankNr AND uetaiban IS NOT NULL AND uetabic IS NOT NULL AND ueerldat IS NULL'
						strSelect = @"SELECT  uetaname, uetabank, uetablz, uetakonto,
uetvbank, uetvblz, uetvkonto,
uedm, ueverw1, ueverw2, ueverw3, ueverw4, ROWID,
uetaiban, uetviban, uetabic, uetvbic
INTO
:frmUeberwListe.strEmpfName, :frmUeberwListe.strEmpfBank, :frmUeberwListe.strEmpfBLZ, :frmUeberwListe.strEmpfKonto,
:frmUeberwListe.strAbsBank, :frmUeberwListe.strAbsBLZ, :frmUeberwListe.strAbsKonto,
:frmUeberwListe.nDM, :frmUeberwListe.strVerw1, :frmUeberwListe.strVerw2, :frmUeberwListe.strVerw3, :frmUeberwListe.strVerw4, :frmUeberwListe.strROWID,
:frmUeberwListe.strEmpfIBAN, :frmUeberwListe.strAbsIBAN, :frmUeberwListe.strEmpfBIC, :frmUeberwListe.strAbsBIC
FROM ue ";
						if (nBankNr == 12000)
						{
							strSelect = strSelect + "WHERE uetvnr IN (12000, 15400) AND uetaiban IS NOT NULL AND uetabic IS NOT NULL AND ueerldat IS NULL";
						}
						else
						{
							strSelect = strSelect + "WHERE uetvnr = :frmUeberwListe.nBankNr AND uetaiban IS NOT NULL AND uetabic IS NOT NULL AND ueerldat IS NULL";
						}
						Int.SqlImmedSel(strSelect);

						locals.oElement = locals.oDoc.CreateElement("IBAN");
						// 29.11.13 F1797
						// Call oElement.setTextContent( 'DE13259501300007006573' )
						locals.oElement.InnerText = Int.PalIBAN("DE", strAbsBLZ, strAbsKonto);

						locals.oTemp2.AppendChild(locals.oElement);
						// !
						locals.oTemp = locals.oDoc.CreateElement("DbtrAgt");
						locals.oPmtInf.AppendChild(locals.oTemp);
						locals.oTemp1 = locals.oDoc.CreateElement("FinInstnId");
						locals.oTemp.AppendChild(locals.oTemp1);
						locals.oElement = locals.oDoc.CreateElement("BIC");
						// 29.11.13 F1797
						// Call oElement.setTextContent( 'NOLADE21HIK' )
						locals.oElement.InnerText = Int.PalGetBIC(strAbsBLZ);

						locals.oTemp1.AppendChild(locals.oElement);
						locals.oElement = locals.oDoc.CreateElement("ChrgBr");
						locals.oElement.InnerText = "SLEV";
						locals.oPmtInf.AppendChild(locals.oElement);
						// 16.07.19 Ä1860
						App.frmMain.nUeberwNr = Int.PalGetProfileInt("BH", "Ueberweisungsnummer", 1);
						Int.PalSetProfileString("BH", "Ueberweisungsnummer", (App.frmMain.nUeberwNr + 1).ToString(0));


						Int.SqlConnection(ref hSqlUeberwDTAUS);
						// Set strSelect =
						// 'SELECT  uetaname, uetabank, uetablz, uetakonto,
						// uetvbank, uetvblz, uetvkonto,
						// uedm, ueverw1, ueverw2, ueverw3, ueverw4, ROWID,
						// uetaiban, uetviban, uetabic, uetvbic
						// INTO
						// :frmUeberwListe.strEmpfName, :frmUeberwListe.strEmpfBank, :frmUeberwListe.strEmpfBLZ, :frmUeberwListe.strEmpfKonto,
						// :frmUeberwListe.strAbsBank, :frmUeberwListe.strAbsBLZ, :frmUeberwListe.strAbsKonto,
						// :frmUeberwListe.nDM, :frmUeberwListe.strVerw1, :frmUeberwListe.strVerw2, :frmUeberwListe.strVerw3, :frmUeberwListe.strVerw4, :frmUeberwListe.strROWID,
						// :frmUeberwListe.strEmpfIBAN, :frmUeberwListe.strAbsIBAN, :frmUeberwListe.strEmpfBIC, :frmUeberwListe.strAbsBIC
						// FROM ue
						// WHERE uetvnr = :frmUeberwListe.nBankNr AND uetaiban IS NOT NULL AND uetabic IS NOT NULL AND ueerldat IS NULL'
						Int.SqlHandleExec(hSqlUeberwDTAUS, strSelect, "Fehler", ref Var.nCount);
						nFetch = hSqlUeberwDTAUS.FetchNext();
						while (nFetch != Sys.FETCH_EOF)
						{
							strAbsBLZ = Int.PalStrNullen(strAbsBLZ, 8);
							strAbsKonto = Int.PalStrNullen(strAbsKonto, 10);
							strEmpfName = Int.PalLF(Int.PalStringToSEPA(strEmpfName), 27);
							strEmpfBLZ = Int.PalStrNullen(strEmpfBLZ, 8);
							strEmpfKonto = Int.PalStrNullen(strEmpfKonto, 10);
							strVerw1 = Int.PalLF(Int.PalStringToSEPA(strVerw1), 35);
							strVerw2 = Int.PalLF(Int.PalStringToSEPA(strVerw2), 35);
							strVerw3 = Int.PalLF(Int.PalStringToSEPA(strVerw3), 35);
							strVerw4 = Int.PalLF(Int.PalStringToSEPA(strVerw4), 35);

							// ! Begin der Datensätze
							locals.oTemp = locals.oDoc.CreateElement("CdtTrfTxInf");
							locals.oPmtInf.AppendChild(locals.oTemp);
							locals.oTemp1 = locals.oDoc.CreateElement("PmtId");
							locals.oTemp.AppendChild(locals.oTemp1);
							// ! Kundenreferenz, mit Sparkasse noch abklären
							locals.oElement = locals.oDoc.CreateElement("EndToEndId");
							strBEZID = Int.PalDateToStrJJJJMMTThhmmsst(SalDateTime.Current);
							locals.oElement.InnerText = strBEZID;
							locals.oTemp1.AppendChild(locals.oElement);
							locals.oTemp1 = locals.oDoc.CreateElement("Amt");
							locals.oTemp.AppendChild(locals.oTemp1);
							locals.oElement = locals.oDoc.CreateElement("InstdAmt");
							// ! Betrag
							locals.oElement.InnerText = Int.PalDelZeichen(Int.PalStrNumDecPoint(nDM, 10, 2), " ");
							locals.oElement.SetAttribute("Ccy", "EUR");
							locals.oTemp1.AppendChild(locals.oElement);
							locals.oTemp1 = locals.oDoc.CreateElement("CdtrAgt");
							locals.oTemp.AppendChild(locals.oTemp1);
							locals.oTemp2 = locals.oDoc.CreateElement("FinInstnId");
							locals.oTemp1.AppendChild(locals.oTemp2);
							locals.oElement = locals.oDoc.CreateElement("BIC");
							// ! BIC-Empfänger-BIC
							locals.oElement.InnerText = strEmpfBIC;
							locals.oTemp2.AppendChild(locals.oElement);
							locals.oTemp1 = locals.oDoc.CreateElement("Cdtr");
							locals.oTemp.AppendChild(locals.oTemp1);
							locals.oElement = locals.oDoc.CreateElement("Nm");
							// ! Empfängername
							locals.oElement.InnerText = strEmpfName;
							locals.oTemp1.AppendChild(locals.oElement);
							locals.oTemp1 = locals.oDoc.CreateElement("CdtrAcct");
							locals.oTemp.AppendChild(locals.oTemp1);
							locals.oTemp2 = locals.oDoc.CreateElement("Id");
							locals.oTemp1.AppendChild(locals.oTemp2);
							locals.oElement = locals.oDoc.CreateElement("IBAN");
							locals.oElement.InnerText = strEmpfIBAN;
							locals.oTemp2.AppendChild(locals.oElement);
							locals.oTemp1 = locals.oDoc.CreateElement("RmtInf");
							locals.oTemp.AppendChild(locals.oTemp1);
							locals.oElement = locals.oDoc.CreateElement("Ustrd");
							locals.oElement.InnerText = strVerw1 + strVerw2 + strVerw3 + strVerw4;
							locals.oTemp1.AppendChild(locals.oElement);
							// !
							// Ende Else
							nSumBLZ = nSumBLZ + strEmpfBLZ.ToNumber();
							nSumKonto = nSumKonto + strEmpfKonto.ToNumber();
							nSumDM = nSumDM + nDM;
							nSumSatz = nSumSatz + 1;
							// Call SqlImmedX('DELETE FROM ue WHERE ROWID = :frmUeberwListe.strROWID')
							Int.SqlImmedX("UPDATE ue SET ueerldat = SYSDATE WHERE ROWID = :frmUeberwListe.strROWID");
							this.SetStatusBarText("Überweisung " + " € " + nDM.ToString(2) + "  " + strEmpfBank);
							nFetch = hSqlUeberwDTAUS.FetchNext();
						}
						hSqlUeberwDTAUS.Commit();
						hFile.Close();
						hSqlUeberwDTAUS.Disconnect();
						// SEPA Fuß
						locals.oNbOfTxs.InnerText = nSumSatz.ToString(0);
						locals.oPmtNbOfTxs.InnerText = nSumSatz.ToString(0);
						locals.oPmtCtrlSum.InnerText = Int.PalStringStrip(Int.PalStrNumDecPoint(nSumDM, 8, 2), " ");
						//locals.oDoc.setFeature(Const.XMLDOC_FORMAT_PRETTY_PRINT, 1);
						//locals.oDoc.writeToFile(Const.PATH_SFIRM_SEPA + nBankNr.ToString(0) + ".xml");
						// Save the document with pretty-printing
						locals.oDoc.Save(Const.PATH_SFIRM_SEPA + nBankNr.ToString(0) + ".xml");
                        
                        strSelect = @"SELECT uetvnr, uetaname, uedm, @choose( uemanuell, '*', ' '), ROWID, uebearbeiter, ueverw1, ueverw2, uetaiban, uetabic
INTO :frmUeberwListe.tblUeberw.colnNr, :frmUeberwListe.tblUeberw.colsTAName,
:frmUeberwListe.tblUeberw.colnDM, :frmUeberwListe.tblUeberw.colsStern, :frmUeberwListe.tblUeberw.colsROWID,
:frmUeberwListe.tblUeberw.colsBearbeiter, :frmUeberwListe.tblUeberw.colsVerw1, :frmUeberwListe.tblUeberw.colsVerw2, :frmUeberwListe.tblUeberw.colsIBAN, :frmUeberwListe.tblUeberw.colsBIC
FROM ue WHERE ueerldat IS NULL order by uebearbeiter";
						if (tblUeberw.Populate(hSqlUeberwListe, strSelect, Sys.TBL_FillAll))
						{
						}
						// 16.07.19 Ä1860 + ueexportnr
						Sal.MessageBox("Die Erstellung der Übergabedatei Nr. " + Sal.NumberToStrX(App.frmMain.nUeberwNr, 0) + " ist abgeschlossen.", "Ok", (Sys.MB_Ok | Sys.MB_IconAsterisk));

						Sal.WaitCursor(false);
						this.SetStatusBarText("Übergabe beendet");
					}
					else
					{
						Sal.MessageBox("Die Datei " + Const.PATH_SFIRM_SEPA + nBankNr.ToString(0) + ".xml konnte nicht erstellt werden.", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
					}
				}
				if (locals.bOk)
				{
					PalSumme();
				}

				return 0;
			}
			#endregion
		}

		/// <summary>
		/// schreibe String als SalFilePutChar
		/// </summary>
		/// <param name="str128"></param>
		/// <returns></returns>
		public SalNumber PalPut128(SalString str128)
		{
			#region Local Variables
			SalNumber nDispl = 0;
			SalNumber nByte = 0;
			SalBoolean bReturn = false;
			SalString strDummy = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nDispl = str128.Length;
				nDispl = 0;
				while (nDispl < str128.Length) 
				{
					strDummy = str128.Mid(nDispl, 1);
					nByte = Sal.StrLop(ref strDummy);
					hFile.PutChar(nByte);
					nDispl = nDispl + 1;
				}
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalSumme()
		{
			#region Actions
			using (new SalContext(this))
			{
				Int.SqlImmedSel(@" SELECT sum( uedm) INTO :frmUeberwListe.dfSumme FROM ue
		WHERE uebearbeiter = :frmUeberwListe.dfZeichen AND ueerldat IS NULL");
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="strDruck"></param>
		/// <returns></returns>
		public SalNumber Drucke(SalString strDruck)
		{
			#region Actions
			using (new SalContext(this))
			{
				hFile.PutString(strDruck);
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalNachtragenBIC()
		{
			#region Actions
			using (new SalContext(this))
			{
				Int.SqlConnection(ref hSqlUeberwDTAUS);
				strSelect = @"SELECT  uetaiban INTO :frmUeberwListe.strEmpfIBAN FROM ue
WHERE ueerldat IS NULL AND uetabic IS NULL AND uetaiban IS NOT NULL";
				Int.SqlHandleExec(hSqlUeberwDTAUS, strSelect, "Fehler Nachtragen BIC", ref Var.nCount);
				nFetch = hSqlUeberwDTAUS.FetchNext();
				while (nFetch != Sys.FETCH_EOF) 
				{
					strEmpfBIC = "";
					strEmpfBIC = Int.PalGetBIC(strEmpfIBAN.Mid(4, 8));
					if (strEmpfBIC != "") 
					{
						Int.SqlImmedX("UPDATE ue SET uetabic = :frmUeberwListe.strEmpfBIC WHERE uetaiban = :frmUeberwListe.strEmpfIBAN AND ueerldat IS NULL");
					}
					nFetch = hSqlUeberwDTAUS.FetchNext();
				}
				hSqlUeberwDTAUS.Commit();
				hSqlUeberwDTAUS.Disconnect();
			}

			return 0;
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmUeberwListe WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmUeberwListe_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Activate:
					this.frmUeberwListe_OnSAM_Activate(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmUeberwListe_OnSAM_Close(sender, e);
					break;
				
				case Sys.SAM_ReportStart:
					this.frmUeberwListe_OnSAM_ReportStart(sender, e);
					break;
				
				case Sys.SAM_ReportFetchInit:
					this.frmUeberwListe_OnSAM_ReportFetchInit(sender, e);
					break;
				
				case Sys.SAM_ReportFetchNext:
					this.frmUeberwListe_OnSAM_ReportFetchNext(sender, e);
					break;
				
				case Sys.SAM_ReportFinish:
					this.frmUeberwListe_OnSAM_ReportFinish(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.FileSetCurrentDirectory(Var.strTVNPath);
			// 06.02.14
			this.PalNachtragenBIC();

			Int.SqlConnection(ref this.hSqlUeberwListe);
			this.dfZeichen.Text = Var.strBNZei;
			this.PalSumme();
			this.strSelect = @"SELECT uetvnr, uetaname, uedm, @choose( uemanuell, '*', ' '), ROWID, uebearbeiter, ueverw1, ueverw2, uetaiban, uetabic
INTO :frmUeberwListe.tblUeberw.colnNr, :frmUeberwListe.tblUeberw.colsTAName,
:frmUeberwListe.tblUeberw.colnDM, :frmUeberwListe.tblUeberw.colsStern, :frmUeberwListe.tblUeberw.colsROWID,
:frmUeberwListe.tblUeberw.colsBearbeiter, :frmUeberwListe.tblUeberw.colsVerw1, :frmUeberwListe.tblUeberw.colsVerw2, :frmUeberwListe.tblUeberw.colsIBAN, :frmUeberwListe.tblUeberw.colsBIC
FROM ue WHERE  ueerldat IS NULL order by uetvnr";
			this.tblUeberw.Populate(this.hSqlUeberwListe, this.strSelect, Sys.TBL_FillAll);
			// Call SalTblSetFocusCell( tblUeberw, 0, tblUeberw.colnArztNr, 0, -1 )
			// 04.09.07 A145
			if (Int.PalFormFrei("Übergaben")) 
			{
				this.dfSperre.Text = "Übergaben erlaubt";
				this.dfSperre.SetWindowColor(Sys.COLOR_IndexWindow, Sys.COLOR_DarkGreen);
			}
			else
			{
				this.dfSperre.Text = "Übergaben gesperrt !";
				this.dfSperre.SetWindowColor(Sys.COLOR_IndexWindow, Sys.COLOR_Red);
				this.pbLösch.DisableWindow();
				this.pbNeu.DisableWindow();
				this.pbAendern.DisableWindow();
			}

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_Activate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_Activate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			//FC:FINAL: check if from still exists
			if(App.frmUeberwListe == null)
            {
                return;
            }
			this.PalSumme();
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.tblUeberw.KillCellEdit();
			this.hSqlUeberwListe.Disconnect();
			Sal.EnableWindow(App.frmMain.pbUeberw);
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportStart event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_ReportStart(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 30.04.03
			if (Var.hWndfrmReport) 
			{
				Var.hWndfrmReport.BringWindowToTop();
			}

			Sal.ReportDlgOptions(Sys.wParam.ToWindowHandle(), "", "Druck läuft", "", "");
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportFetchInit event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_ReportFetchInit(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.bJa = true;
			e.Return = true;
			return;
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportFetchNext event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_ReportFetchNext(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.bJa == true) 
			{
				this.bJa = false;
				e.Return = true;
				return;
			}
			else
			{
				e.Return = false;
				return;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_ReportFinish event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmUeberwListe_OnSAM_ReportFinish(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			#endregion
		}
		
		/// <summary>
		/// pbLösch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLösch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbLösch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLösch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// ----------------------------------------------LÖSCHEN-------------------------------------------------------------------------------
			if (this.tblUeberw.AnyRows(Sys.ROW_Selected, 0)) 
			{
				// 30.05.08 A235 +  And strBNAbtlg != 'BH'
				if (this.tblUeberw.colsStern.Text == "*" && Var.strBNAbtlg != "BH") 
				{
					Sal.MessageBox(@"Diese Überweisung ist
eine automatische Buchung und kann
daher nicht gelöscht werden !", "Achtung", (Sys.MB_Ok | Sys.MB_IconExclamation));
				}
				else
				{
					Int.SqlImmedX(@"DELETE FROM ue
WHERE ROWID = :frmUeberwListe.tblUeberw.colsROWID");
					// Call SalTblReset(tblUeberw)
					this.tblUeberw.Populate(this.hSqlUeberwListe, this.strSelect, Sys.TBL_FillAll);
					this.PalSumme();
				}
			}
			#endregion
		}
		
		/// <summary>
		/// pbNeu WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbNeu_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			frmUeberw.CreateWindow(this, "");
			#endregion
		}
		
		/// <summary>
		/// pbAendern WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAendern_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAendern_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAendern_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// ----------------------------------------------ÄNDERN-------------------------------------------------------------------------------
			if (this.tblUeberw.AnyRows(Sys.ROW_Selected, 0)) 
			{
				if (this.tblUeberw.colsStern.Text == "*") 
				{
					Sal.MessageBox("Diese Überweisung ist gesperrt und kann nicht geändert werden !", "Achtung", (Sys.MB_Ok | Sys.MB_IconExclamation));
				}
				else
				{
					frmUeberw.CreateWindow(this, this.tblUeberw.colsROWID.Text);
				}
			}
			else
			{
				frmUeberw.CreateWindow(this, "");
			}
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Set nErr = 1
			// Set strReportName = 'UEBERW'
			// Set hWndReport = SalReportTableView(tblUeberw,hWndNULL,'UEBERW.QRP',nErr)
			// LL
			dlgLlDruck.ModalDialog(App.frmMain, "Überweisungen.lst", "");
			#endregion
		}
		
		/// <summary>
		/// pbKSKSEPA WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbKSKSEPA_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbKSKSEPA_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbKSKSEPA_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nResult = Sal.MessageBox(@"Wurde die
Überweisungs-Liste
schon gedruckt ?", "Liste ?", (Sys.MB_YesNo | Sys.MB_IconQuestion));
			if (this.nResult == Sys.IDYES) 
			{
                this.PalSEPA(12000);
			}
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblUeberw
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblUeberwTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmUeberwListe _frmUeberwListe = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblUeberwTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmUeberwListe frmUeberwListe
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmUeberwListe == null) 
					{
						_frmUeberwListe = (frmUeberwListe)this.FindForm();
					}
					return _frmUeberwListe;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblUeberwTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblUeberwTableWindow)SalWindow.FromHandle(handle, typeof(tblUeberwTableWindow)));
			}
			#endregion
		}
		#endregion
		
		#region SqlLocals
		
		/// <summary>
		/// Container class used to group the inner classes that contain
		/// the local variables that have been extracted from methods that use sql calls.
		/// </summary>
		private class SqlLocals
		{
			
			/// <summary>
			/// Contains the local variables that have been extracted from the
			/// method that uses sql calls and might need to access local bind variables.
			/// </summary>
			public class PalSEPALocals
			{
				public XmlDocument oDoc = new XmlDocument();
				public XmlAttribute oAttr;
				public XmlElement oElement;
				public XmlElement oRoot;
				public XmlNode oNode;
				public XmlElement oTrfInit;
				public XmlElement oGrpHdr;
				public XmlElement oNbOfTxs;
				public XmlElement oPmtNbOfTxs;
				public XmlElement oPmtCtrlSum;
				public XmlElement oTemp;
				public XmlElement oTemp1;
				public XmlElement oTemp2;
				public XmlElement oTemp3;
				public XmlElement oTemp4;
				public XmlElement oTemp5;
				public XmlElement oTemp6;
				public XmlElement oTemp7;
				public XmlElement oTemp8;
				public XmlElement oTemp9;
				public XmlElement oTemp10;
				public XmlElement oPmtInf;
				public SalString strxsi = "";
				public SalString strns = "";
				public SalString strsl = "";
				// 30.11.23 Mail Burgbacher von heute
				public SalBoolean bOk = false;
				public SalNumber nBankNrX = 0;
			}
		}
		#endregion
	}
}
