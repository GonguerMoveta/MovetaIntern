// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmKA : SalQuickTabsForm
	{
		#region Window Variables
		public SalSqlHandle hSqlKA = SalSqlHandle.Null;
		public SalSqlHandle hSqlKAOP = SalSqlHandle.Null;
		public SalSqlHandle hSqlKAOP2 = SalSqlHandle.Null;
		public SalSqlHandle hSqlKAOP3 = SalSqlHandle.Null;
		public SalSqlHandle hSqlKAUms = SalSqlHandle.Null;
		public SalSqlHandle hSqlKAMS = SalSqlHandle.Null;
		public SalNumber nFetch = 0;
		public SalNumber nFetchOP = 0;
		public SalNumber nFetchOP3 = 0;
		public SalNumber nFetchUms = 0;
		public SalNumber nFetchMS = 0;
		public SalNumber nArztNr = 0;
		public SalNumber nSaldo = 0;
		public SalNumber nSaldo1 = 0;
		public SalNumber nOP = 0;
		public SalNumber nOP2 = 0;
		public SalNumber nProz = 0;
		public SalString strSelect = "";
		public SalNumber nCount = 0;
		public SalDateTime dtDatum = SalDateTime.Null;
		public SalString strText = "";
		public SalBoolean bPOk = false;
		public SalBoolean bPOk2 = false;
		public SalNumber nJahr = 0;
		public SalNumber nUms = 0;
		public SalNumber nRow4 = 0;
		public SalString lsGFKrit = "";
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmKA()
		{
			// Assign global reference.
			App.frmKA = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmKA CreateWindow(Control owner)
		{
			frmKA frm = new frmKA();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmKA FromHandle(SalWindowHandle handle)
		{
			return ((frmKA)SalWindow.FromHandle(handle, typeof(frmKA)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <param name="dtPDatum"></param>
		/// <returns></returns>
		public SalNumber PalFindRow4(SalDateTime dtPDatum)
		{
			#region Local Variables
			SalNumber nPRow = 0;
			SalNumber nPRet = 0;
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nPRet = -1;
				nPRow = Sys.TBL_MinRow;
				while (tblKA4.FindNextRow(ref nPRow, 0, 0)) 
				{
					tblKA4.SetFocusRow(nPRow);
					if (tblKA4.colDatum.DateTime == dtPDatum) 
					{
						nPRet = nPRow;
						nPRow = Sys.TBL_MaxRow;
					}
				}
				return nPRet;
			}
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmKA WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmKA_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmKA_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmKA_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmKA_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.cbAktivAlle.Checked = true;
			// 06.01.14 Ä1005 RO
			Int.SqlConnection(ref this.hSqlKA);
			Int.SqlConnection(ref this.hSqlKAOP);
			Int.SqlConnection(ref this.hSqlKAOP2);
			Int.SqlConnection(ref this.hSqlKAOP3);
			Int.SqlConnection(ref this.hSqlKAUms);
			Int.SqlConnection(ref this.hSqlKAMS);
			// Call SqlCreateSession(hSession,'')
			// Call SqlCreateStatement (hSession, hSqlKA)
			// Call SqlSetIsolationLevel(hSqlKA,'RO')
			// Call SqlCreateStatement (hSession, hSqlKAOP)
			// Call SqlSetIsolationLevel(hSqlKAOP,'RO')
			// Call SqlCreateStatement (hSession, hSqlKAOP2)
			// Call SqlSetIsolationLevel(hSqlKAOP2,'RO')
			// Call SqlCreateStatement (hSession, hSqlKAUms)
			// Call SqlSetIsolationLevel(hSqlKAUms,'RO')
			// Call SqlCreateStatement (hSession, hSqlKAMS)
			// Call SqlSetIsolationLevel(hSqlKAMS,'RO')

			// 22.02.12 F1213
			// Call SqlPrepare(hSqlKAOP,
			// 'SELECT sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl),
			// sum(@choose(rkmahnstufe-3, rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl, 0))
			// INTO :frmKA.nOP, :frmKA.nOP2
			// FROM rk
			// WHERE rkarztnr = :frmKA.nArztNr
			// AND rkkzzahl <2 AND rkmahnstufe IS NOT NULL'  )
			// 06.05.21 F4776 + AND rkrechnr<999990
			Int.SqlPrepar(this.hSqlKAOP, @"SELECT sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl)
INTO :frmKA.nOP
FROM rk
WHERE rkarztnr = :frmKA.nArztNr
AND rkkzzahl <2 AND rkdeaktiv IS NULL AND rkrechnr<999990");
			// 06.05.21 F4776 + AND rkrechnr<999990
			Int.SqlPrepar(this.hSqlKAOP2, @"SELECT sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl)
INTO :frmKA.nOP2
FROM rk
WHERE rkarztnr = :frmKA.nArztNr AND rkmahnstufe BETWEEN 0 AND 3
AND rkkzzahl <2 AND rkdeaktiv IS NULL AND rkrechnr<999990");
			// 04.08.15 Ä1236 + agfkrit
			Int.SqlPrepar(this.hSqlKAOP3, "SELECT agfkrit INTO :frmKA.lsGFKrit FROM a WHERE aarztnr = :frmKA.tblKA.colArztNr");

			Int.SqlPrepar(this.hSqlKAUms, @"SELECT @YEAR(akdatum)+1900, sum(akrechsumm)
INTO :frmKA.nJahr, :frmKA.nUms
FROM ak
WHERE akarztnr = :frmKA.nArztNr AND akdatum >= SYSDATE -1 YEAR
AND aktyp = 'RG' AND aktypdetail = 'UebOP' AND akdeaktiv IS NULL GROUP BY 1");
			// 06.05.21 F4776 + AND rkrechnr<999990
			Int.SqlPrepar(this.hSqlKAMS, @"SELECT rkmahnstufe, sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl)
INTO :frmKA.nJahr, :frmKA.nUms
FROM rk
WHERE rkarztnr = :frmKA.nArztNr AND rkkzzahl<2 AND rkdeaktiv IS NULL AND rkrechnr<999990 GROUP BY 1");

			this.dfvon2.DateTime = new SalDateTime(SalDateTime.Current.Year(), 1, 1, 0, 0, 0);
			this.dfbis2.DateTime = new SalDateTime(SalDateTime.Current.Year(), 12, 31, 23, 59, 59);
			// 12.12.23 Ä2149
			this.dfabBetrag.Number = 0;
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmKA_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlKAOP.Disconnect();
			this.hSqlKAOP2.Disconnect();
			this.hSqlKAOP3.Disconnect();
			this.hSqlKA.Disconnect();
			// Call SqlFreeSession( hSession )
			#endregion
		}
		
		/// <summary>
		/// picTabs WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void picTabs_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case QO.TABSM_TabActivateFinish:
					this.picTabs_OnTABSM_TabActivateFinish(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// TABSM_TabActivateFinish event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void picTabs_OnTABSM_TabActivateFinish(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Var.nErr = this.picTabs.GetClicked();
			if (Var.nErr == 3) 
			{
				this.dfArztNr4.SetFocus();
			}
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Call SalTblPopulate( tblKA, hSqlKA,
			// 'SELECT  aarztnr, (min(avorhaben) - min(avorsoll) + sum(tkhaben) - sum(tksoll) )
			// FROM a,tk
			// INTO :frmKA.tblKA.colArztNr, :frmKA.tblKA.colSaldo
			// WHERE aarztnr = tkarztnr
			// GROUP BY aarztnr',
			// TBL_FillAllBackground )
			this.tblKA.ResetTable();
			Sal.WaitCursor(true);
			// Call SqlPrepare( hSqlKA,
			// 'SELECT  aarztnr, (min(avorsoll) - min(avorhaben) + sum(tksoll) - sum(tkhaben) )
			// FROM a,tk
			// INTO :frmKA.nArztNr, :frmKA.nSaldo
			// WHERE aarztnr = tkarztnr
			// GROUP BY aarztnr' )
			Int.SqlPrepar(this.hSqlKA, @"SELECT  aarztnr, min(avorsoll) - min(avorhaben), sum(tksoll) - sum(tkhaben)
FROM a,tk
INTO :frmKA.nArztNr, :frmKA.nSaldo, :frmKA.nSaldo1
WHERE aarztnr = tkarztnr(+)
GROUP BY aarztnr");
			Int.SqlExecut(this.hSqlKA, @"SELECT  aarztnr, min(avorsoll) - min(avorhaben), sum(tksoll) - sum(tkhaben)
FROM a,tk
INTO :frmKA.nArztNr, :frmKA.nSaldo, :frmKA.nSaldo1
WHERE aarztnr = tkarztnr(+)
GROUP BY aarztnr");
			this.nFetch = this.hSqlKA.FetchNext();
			while (this.nFetch != Sys.FETCH_EOF) 
			{
				// 14.11.11 Ä656 +  sum(@choose(rkmahnstufe-3, rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl, 0))
				// 15.02.12 F1213 raus:  AND rkmahnstufe IS NOT NULL
				// 22.02.12 F1213
				// Call SqlExecut(hSqlKAOP,
				// 'SELECT sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl),
				// sum(@choose(rkmahnstufe-3, rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl, 0))
				// INTO :frmKA.nOP, :frmKA.nOP2
				// FROM rk
				// WHERE rkarztnr = :frmKA.nArztNr
				// AND rkkzzahl <2' )
				Int.SqlExecut(this.hSqlKAOP, "KA: hSqlKAOP");
				this.nFetchOP = this.hSqlKAOP.FetchNext();
				// Call SqlCommit( hSqlKAOP )
				if (this.nOP == SalNumber.Null) 
				{
					this.nOP = 0;
				}
				// 06.05.21 F4776 + AND rkrechnr<999990
				// 08.03.23 Ä2088 wieder taus:  AND rkrechnr<999990
				Int.SqlExecut(this.hSqlKAOP2, @"SELECT sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl)
INTO :frmKA.nOP2
FROM rk
WHERE rkarztnr = :frmKA.nArztNr AND rkmahnstufe BETWEEN 0 AND 3
AND rkkzzahl <2 AND rkdeaktiv IS NULL");
				this.nFetchOP = this.hSqlKAOP2.FetchNext();
				// Call SqlCommit( hSqlKAOP2 )
				if (this.nOP2 == SalNumber.Null) 
				{
					this.nOP2 = 0;
				}
				// 05.11.10 OTÄ488
				if (this.nSaldo == SalNumber.Null) 
				{
					this.nSaldo = 0;
				}
				if (this.nSaldo1 == SalNumber.Null) 
				{
					this.nSaldo1 = 0;
				}
				this.nSaldo = this.nSaldo + this.nSaldo1;

				// 12.12.23 Ä2149 0 -> dfabBetrag
				if (this.nSaldo > this.dfabBetrag.Number) 
				{
					if (this.nOP2 != 0) 
					{
						this.nProz = this.nSaldo / this.nOP2 * 100;
					}
					else
					{
						this.nProz = SalNumber.Null;
					}
					if (this.nProz > 70 || this.nProz == SalNumber.Null) 
					{
						this.tblKA.InsertRow(Sys.TBL_MaxRow);
						this.tblKA.colAktiv.Number = 1;
						this.tblKA.colArztNr.Number = this.nArztNr;
						// 04.08.15 Ä1236 + agfkrit
						Int.SqlExecut(this.hSqlKAOP3, "SELECT agfkrit INTO :frmKA.lsGFKrit FROM a WHERE aarztnr = :frmKA.tblKA.colArztNr");
						this.nFetchOP3 = this.hSqlKAOP3.FetchNext();
						this.tblKA.colGFBemerk.Text = this.lsGFKrit;
						// 13.02.12 F1207
						// Set tblKA.colSaldo = nSaldo * -1
						this.tblKA.colSaldo.Number = this.nSaldo;

						this.tblKA.colOP.Number = this.nOP;
						this.tblKA.colOP2.Number = this.nOP2;
						this.tblKA.colProz.Number = this.nProz;
						this.tblKA.colBemerk.Text = "";
						// Letzt Rechngs-sendung
						this.dtDatum = SalDateTime.Null;
						this.nUms = 0;
						Int.SqlImmedSel(@"SELECT akdatum, akrechsumm INTO :frmKA.dtDatum, :frmKA.nUms FROM ak
WHERE akarztnr = :frmKA.nArztNr AND aktyp='RG' AND aktypdetail = 'UebOP' AND akrechsumm>0 AND akdeaktiv IS NULL
ORDER BY akdatum DESC");
						this.tblKA.colBemerk.Text = this.tblKA.colBemerk.Text + "Ltzt. Abrechnung vom " + Int.PalDateToStrDE(this.dtDatum) + ": € " + Int.PalStrNum(this.nUms, 8, 2) + @"

";
						// Umsätze
						this.nJahr = 0;
						this.nUms = 0;
						Int.SqlExecut(this.hSqlKAUms, @"SELECT @YEAR(akdatum)+1900, sum(akrechsumm)
INTO :frmKA.nJahr, :frmKA.nUms
FROM ak
WHERE akarztnr = :frmKA.nArztNr AND akdatum >= SYSDATE -1 YEAR AND akdeaktiv IS NULL
AND aktyp = 'RG' AND aktypdetail = 'UebOP' GROUP BY 1");
						this.nFetchUms = this.hSqlKAUms.FetchNext();
						while (this.nFetchUms != Sys.FETCH_EOF) 
						{
							this.tblKA.colBemerk.Text = this.tblKA.colBemerk.Text + "Umsatz " + Int.PalStrNum(this.nJahr, 4, 0) + ": € " + Int.PalStrNum(this.nUms, 8, 2) + @"
";
							this.nFetchUms = this.hSqlKAUms.FetchNext();
						}
						// Call SqlCommit( hSqlKAUms )
						this.tblKA.colBemerk.Text = this.tblKA.colBemerk.Text + @"

";
						// OPMS
						this.nJahr = 0;
						this.nUms = 0;
						// 06.05.21 F4776 + AND rkrechnr<999990
						Int.SqlExecut(this.hSqlKAMS, @"SELECT rkmahnstufe, sum(rkdmleis+rkdmarzn+rkdmmahn+rkdmzins+rkmbdmopl - rkzaleis-rkzaarzn-rkzamahn-rkzazins-rkmbzaopl)
INTO :frmKA.nJahr, :frmKA.nUms
FROM rk
WHERE rkarztnr = :frmKA.nArztNr AND rkkzzahl<2 AND rkdeaktiv AND rkrechnr<999990 IS NULL GROUP BY 1");
						this.nFetchMS = this.hSqlKAMS.FetchNext();
						while (this.nFetchMS != Sys.FETCH_EOF) 
						{
							this.tblKA.colBemerk.Text = this.tblKA.colBemerk.Text + "MS " + Int.PalStrNum(this.nJahr, 4, 0) + ": offen € " + Int.PalStrNum(this.nUms, 8, 2) + @"
";
							this.nFetchMS = this.hSqlKAMS.FetchNext();
						}
						// Call SqlCommit( hSqlKAMS )
						this.tblKA.colBemerk.Text = this.tblKA.colBemerk.Text + @"

";

						this.SetStatusBarText("Füge hinzu: " + Int.PalStrNum(this.nArztNr, 4, 0));
					}
				}

				this.nSaldo = 0;
				this.nSaldo1 = 0;
				this.nFetch = this.hSqlKA.FetchNext();
			}
			// Call SqlCommit( hSqlKA )
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// pbDruck WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDruck_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			dlgLlDruck.ModalDialog(this, "KA-Kontroll1.lst", "");
			#endregion
		}
		
		/// <summary>
		/// cbAktivAlle WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbAktivAlle_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.cbAktivAlle_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbAktivAlle_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Var.nRow = Sys.TBL_MinRow;
			while (this.tblKA.FindNextRow(ref Var.nRow, 0, 0)) 
			{
				this.tblKA.SetFocusRow(Var.nRow);
				this.tblKA.colAktiv.Number = this.cbAktivAlle.Checked;
			}
			#endregion
		}
		
		/// <summary>
		/// pbOk2 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk2_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk2_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk2_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Call SalTblPopulate( tblKA, hSqlKA,
			// 'SELECT  aarztnr, (min(avorhaben) - min(avorsoll) + sum(tkhaben) - sum(tksoll) )
			// FROM a,tk
			// INTO :frmKA.tblKA.colArztNr, :frmKA.tblKA.colSaldo
			// WHERE aarztnr = tkarztnr
			// GROUP BY aarztnr',
			// TBL_FillAllBackground )
			Sal.WaitCursor(true);
			this.tblKA2.ResetTable();
			if (this.rbfrei.Checked) 
			{
				this.strSelect = this.df5frei.Text;
			}
			else
			{
				this.strSelect = "";
				this.nCount = 0;
				if (this.rb5Ums.Checked) 
				{
					this.hSqlKA.PrepareAndExecute(@"SELECT  akarztnr, sum(akrechsumm) INTO :frmKA.nArztNr, :frmKA.nSaldo
FROM ak WHERE aktyp='RG' AND aktypdetail='UebOP' AND akdatum BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 AND akdeaktiv IS NULL GROUP BY 1 ORDER BY 2 DESC");
				}
				else if (this.rb5Geb.Checked) 
				{
					this.hSqlKA.PrepareAndExecute(@"SELECT  akarztnr, sum(akdm) INTO :frmKA.nArztNr, :frmKA.nSaldo
FROM ak WHERE aktyp='RG' AND aktypdetail='UebOP' AND akdatum BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 AND akdeaktiv IS NULL GROUP BY 1 ORDER BY 2 DESC");
				}
				else if (this.rb5Rech.Checked) 
				{
					this.hSqlKA.PrepareAndExecute(@"SELECT  akarztnr, sum(akanzahl) INTO :frmKA.nArztNr, :frmKA.nSaldo
FROM ak WHERE aktyp='RG' AND aktypdetail='UebOP' AND akdatum BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 AND akdeaktiv IS NULL GROUP BY 1 ORDER BY 2 DESC");
				}
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF && this.nCount < 5) 
				{
					Int.SqlIstDa("FROM tk WHERE tkarztnr = :frmKA.nArztNr  AND tkbeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 AND tkbuchtext LIKE \'+%\' AND tkbuchtext LIKE \'%Darlehen%\' ", ref this.bPOk);
					Int.SqlIstDa(@"FROM tka WHERE tkaarztnr = :frmKA.nArztNr  AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 AND tkabuchtext LIKE '+%' AND tkabuchtext LIKE '%Darlehen%'
 AND tkadeaktiv IS NULL ", ref this.bPOk2);
					if (this.bPOk || this.bPOk2) 
					{
						this.strSelect = this.strSelect + ", " + this.nArztNr.ToString(0);
						this.nCount = this.nCount + 1;
					}
					this.nFetch = this.hSqlKA.FetchNext();
				}
				this.strSelect = this.strSelect.Mid(1, 32000);
				this.df5frei.Text = this.strSelect;
				// Call SqlCommit( hSqlKA )
			}
			// AK
			// 07.01.14
			if (this.strSelect == "") 
			{
				Sal.MessageBox("Keine Praxen gefunden.", "keine Daten", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else
			{
				this.hSqlKA.PrepareAndExecute(@"SELECT  akarztnr, @DATEVALUE(akdatum), 'Abrechnung', akrechsumm
FROM ak
INTO :frmKA.nArztNr, :frmKA.dtDatum, :frmKA.strText, :frmKA.nSaldo
WHERE akarztnr IN (" + this.strSelect + ")  AND aktyp=\'RG\' AND akdeaktiv IS NULL AND aktypdetail=\'UebOP\' AND akdatum BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 ORDER BY akarztnr, akdatum");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.tblKA2.InsertRow(Sys.TBL_MaxRow);
					this.tblKA2.colArztNr.Number = this.nArztNr;
					this.tblKA2.colBuchort.Text = "Tagebuch";
					this.tblKA2.colBuchtext.Text = this.strText;
					this.tblKA2.colDatum.DateTime = this.dtDatum;
					this.tblKA2.colEUR.Number = this.nSaldo;
					this.tblKA2.colPrio.Text = Int.PalStrNullen(this.nArztNr.ToString(0), 4) + Int.PalDateToStrJJJJMMTT(this.dtDatum) + "1";
					this.tblKA2.colBemerk.Text = "";
					this.SetStatusBarText("Füge hinzu: " + Int.PalStrNum(this.nArztNr, 4, 0));

					this.nFetch = this.hSqlKA.FetchNext();
				}
				// Call SqlCommit( hSqlKA )
				// TK
				this.hSqlKA.PrepareAndExecute(@"SELECT  tkarztnr, tkbeldat, tkbuchtext, tksoll
FROM tk
INTO :frmKA.nArztNr, :frmKA.dtDatum, :frmKA.strText, :frmKA.nSaldo
WHERE tkarztnr IN (" + this.strSelect + @")  AND tkbeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2
AND tkbuchtext LIKE '+%' AND tkbuchtext LIKE '%Darlehen%' ORDER BY tkarztnr, tkbeldat");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.tblKA2.InsertRow(Sys.TBL_MaxRow);
					this.tblKA2.colArztNr.Number = this.nArztNr;
					this.tblKA2.colBuchort.Text = "Kontoauszug";
					this.tblKA2.colBuchtext.Text = this.strText;
					this.tblKA2.colDatum.DateTime = this.dtDatum;
					this.tblKA2.colEUR.Number = this.nSaldo;
					this.tblKA2.colPrio.Text = Int.PalStrNullen(this.nArztNr.ToString(0), 4) + Int.PalDateToStrJJJJMMTT(this.dtDatum) + "3";
					this.tblKA2.colBemerk.Text = "";
					this.SetStatusBarText("Füge hinzu: " + Int.PalStrNum(this.nArztNr, 4, 0));

					this.nFetch = this.hSqlKA.FetchNext();
				}
				// Call SqlCommit( hSqlKA )
				// TKA
				this.hSqlKA.PrepareAndExecute(@"SELECT  tkaarztnr, tkabeldat, tkabuchtext, tksoll
FROM tka
INTO :frmKA.nArztNr, :frmKA.dtDatum, :frmKA.strText, :frmKA.nSaldo
WHERE tkaarztnr IN (" + this.strSelect + @")  AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2
AND tkabuchtext LIKE '+%' AND tkabuchtext LIKE '%Darlehen%' AND tkadeaktiv IS NULL ORDER BY tkaarztnr, tkabeldat");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.tblKA2.InsertRow(Sys.TBL_MaxRow);
					this.tblKA2.colArztNr.Number = this.nArztNr;
					this.tblKA2.colBuchort.Text = "Kontoauszug (Vormonate)";
					this.tblKA2.colBuchtext.Text = this.strText;
					this.tblKA2.colDatum.DateTime = this.dtDatum;
					this.tblKA2.colEUR.Number = this.nSaldo;
					this.tblKA2.colPrio.Text = Int.PalStrNullen(this.nArztNr.ToString(0), 4) + Int.PalDateToStrJJJJMMTT(this.dtDatum) + "5";
					this.tblKA2.colBemerk.Text = "";
					this.SetStatusBarText("Füge hinzu: " + Int.PalStrNum(this.nArztNr, 4, 0));

					this.nFetch = this.hSqlKA.FetchNext();
				}
				// Call SqlCommit( hSqlKA )
			}

			this.tblKA2.SortRows(2, Sys.TBL_SortIncreasing);
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// tblKA2 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblKA2_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_RowHeaderClick:
					this.tblKA2_OnSAM_RowHeaderClick(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_RowHeaderClick event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblKA2_OnSAM_RowHeaderClick(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.strSelect = this.tblKA2.GetColumnText(2);
			Sal.MessageBox(this.strSelect, "Text", Sys.MB_Ok);
			#endregion
		}
		
		/// <summary>
		/// pbDruck2 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck2_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDruck2_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck2_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			dlgLlDruck.ModalDialog(this, "KA-Kontroll2.lst", "");
			#endregion
		}
		
		/// <summary>
		/// pbOk3 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk3_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk3_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk3_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.WaitCursor(true);
			this.tblKA3.ResetTable();
			this.tblKA3.Populate(this.hSqlKA, @"SELECT aarztnr, aname1, aname2, aort, avorschproz
INTO :frmKA.tblKA3.colArztNr, :frmKA.tblKA3.colName, :frmKA.tblKA3.colName2, :frmKA.tblKA3.colOrt, :frmKA.tblKA3.colVorschProz
FROM a
WHERE aarztnr in (select tkarztnr from tk where tkbeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 and tkbuchtext like '%Darlehen%'  and tkbuchtext like '+%')
OR aarztnr in (select tkaarztnr from tka where tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 and tkabuchtext like '%Darlehen%' AND tkadeaktiv IS NULL and tkabuchtext like '+%') ", Sys.TBL_FillAll);

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// pbDruck3 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck3_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDruck3_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck3_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			dlgLlDruck.ModalDialog(this, "KA-Kontroll3.lst", "");
			#endregion
		}
		
		/// <summary>
		/// tblKA3 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblKA3_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_FetchRowDone:
					this.tblKA3_OnSAM_FetchRowDone(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_FetchRowDone event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblKA3_OnSAM_FetchRowDone(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.tblKA3.colName2.Text != "") 
			{
				this.tblKA3.colName.Text = this.tblKA3.colName.Text + ", " + this.tblKA3.colName2.Text;
			}
			if (this.tblKA3.colOrt.Text != "") 
			{
				this.tblKA3.colName.Text = this.tblKA3.colName.Text + ", " + this.tblKA3.colOrt.Text;
			}

			Int.SqlImmedSel("SELECT sum(tksoll) INTO :frmKA.nCount FROM tk WHERE tkarztnr = :frmKA.tblKA3.colArztNr AND tkbeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 and tkbuchtext like \'%Darlehen%\'  and tkbuchtext like \'+%\'");
			this.tblKA3.colVorsch.Number = this.nCount;
			Int.SqlImmedSel(@"SELECT sum(tksoll) INTO :frmKA.nCount FROM tka WHERE tkaarztnr = :frmKA.tblKA3.colArztNr AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2
and tkabuchtext like '%Darlehen%'  and tkabuchtext like '+%' AND tkadeaktiv IS NULL");
			this.tblKA3.colVorsch.Number = this.tblKA3.colVorsch.Number + this.nCount;
			#endregion
		}
		
		/// <summary>
		/// tblKA4 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblKA4_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_FetchRowDone:
					this.tblKA4_OnSAM_FetchRowDone(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_FetchRowDone event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblKA4_OnSAM_FetchRowDone(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.tblKA3.colName2.Text != "") 
			{
				this.tblKA3.colName.Text = this.tblKA3.colName.Text + ", " + this.tblKA3.colName2.Text;
			}
			if (this.tblKA3.colOrt.Text != "") 
			{
				this.tblKA3.colName.Text = this.tblKA3.colName.Text + ", " + this.tblKA3.colOrt.Text;
			}

			Int.SqlImmedSel("SELECT sum(tksoll) INTO :frmKA.nCount FROM tk WHERE tkarztnr = :frmKA.tblKA3.colArztNr AND tkbeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 and tkbuchtext like \'%Darlehen%\'  and tkbuchtext like \'+%\'");
			this.tblKA3.colVorsch.Number = this.nCount;
			Int.SqlImmedSel(@"SELECT sum(tksoll) INTO :frmKA.nCount FROM tka WHERE tkaarztnr = :frmKA.tblKA3.colArztNr AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2
and tkabuchtext like '%Darlehen%'  and tkabuchtext like '+%' AND tkadeaktiv IS NULL");
			this.tblKA3.colVorsch.Number = this.tblKA3.colVorsch.Number + this.nCount;
			#endregion
		}
		
		/// <summary>
		/// pbOk4 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk4_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk4_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk4_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.WaitCursor(true);
			this.tblKA4.ResetTable();
			Int.SqlImmedSel("SELECT avorschproz INTO :frmKA.dfVorsch5 FROM a WHERE aarztnr = :frmKA.dfArztNr4");
			// 'SELECT @MONTHBEG(rkrechdat), SUM(rkdmleis+rkdmarzn), SUM(rkdmmahn+rkdmzins)
			// INTO :frmKA.tblKA4.colDatum, :frmKA.tblKA4.colRech, :frmKA.tblKA4.colKosten
			// FROM rk
			// WHERE rkarztnr = :frmKA.dfArztNr4 AND rkrechdat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 AND rkrechnr<999990 GROUP BY 1'
			if (this.tblKA4.Populate(this.hSqlKA, @"SELECT  @MONTHBEG(tkabeldat), SUM(tkadmabr)
INTO :frmKA.tblKA4.colDatum, :frmKA.tblKA4.colRech
FROM tka
WHERE tkarechnr<999990  AND (tkadmabr > 0 AND tkasa<>3)  AND tkadeaktiv IS NULL
AND tkaarztnr = :frmKA.dfArztNr4 AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2  GROUP BY 1", Sys.TBL_FillAll)) 
			{
				Sal.WaitCursor(true);
				// Ausbuchungen
				// Call SqlPrepar( hSqlKA,
				// 'SELECT  @MONTHBEG(rkrechdat), SUM(zadm) INTO :frmKA.dtDatum, :frmKA.nUms FROM za,rk
				// WHERE zaarztnr=rkarztnr AND zarechnr=rkrechnr AND zarechnr<999990 AND zakz>=4
				// AND rkarztnr = :frmKA.dfArztNr4 AND rkrechdat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 GROUP BY 1' )
				Int.SqlPrepar(this.hSqlKA, @"SELECT  @MONTHBEG(rkrechdat), SUM(tkadmabr * -1)
INTO :frmKA.dtDatum, :frmKA.nUms
FROM tka,rk
WHERE tkaarztnr=rkarztnr AND tkarechnr=rkrechnr AND tkarechnr<999990  AND (tkadmabr < 0 OR tkasa=3)  AND tkadeaktiv IS NULL AND rkdeaktiv IS NULL
AND rkarztnr = :frmKA.dfArztNr4 AND rkrechdat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 GROUP BY 1");
				Int.SqlExecut(this.hSqlKA, "");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.nRow4 = this.PalFindRow4(this.dtDatum);
					if (this.nRow4 != -1) 
					{
						this.tblKA4.SetFocusRow(this.nRow4);
						this.tblKA4.colAusb.Number = this.nUms;
					}
					this.nFetch = this.hSqlKA.FetchNext();
				}
				// Zahlungen
				// Call SqlPrepar( hSqlKA,
				// 'SELECT  @MONTHBEG(rkrechdat), SUM(zadm) INTO :frmKA.dtDatum, :frmKA.nUms FROM za,rk
				// WHERE zaarztnr=rkarztnr AND zarechnr=rkrechnr AND zarechnr<999990 AND zakz<4
				// AND rkarztnr = :frmKA.dfArztNr4 AND rkrechdat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 GROUP BY 1' )
				Int.SqlPrepar(this.hSqlKA, @"SELECT  @MONTHBEG(rkrechdat), SUM(tkadmzaleis+tkadmzaarzn+tkadmzamahn+tkadmzazins)
INTO :frmKA.dtDatum, :frmKA.nUms
FROM tka,rk
WHERE tkaarztnr=rkarztnr AND tkarechnr=rkrechnr AND tkarechnr<999990  AND tkadeaktiv IS NULL AND rkdeaktiv IS NULL
AND rkarztnr = :frmKA.dfArztNr4 AND rkrechdat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2 GROUP BY 1");
				Int.SqlExecut(this.hSqlKA, "");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.nRow4 = this.PalFindRow4(this.dtDatum);
					if (this.nRow4 != -1) 
					{
						this.tblKA4.SetFocusRow(this.nRow4);
						this.tblKA4.colBezahlt.Number = this.nUms;
					}
					this.nFetch = this.hSqlKA.FetchNext();
				}
				// Vorschuß
				Int.SqlPrepar(this.hSqlKA, @"SELECT  @MONTHBEG(tkabeldat), SUM(tksoll)
INTO :frmKA.dtDatum, :frmKA.nUms
FROM tka
WHERE tkaarztnr = :frmKA.dfArztNr4 AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2
AND (tkabuchtext LIKE '%Darlehen %%' or tkabuchtext LIKE '%DARLEHN%') AND tkadeaktiv IS NULL GROUP BY 1");
				Int.SqlExecut(this.hSqlKA, "");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.nRow4 = this.PalFindRow4(this.dtDatum);
					if (this.nRow4 != -1) 
					{
						this.tblKA4.SetFocusRow(this.nRow4);
						this.tblKA4.colVorsch.Number = this.nUms;
					}
					this.nFetch = this.hSqlKA.FetchNext();
				}
				// Gebühren
				Int.SqlPrepar(this.hSqlKA, @"SELECT  @MONTHBEG(tkabeldat), SUM(tksoll)
INTO :frmKA.dtDatum, :frmKA.nUms
FROM tka
WHERE tkaarztnr = :frmKA.dfArztNr4 AND tkabeldat BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2
AND tkabuchtext NOT LIKE '+%' AND tkadeaktiv IS NULL GROUP BY 1");
				Int.SqlExecut(this.hSqlKA, "");
				this.nFetch = this.hSqlKA.FetchNext();
				while (this.nFetch != Sys.FETCH_EOF) 
				{
					this.nRow4 = this.PalFindRow4(this.dtDatum);
					if (this.nRow4 != -1) 
					{
						this.tblKA4.SetFocusRow(this.nRow4);
						this.tblKA4.colKosten.Number = this.tblKA4.colKosten.Number + this.nUms;
					}
					this.nFetch = this.hSqlKA.FetchNext();
				}
				// TK Saldo
				// Call SqlPrepar( hSqlKA,
				// 'SELECT  @MONTHBEG(vodatum - 45 DAYS), (vovorhaben - vovorsoll)
				// INTO :frmKA.dtDatum, :frmKA.nUms
				// FROM vo
				// WHERE voarztnr = :frmKA.dfArztNr4 AND (vodatum - 45 DAYS) BETWEEN :frmKA.dfvon2 AND :frmKA.dfbis2' )
				// Call SqlExecut(hSqlKA, '' )
				// Call SqlFetchNext( hSqlKA, nFetch )
				// While nFetch != FETCH_EOF
				// Set nRow4 = PalFindRow4( dtDatum )
				// If nRow4 != -1
				// Call SalTblSetFocusRow( tblKA4, nRow4 )
				// Set tblKA4.colSaldoTK = nUms
				// Call SqlFetchNext( hSqlKA, nFetch )
				// Berechnung
				this.nRow4 = Sys.TBL_MinRow;
				while (this.tblKA4.FindNextRow(ref this.nRow4, 0, 0)) 
				{
					this.tblKA4.SetFocusRow(this.nRow4);
					this.tblKA4.colGes.Number = this.tblKA4.colVorsch.Number + this.tblKA4.colKosten.Number;
					this.tblKA4.colSaldo.Number = this.tblKA4.colBezahlt.Number - this.tblKA4.colGes.Number;
					this.tblKA4.colBezProz.Number = this.tblKA4.colVorsch.Number / this.tblKA4.colRech.Number * 100;
					this.tblKA4.colBezProzK.Number = this.tblKA4.colBezahlt.Number / (this.tblKA4.colRech.Number + this.tblKA4.colKosten.Number) * 100;
				}
			}

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// pbDruck4 WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck4_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDruck4_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck4_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			dlgLlDruck.ModalDialog(this, "KA-Kontroll4.lst", "");
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblKA
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblKATableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmKA _frmKA = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblKATableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmKA frmKA
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmKA == null) 
					{
						_frmKA = (frmKA)this.FindForm();
					}
					return _frmKA;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblKATableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblKATableWindow)SalWindow.FromHandle(handle, typeof(tblKATableWindow)));
			}
			#endregion
			
			#region Window Actions
			
			/// <summary>
			/// colGFBemerk WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colGFBemerk_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colGFBemerk_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colGFBemerk_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				// 04.08.15 Ä1236 + agfkrit
				Int.SqlImmed("UPDATE a SET agfkrit = :frmKA.tblKA.colGFBemerk WHERE aarztnr = :frmKA.tblKA.colArztNr");
				#endregion
			}
			#endregion
		}
		#endregion
		
		#region tblKA2
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblKA2TableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmKA _frmKA = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblKA2TableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmKA frmKA
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmKA == null) 
					{
						_frmKA = (frmKA)this.FindForm();
					}
					return _frmKA;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblKA2TableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblKA2TableWindow)SalWindow.FromHandle(handle, typeof(tblKA2TableWindow)));
			}
			#endregion
		}
		#endregion
		
		#region tblKA3
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblKA3TableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmKA _frmKA = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblKA3TableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmKA frmKA
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmKA == null) 
					{
						_frmKA = (frmKA)this.FindForm();
					}
					return _frmKA;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblKA3TableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblKA3TableWindow)SalWindow.FromHandle(handle, typeof(tblKA3TableWindow)));
			}
			#endregion
		}
		#endregion
		
		#region tblKA4
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblKA4TableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmKA _frmKA = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblKA4TableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmKA frmKA
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmKA == null) 
					{
						_frmKA = (frmKA)this.FindForm();
					}
					return _frmKA;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblKA4TableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblKA4TableWindow)SalWindow.FromHandle(handle, typeof(tblKA4TableWindow)));
			}
			#endregion
		}
		#endregion
	}
}
