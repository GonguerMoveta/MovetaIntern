// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	/// <param name="strHeader"></param>
	public partial class dlgUserCredentials : SalDialogBox
	{
		#region Window Parameters
		public SalString strHeader;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public dlgUserCredentials(SalString strHeader)
		{
			// Assign global reference.
			App.dlgUserCredentials = this;
			// Window Parameters initialization.
			this.strHeader = strHeader;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the modal dialog.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static SalNumber ModalDialog(Control owner, SalString strHeader)
		{
			dlgUserCredentials dlg = new dlgUserCredentials(strHeader);
			SalNumber ret = dlg.ShowDialog(owner);
			return ret;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static dlgUserCredentials FromHandle(SalWindowHandle handle)
		{
			return ((dlgUserCredentials)SalWindow.FromHandle(handle, typeof(dlgUserCredentials)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// dlgUserCredentials WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgUserCredentials_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.dlgUserCredentials_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgUserCredentials_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;

			// PPJ: Automatically generated temporary assignments. Properties canot be passed by reference.
			SalString temp1 = this.dfName.Text;
			Int.PalGetProfileStringR("Credentials", "Name", "", ref temp1, "TVN");
			this.dfName.Text = temp1;


			// PPJ: Automatically generated temporary assignments. Properties canot be passed by reference.
			SalString temp2 = this.dfPw.Text;
			Int.PalGetProfileStringR("Credentials", "Passwort", "", ref temp2, "TVN");
			this.dfPw.Text = temp2;

			if (this.strHeader != "") 
			{
				this.SetText(this.strHeader);
			}
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// dfName WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfName_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfName_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfName_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalSetProfileStringR("Credentials", "Name", this.dfName.Text, "TVN");
			#endregion
		}
		
		/// <summary>
		/// dfPw WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfPw_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfPw_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfPw_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalSetProfileStringR("Credentials", "Passwort", this.dfPw.Text, "TVN");
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.dfName.Text != "" && this.dfPw.Text != "") 
			{
				Int.PalSetProfileStringR("Credentials", "Name", this.dfName.Text, "TVN");
				Int.PalSetProfileStringR("Credentials", "Passwort", this.dfPw.Text, "TVN");
				this.EndDialog(1);
			}
			else
			{
				if (Sys.IDNO == Sal.MessageBox("Name und Passwort müssen eingegeben werden. Möchten Sie dies jetzt tun?", "Name oder Passwort sind leer", (Sys.MB_YesNo | Sys.MB_IconQuestion))) 
				{
					this.EndDialog(0);
				}
			}
			#endregion
		}
		#endregion
	}
}
