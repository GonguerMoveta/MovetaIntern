// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	public partial class frmAbrFTP
	{
		
		/// <summary>
		/// Required designer variable.
		/// </summary>
		private System.ComponentModel.IContainer components = null;
		
		#region Window Accessories
		
		/// <summary>
		/// Toolbar control.
		/// </summary>
		protected SalFormToolBar ToolBar;
		
		/// <summary>
		/// Client area panel.
		/// </summary>
		protected SalFormClientArea ClientArea;
		
		/// <summary>
		/// StatusBar control.
		/// </summary>
		protected SalFormStatusBar StatusBar;
		#endregion
		
		
		#region Window Controls
		public frmAbrFTP.tblFTPTableWindow tblFTP;
		public SalPushbutton pbAkt;
		// AX_DartFtp_Ftp: axFTP
		// Message Actions
		// On Progress
		// Parameters
		// Number: FtpCmd
		// Number: Status
		// String: Reply
		// Number: Count
		// Number: Size
		// Actions
		// Set Reply = PalStrReplace( Reply, 'FTPPeg','<User>')
		// Set mlAntwort = mlAntwort || Reply
		// If Status = 0 And FtpCmd = 15 And Size > 1024	!ftpOk / ftpStore
		// Set dfSichText2 = 'Übertragung abgeschlossen'
		// Else If Status = 1 !ftpInProgress
		// If Size > 0 and Count > 1024
		// Call ccMeter.SetProgress( Count / Size * 100 )
		// Set dfSichText2 = SalNumberToStrX(Count/1024,0) || 'kB übertragen.'
		// Else If Status = 2 !ftpError
		// Set dfSichText2 = 'Fehler! / ' || dfSichText2
		// On Error
		// Parameters
		// Number: Number
		// String: Description
		// Actions
		// Set mlAntwort = mlAntwort || '
		// ' || SalNumberToStrX(Number,0) || ': ' || Description
		// Set dfSichText2 = SalNumberToStrX(Number,0) || ' ' || Description
		// AX_DartFtp_Ftp: axFTP
		// Message Actions
		// On Progress
		// Parameters
		// Number: FtpCmd
		// Number: Status
		// String: Reply
		// Number: Count
		// Number: Size
		// Actions
		// Set Reply = PalStrReplace( Reply, 'FTPPeg','<User>')
		// Set mlAntwort = mlAntwort || Reply
		// If Status = 0 And FtpCmd = 15 And Size > 1024	!ftpOk / ftpStore
		// Set dfSichText2 = 'Übertragung abgeschlossen'
		// Else If Status = 1 !ftpInProgress
		// If Size > 0 and Count > 1024
		// Call ccMeter.SetProgress( Count / Size * 100 )
		// Set dfSichText2 = SalNumberToStrX(Count/1024,0) || 'kB übertragen.'
		// Else If Status = 2 !ftpError
		// Set dfSichText2 = 'Fehler! / ' || dfSichText2
		// On Error
		// Parameters
		// Number: Number
		// String: Description
		// Actions
		// Set mlAntwort = mlAntwort || '
		// ' || SalNumberToStrX(Number,0) || ': ' || Description
		// Set dfSichText2 = SalNumberToStrX(Number,0) || ' ' || Description
		// AX_DartFtp_Ftp: axFTP
		// Message Actions
		// On Progress
		// Parameters
		// Number: FtpCmd
		// Number: Status
		// String: Reply
		// Number: Count
		// Number: Size
		// Actions
		// Set Reply = PalStrReplace( Reply, 'FTPPeg','<User>')
		// Set mlAntwort = mlAntwort || Reply
		// If Status = 0 And FtpCmd = 15 And Size > 1024	!ftpOk / ftpStore
		// Set dfSichText2 = 'Übertragung abgeschlossen'
		// Else If Status = 1 !ftpInProgress
		// If Size > 0 and Count > 1024
		// Call ccMeter.SetProgress( Count / Size * 100 )
		// Set dfSichText2 = SalNumberToStrX(Count/1024,0) || 'kB übertragen.'
		// Else If Status = 2 !ftpError
		// Set dfSichText2 = 'Fehler! / ' || dfSichText2
		// On Error
		// Parameters
		// Number: Number
		// String: Description
		// Actions
		// Set mlAntwort = mlAntwort || '
		// ' || SalNumberToStrX(Number,0) || ': ' || Description
		// Set dfSichText2 = SalNumberToStrX(Number,0) || ' ' || Description		
		public SalDataField dfSichText2;
		public SalMultilineField mlAntwort;
		#endregion
		
		#region Windows Form Designer generated code
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			this.ToolBar = new PPJ.Runtime.Windows.SalFormToolBar();
			this.ClientArea = new PPJ.Runtime.Windows.SalFormClientArea();
			this.StatusBar = new PPJ.Runtime.Windows.SalFormStatusBar();
			this.tblFTP = (frmAbrFTP.tblFTPTableWindow)CreateTableWindow(typeof(frmAbrFTP.tblFTPTableWindow));
			this.pbAkt = new PPJ.Runtime.Windows.SalPushbutton();
			this.dfSichText2 = new PPJ.Runtime.Windows.SalDataField();
			this.mlAntwort = new PPJ.Runtime.Windows.SalMultilineField();
			this.ClientArea.SuspendLayout();
			this.SuspendLayout();
			// 
			// ToolBar
			// 
			this.ToolBar.Name = "ToolBar";
			this.ToolBar.Font = new Font("Tahoma", 8f, System.Drawing.FontStyle.Regular);
			this.ToolBar.TabStop = true;
			this.ToolBar.Visible = false;
			this.ToolBar.Create = false;
			// 
			// ClientArea
			// 
			this.ClientArea.Name = "ClientArea";
			this.ClientArea.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
			this.ClientArea.Controls.Add(this.mlAntwort);
			this.ClientArea.Controls.Add(this.dfSichText2);
			this.ClientArea.Controls.Add(this.pbAkt);
			this.ClientArea.Controls.Add(this.tblFTP);
			// 
			// StatusBar
			// 
			this.StatusBar.Name = "StatusBar";
			this.StatusBar.Visible = true;
			// 
			// tblFTP
			// 
			this.tblFTP.Name = "tblFTP";
			this.tblFTP.BackColor = System.Drawing.Color.White;
			this.tblFTP.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.tblFTP.Location = new System.Drawing.Point(59, 7);
			this.tblFTP.Size = new System.Drawing.Size(498, 616);
			this.tblFTP.UseVisualStyles = true;
			// 
			// tblFTP.colQuelle
			// 
			this.tblFTP.colQuelle.Name = "colQuelle";
			this.tblFTP.colQuelle.Title = "Quelle";
			this.tblFTP.colQuelle.Width = 73;
			this.tblFTP.colQuelle.Enabled = false;
			this.tblFTP.colQuelle.Position = 1;
			// 
			// tblFTP.colDatum
			// 
			this.tblFTP.colDatum.Name = "colDatum";
			this.tblFTP.colDatum.Title = "Datum";
			this.tblFTP.colDatum.Width = 83;
			this.tblFTP.colDatum.Enabled = false;
			this.tblFTP.colDatum.Position = 2;
			// 
			// tblFTP.colName
			// 
			this.tblFTP.colName.Name = "colName";
			this.tblFTP.colName.Title = "Dateiname";
			this.tblFTP.colName.Width = 208;
			this.tblFTP.colName.Enabled = false;
			this.tblFTP.colName.Position = 3;
			// 
			// tblFTP.colGroesse
			// 
			this.tblFTP.colGroesse.Name = "colGroesse";
			this.tblFTP.colGroesse.Title = "Dateigröße\r\nkB";
			this.tblFTP.colGroesse.Width = 71;
			this.tblFTP.colGroesse.DataType = PPJ.Runtime.Windows.DataType.Number;
			this.tblFTP.colGroesse.Enabled = false;
			this.tblFTP.colGroesse.Format = "#0";
			this.tblFTP.colGroesse.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
			this.tblFTP.colGroesse.Position = 4;
			this.tblFTP.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.tblFTP_WindowActions);
			this.tblFTP.TabIndex = 0;
			// 
			// pbAkt
			// 
			this.pbAkt.Name = "pbAkt";
			this.pbAkt.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbAkt.AcceleratorKey = Keys.F5;
			this.pbAkt.Location = new System.Drawing.Point(5, 7);
			this.pbAkt.Size = new System.Drawing.Size(42, 32);
			this.pbAkt.Image = global::Moveta.Intern.Properties.Resources.refresh;
			this.pbAkt.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbAkt.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbAkt_WindowActions);
			this.pbAkt.TabIndex = 1;
			// 
			// dfSichText2
			// 
			this.dfSichText2.Name = "dfSichText2";
			this.dfSichText2.BackColor = System.Drawing.Color.White;
			this.dfSichText2.ReadOnly = true;
			this.dfSichText2.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.dfSichText2.Location = new System.Drawing.Point(59, 631);
			this.dfSichText2.Size = new System.Drawing.Size(408, 24);
			this.dfSichText2.TabIndex = 3;
			// 
			// mlAntwort
			// 
			this.mlAntwort.Name = "mlAntwort";
			this.mlAntwort.ScrollBars = System.Windows.Forms.ScrollBars.Both;
			this.mlAntwort.BackColor = System.Drawing.Color.White;
			this.mlAntwort.MaxLength = 32000;
			this.mlAntwort.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.mlAntwort.Location = new System.Drawing.Point(581, 55);
			this.mlAntwort.Size = new System.Drawing.Size(474, 568);
			this.mlAntwort.WordWrap = false;
			this.mlAntwort.TabIndex = 4;
			// 
			// frmAbrFTP
			// 
			this.Controls.Add(this.ClientArea);
			this.Controls.Add(this.ToolBar);
			this.Controls.Add(this.StatusBar);
			this.Name = "frmAbrFTP";
			this.ClientSize = new System.Drawing.Size(581, 688);
			this.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.IconName = "earth.ico";
			this.ForeColor = System.Drawing.SystemColors.WindowText;
			this.Text = "Online bereitstehende Abrechnungen";
			this.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.frmAbrFTP_WindowActions);
			this.ClientArea.ResumeLayout(false);
			this.ResumeLayout(false);
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Release global reference.
		/// </summary>
		/// <param name="disposing"></param>
		protected override void Dispose(bool disposing)
		{
			if (disposing && components != null) 
			{
				components.Dispose();
			}
			if (disposing && App.frmAbrFTP == this) 
			{
				App.frmAbrFTP = null;
			}
			base.Dispose(disposing);
		}
		#endregion
		
		#region tblFTP
		
		public partial class tblFTPTableWindow
		{
			#region Window Controls
			public SalTableColumn colQuelle;
			public SalTableColumn colDatum;
			public SalTableColumn colName;
			public SalTableColumn colGroesse;
			#endregion
			
			#region Windows Form Designer generated code
			
			/// <summary>
			/// Required method for Designer support - do not modify
			/// the contents of this method with the code editor.
			/// </summary>
			private void InitializeComponent()
			{
				this.colQuelle = new PPJ.Runtime.Windows.SalTableColumn();
				this.colDatum = new PPJ.Runtime.Windows.SalTableColumn();
				this.colName = new PPJ.Runtime.Windows.SalTableColumn();
				this.colGroesse = new PPJ.Runtime.Windows.SalTableColumn();
				this.SuspendLayout();
				// 
				// colQuelle
				// 
				this.colQuelle.Name = "colQuelle";
				// 
				// colDatum
				// 
				this.colDatum.Name = "colDatum";
				// 
				// colName
				// 
				this.colName.Name = "colName";
				// 
				// colGroesse
				// 
				this.colGroesse.Name = "colGroesse";
				// 
				// tblFTP
				// 
				this.Controls.Add(this.colQuelle);
				this.Controls.Add(this.colDatum);
				this.Controls.Add(this.colName);
				this.Controls.Add(this.colGroesse);
				this.Name = "tblFTP";
				this.ResumeLayout(false);
			}
			#endregion
		}
		#endregion
	}
}
