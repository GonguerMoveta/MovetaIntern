// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	public partial class frmSteuerExportA
	{
		
		/// <summary>
		/// Required designer variable.
		/// </summary>
		private System.ComponentModel.IContainer components = null;
		
		#region Window Accessories
		
		/// <summary>
		/// Toolbar control.
		/// </summary>
		protected SalFormToolBar ToolBar;
		
		/// <summary>
		/// Client area panel.
		/// </summary>
		protected SalFormClientArea ClientArea;
		
		/// <summary>
		/// StatusBar control.
		/// </summary>
		protected SalFormStatusBar StatusBar;
		#endregion
		
		
		#region Window Controls
		public SalPushbutton pbAbbruch;
		// cDesktopListBox: myLocalTree
		// List Initialization
		// Message Actions
		// On SAM_Create
		// Call SalSendClassMessage( SAM_Create, wParam, lParam )
		// On SAM_Click
		// Call SalSendClassMessage( SAM_Click, wParam, lParam )
		// ***** If current selection changed, update list view
		// Set nIndex = SalListQuerySelection( hWndItem )
		// If nIndex != LB_Err and nIndex != nLocalIndex
		// Set nItemFlags = myLocalTree.GetFlags( nIndex )
		// If Not nItemFlags & ITEM_IsExpanded
		// Set dfTree = myLocalTree.GetSelectedDir()
		// Call EnumLocal()
		// Set nLocalIndex = nIndex
		protected SalBackgroundText bkgd6;
		public SalDataField dfvon;
		protected SalBackgroundText bkgd7;
		public SalDataField dfbis;
		// cXSalFlatButton: pbOk
		// Message Actions
		// On SAM_Click
		// 05.07.11 Ä603
		// Set strDrive = SalFileGetDrive()
		// Call SalFileSetDrive( 'C:' )
		// Call SalWaitCursor(FALSE)
		// Call SalModalDialog( dlgLaufwerk, hWndForm, 'Steuerprüfer', strDir )
		// Call SalFileSetDrive( strDrive )
		// If strDir = ''
		// Call SalMessageBox('Bitte Ordner für die Exportdateien auswählen.','Abbruch', MB_Ok|MB_IconExclamation)
		// Return FALSE
		// Else
		// If Not SalFileOpen( hFile, strDir || '\\TEST', OF_Create|OF_Text|OF_Write)
		// Call SalMessageBox('Im angegebenen Ordner
		// kann keine Datei erstellt werden !".','Achtung',MB_Ok)
		// Else
		// Call SalWaitCursor(TRUE)
		// If dfvon = DATETIME_Null
		// Set dfvon = '1900-01-01'
		// If dfbis = DATETIME_Null
		// Set dfbis = 2199-12-31
		// Call SalFileClose( hFile )
		// Set bOk = FALSE
		// Rechnungen
		// Set strFile = strDir || '\\TVN-Rechnungen.txt'
		// If PalMakeFile( strFile,
		// 'SELECT   tkaarztnr, @STRING( @YEARNO( tkadruckdatum-15), 0) || \'/\' || @STRING(tkaarztnr, 0) || \'/\' || @STRING( @MONTH( tkadruckdatum-15), 0), aname1, aname2, astr, aort, aland, austid, tkadruckdatum, tkaprozmwst,
		// sum(tkadmporto), sum(tkatavst), sum(tksoll)-sum(tkatavst)-sum(tkadmporto), sum(tksoll)
		// INTO :frmSteuerExportA.nArztNr, :frmSteuerExportA.strRechNr, :frmSteuerExportA.strName1, :frmSteuerExportA.strName2, :frmSteuerExportA.strStr, :frmSteuerExportA.strOrt, :frmSteuerExportA.strLand, :frmSteuerExportA.strUstId,
		// :frmSteuerExportA.dtDatum, :frmSteuerExportA.nMwStProz, :frmSteuerExportA.nPorto, :frmSteuerExportA.nMwSt, :frmSteuerExportA.nNetto, :frmSteuerExportA.nBrutto
		// FROM tka, a
		// WHERE tkaarztnr = aarztnr
		// AND tkadruckdatum BETWEEN :frmSteuerExportA.dfvon AND :frmSteuerExportA.dfbis
		// AND tksoll<>0 AND tkabuchtext not like \'+%\'  GROUP BY 1,2,3,4,5,6,7,8,9,10',
		// 'MitgliedNr	RechNr	Name1	Name2	Strasse	Ort	Land	UstID	Datum	MwSt-Satz	EUR-Porto	EUR-MwSt	EUR-Netto	EUR-Brutto')
		// Rechnungsdetails
		// Set strFile = strDir || '\\Rechnungsdetails.txt'
		// If PalMakeFile( strFile,
		// 'SELECT  rkarztnr || @char(9) || rkhalternr || @char(9) || rkrechnr || @char(9) || rpla || @char(9) || rpmwst || @char(9) || rpdatum || @char(9) || rprechtext || @char(9) || rpdm || @char(9) || rptext
		// INTO :frmSteuerExport.strText
		// FROM rk,rp
		// WHERE rkarztnr=rparztnr and rkhalternr=rphalternr and rkrechnr=rprechnr
		// AND rkarztnr = :frmSteuerExport.dfNr AND rkrechdat BETWEEN :frmSteuerExport.dfvon AND :frmSteuerExport.dfbis AND rkrechnr < 999990 ORDER BY rkarztnr, rkrechnr',
		// 'ArztNr	HalterNr	RechNr	Typ	MwSt	Datum	Bezeichnung	Netto-EUR	Text')
		// Call SalStatusSetText(hWndForm, 'Export abgeschlossen')
		// Call SalWaitCursor(FALSE)
		// cXSalFlatButton: pbAusbuch
		// Message Actions
		// On SAM_Click
		// 05.07.11 Ä603
		// Set strDrive = SalFileGetDrive()
		// Call SalFileSetDrive( 'C:' )
		// Call SalWaitCursor(FALSE)
		// Call SalModalDialog( dlgLaufwerk, hWndForm, 'Steuerprüfer', strDir )
		// Call SalFileSetDrive( strDrive )
		// If strDir = ''
		// Call SalMessageBox('Bitte Ordner für die Exportdateien auswählen.','Abbruch', MB_Ok|MB_IconExclamation)
		// Return FALSE
		// Else
		// If Not SalFileOpen( hFile, strDir || '\\TEST', OF_Create|OF_Text|OF_Write)
		// Call SalMessageBox('Im angegebenen Ordner
		// kann keine Datei erstellt werden !".','Achtung',MB_Ok)
		// Else
		// Call SalWaitCursor(TRUE)
		// If dfvon = DATETIME_Null
		// Set dfvon = '1900-01-01'
		// If dfbis = DATETIME_Null
		// Set dfbis = 2199-12-31
		// Call SalFileClose( hFile )
		// Set strSelectNur = ''
		// If mlNur != ''
		// Set strSelectNur = ' AND tkaarztnr IN (' || mlNur || ') '
		// Set bOk = FALSE
		// Rechnungen
		// Set strFile = strDir || '\\TVN-Ausbuchungen.txt'
		// If PalMakeFile( strFile,
		// 'SELECT   tkaarztnr, aname1, aname2, astr, aort, aland, austid,
		// hvn, hnn, hstr, hort, hland,
		// tkabeldat, @STRING(tkaarztnr,0) || \'/R\' || @STRING(tkarechnr,0), tkadmabr*-1, tkabuchtext
		// INTO :frmSteuerExportA.nArztNr, :frmSteuerExportA.strName1, :frmSteuerExportA.strName2, :frmSteuerExportA.strStr, :frmSteuerExportA.strOrt, :frmSteuerExportA.strLand, :frmSteuerExportA.strUstId,
		// :frmSteuerExportA.strHVN, :frmSteuerExportA.strHNN, :frmSteuerExportA.strHStr, :frmSteuerExportA.strHOrt, :frmSteuerExportA.strHLand,
		// :frmSteuerExportA.dtDatum, :frmSteuerExportA.strRechNr, :frmSteuerExportA.nBrutto, :frmSteuerExportA.strBuchText
		// FROM tka, a, h
		// WHERE tkaarztnr = aarztnr AND tkaarztnr=harztnr(+) and tkahalternr=hhalternr(+)
		// AND tkabeldat BETWEEN :frmSteuerExportA.dfvon AND :frmSteuerExportA.dfbis
		// AND (tkadmabr < 0 OR tkabuchtext LIKE \'AusbRück%\' OR tkasa=3) AND tkabuchtext NOT LIKE \'GEBV%\' ' || strSelectNur || ' ORDER BY tkaarztnr, tkahalternr, tkabeldat',
		// 'Mitglied-Nr	Mitglied-Name1	Mitglied-Name2	Mitglied-Strasse	Mitglied-Ort	Mitglied-Land	Mitglied-UstID	Halter-Vorname	Halter-Nachname	Halter-Strasse	Halter-Ort'
		//  || '	Halter-Land	Datum	RechNr	EUR-Ausbuch	Buchungstext')
		// Call SalStatusSetText(hWndForm, 'Export abgeschlossen')
		// Call SalWaitCursor(FALSE)
		public SalPushbutton pbOk;
		public SalPushbutton pbAusbuch;
		// AND (tkadmabr < 0 OR tkabuchtext LIKE \'AusbRück%\' OR tkasa=3) AND tkabuchtext NOT LIKE \'GEBV%\'
		protected SalBackgroundText bkgd8;
		public SalMultilineField mlNur;
		#endregion
		
		#region Windows Form Designer generated code
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			this.ToolBar = new PPJ.Runtime.Windows.SalFormToolBar();
			this.ClientArea = new PPJ.Runtime.Windows.SalFormClientArea();
			this.StatusBar = new PPJ.Runtime.Windows.SalFormStatusBar();
			this.pbAbbruch = new PPJ.Runtime.Windows.SalPushbutton();
			this.bkgd6 = new PPJ.Runtime.Windows.SalBackgroundText();
			this.dfvon = new PPJ.Runtime.Windows.SalDataField();
			this.bkgd7 = new PPJ.Runtime.Windows.SalBackgroundText();
			this.dfbis = new PPJ.Runtime.Windows.SalDataField();
			this.pbOk = new PPJ.Runtime.Windows.SalPushbutton();
			this.pbAusbuch = new PPJ.Runtime.Windows.SalPushbutton();
			this.bkgd8 = new PPJ.Runtime.Windows.SalBackgroundText();
			this.mlNur = new PPJ.Runtime.Windows.SalMultilineField();
			this.ToolBar.SuspendLayout();
			this.ClientArea.SuspendLayout();
			this.SuspendLayout();
			// 
			// ToolBar
			// 
			this.ToolBar.Name = "ToolBar";
			this.ToolBar.Font = new Font("Tahoma", 8f, System.Drawing.FontStyle.Regular);
			this.ToolBar.TabStop = true;
			this.ToolBar.Visible = false;
			this.ToolBar.Controls.Add(this.pbAbbruch);
			// 
			// ClientArea
			// 
			this.ClientArea.Name = "ClientArea";
			this.ClientArea.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
			this.ClientArea.Controls.Add(this.mlNur);
			this.ClientArea.Controls.Add(this.pbAusbuch);
			this.ClientArea.Controls.Add(this.pbOk);
			this.ClientArea.Controls.Add(this.dfbis);
			this.ClientArea.Controls.Add(this.dfvon);
			this.ClientArea.Controls.Add(this.bkgd8);
			this.ClientArea.Controls.Add(this.bkgd7);
			this.ClientArea.Controls.Add(this.bkgd6);
			// 
			// StatusBar
			// 
			this.StatusBar.Name = "StatusBar";
			this.StatusBar.Visible = true;
			// 
			// pbAbbruch
			// 
			this.pbAbbruch.Name = "pbAbbruch";
			this.pbAbbruch.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbAbbruch.AcceleratorKey = Keys.Escape;
			this.pbAbbruch.Text = "Abbruch";
			this.pbAbbruch.Location = new System.Drawing.Point(-25, -42);
			this.pbAbbruch.Size = new System.Drawing.Size(25, 42);
			this.pbAbbruch.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbAbbruch.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbAbbruch_WindowActions);
			this.pbAbbruch.TabIndex = 0;
			// 
			// bkgd6
			// 
			this.bkgd6.Name = "bkgd6";
			this.bkgd6.Font = new Font("Tahoma", 8f, System.Drawing.FontStyle.Regular);
			this.bkgd6.Text = "Buchungen vom";
			this.bkgd6.Location = new System.Drawing.Point(19, 25);
			this.bkgd6.Size = new System.Drawing.Size(82, 16);
			this.bkgd6.TabIndex = 0;
			// 
			// dfvon
			// 
			this.dfvon.Name = "dfvon";
			this.dfvon.BackColor = System.Drawing.Color.White;
			this.dfvon.DataType = PPJ.Runtime.Windows.DataType.DateTime;
			this.dfvon.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.dfvon.Format = "dd.MM.yyyy";
			this.dfvon.Location = new System.Drawing.Point(107, 23);
			this.dfvon.Size = new System.Drawing.Size(90, 24);
			this.dfvon.TabIndex = 1;
			// 
			// bkgd7
			// 
			this.bkgd7.Name = "bkgd7";
			this.bkgd7.Font = new Font("Tahoma", 8f, System.Drawing.FontStyle.Regular);
			this.bkgd7.Text = "bis";
			this.bkgd7.Location = new System.Drawing.Point(83, 49);
			this.bkgd7.Size = new System.Drawing.Size(24, 16);
			this.bkgd7.TabIndex = 2;
			// 
			// dfbis
			// 
			this.dfbis.Name = "dfbis";
			this.dfbis.BackColor = System.Drawing.Color.White;
			this.dfbis.DataType = PPJ.Runtime.Windows.DataType.DateTime;
			this.dfbis.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.dfbis.Format = "dd.MM.yyyy";
			this.dfbis.Location = new System.Drawing.Point(107, 47);
			this.dfbis.Size = new System.Drawing.Size(90, 24);
			this.dfbis.TabIndex = 3;
			// 
			// pbOk
			// 
			this.pbOk.Name = "pbOk";
			this.pbOk.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbOk.Text = "&Export starten";
			this.pbOk.Location = new System.Drawing.Point(257, 15);
			this.pbOk.Size = new System.Drawing.Size(330, 56);
			this.pbOk.TransparentColor = System.Drawing.Color.Black;
			this.pbOk.Image = global::Moveta.Intern.Properties.Resources.ok;
			this.pbOk.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbOk.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbOk_WindowActions);
			this.pbOk.TabIndex = 4;
			// 
			// pbAusbuch
			// 
			this.pbAusbuch.Name = "pbAusbuch";
			this.pbAusbuch.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbAusbuch.Text = "&Ausbuchungen exportieren";
			this.pbAusbuch.Location = new System.Drawing.Point(257, 79);
			this.pbAusbuch.Size = new System.Drawing.Size(330, 56);
			this.pbAusbuch.TransparentColor = System.Drawing.Color.Black;
			this.pbAusbuch.Image = global::Moveta.Intern.Properties.Resources.ok;
			this.pbAusbuch.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbAusbuch.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbAusbuch_WindowActions);
			this.pbAusbuch.TabIndex = 5;
			// 
			// bkgd8
			// 
			this.bkgd8.Name = "bkgd8";
			this.bkgd8.Font = new Font("Tahoma", 8f, System.Drawing.FontStyle.Regular);
			this.bkgd8.Text = "Ausbuchungen nur für folgende Mitglieder (kommagetrennt):";
			this.bkgd8.Location = new System.Drawing.Point(257, 137);
			this.bkgd8.Size = new System.Drawing.Size(330, 16);
			this.bkgd8.TabIndex = 6;
			// 
			// mlNur
			// 
			this.mlNur.Name = "mlNur";
			this.mlNur.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
			this.mlNur.BackColor = System.Drawing.Color.White;
			this.mlNur.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.mlNur.Location = new System.Drawing.Point(257, 151);
			this.mlNur.Size = new System.Drawing.Size(330, 64);
			this.mlNur.TabIndex = 7;
			// 
			// frmSteuerExportA
			// 
			this.Controls.Add(this.ClientArea);
			this.Controls.Add(this.ToolBar);
			this.Controls.Add(this.StatusBar);
			this.Name = "frmSteuerExportA";
			this.ClientSize = new System.Drawing.Size(658, 254);
			this.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.ForeColor = System.Drawing.SystemColors.WindowText;
			this.Text = "Export der moveta-Rechnungen für den Steuerprüfer";
			this.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.frmSteuerExportA_WindowActions);
			this.ToolBar.ResumeLayout(false);
			this.ClientArea.ResumeLayout(false);
			this.ResumeLayout(false);
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Release global reference.
		/// </summary>
		/// <param name="disposing"></param>
		protected override void Dispose(bool disposing)
		{
			if (disposing && components != null) 
			{
				components.Dispose();
			}
			if (disposing && App.frmSteuerExportA == this) 
			{
				App.frmSteuerExportA = null;
			}
			base.Dispose(disposing);
		}
		#endregion
	}
}
