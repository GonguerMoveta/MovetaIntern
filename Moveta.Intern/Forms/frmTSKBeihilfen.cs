// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmTSKBeihilfen : SalFormWindow
	{
		#region Window Variables
		public MTblPrintParams PrintParams = new MTblPrintParams();
		public SalString strDevice = "";
		public SalNumber nResult = 0;
		public SalNumber nAnz = 0;
		public SalNumber nOff = 0;
		public SalArray<SalString> strPrinters = new SalArray<SalString>();
		public MTblPrintLine PrintHeader = new MTblPrintLine();
		public MTblPrintLinePosText PrintHeaderText = new MTblPrintLinePosText();
		public SalSqlHandle hSqlBeih = SalSqlHandle.Null;
		public SalNumber nFetchBeih = 0;
		public SalString strPName = "";
		public SalNumber nBEArztNr = 0;
		public SalNumber nBERechNr = 0;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmTSKBeihilfen()
		{
			// Assign global reference.
			App.frmTSKBeihilfen = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmTSKBeihilfen CreateWindow(Control owner)
		{
			frmTSKBeihilfen frm = new frmTSKBeihilfen();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmTSKBeihilfen FromHandle(SalWindowHandle handle)
		{
			return ((frmTSKBeihilfen)SalWindow.FromHandle(handle, typeof(frmTSKBeihilfen)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <param name="nAuswahl">Boolean: bNurUnerledigte</param>
		/// <returns></returns>
		public SalNumber PalHoleTabelle(SalNumber nAuswahl)
		{
			#region Local Variables
			SqlLocals.PalHoleTabelleLocals locals = new SqlLocals.PalHoleTabelleLocals();
			#endregion
			
			#region Actions
			using (new SalContext(this, locals))
			{

				// PPJ: Assign parameters to the locals instance.
				locals.nAuswahl = nAuswahl;

				if (locals.nAuswahl == 2) 
				{
					locals.strSelect = @"SELECT beregarzt, bereghalter, bename, bedate, beanzahl, bebetrag, beerfdat, beerldat, beguid, bestatus, bearztnr, berechnr
INTO :frmTSKBeihilfen.tblBeihilfen.colsRegArzt, :frmTSKBeihilfen.tblBeihilfen.colsRegHalter, :frmTSKBeihilfen.tblBeihilfen.colsNameHalter,
:frmTSKBeihilfen.tblBeihilfen.coldtDatum, :frmTSKBeihilfen.tblBeihilfen.colnAnzahl, :frmTSKBeihilfen.tblBeihilfen.colnBetrag,
:frmTSKBeihilfen.tblBeihilfen.coldtEinleseDatum, :frmTSKBeihilfen.tblBeihilfen.coldtErlDatum, :frmTSKBeihilfen.tblBeihilfen.colsGUID,
:frmTSKBeihilfen.tblBeihilfen.colsStatus, :frmTSKBeihilfen.tblBeihilfen.colnArztNr, :frmTSKBeihilfen.tblBeihilfen.colnRechNr
FROM be
WHERE beregarzt NOT IN (SELECT aregnr FROM a WHERE aregnr IS NOT NULL) ";
				}
				else
				{
					locals.strSelect = @"SELECT beregarzt, bereghalter, bename, bedate, beanzahl, bebetrag, beerfdat, beerldat, beguid,
aname1, aarztnr, bestatus, berechnr
INTO :frmTSKBeihilfen.tblBeihilfen.colsRegArzt, :frmTSKBeihilfen.tblBeihilfen.colsRegHalter, :frmTSKBeihilfen.tblBeihilfen.colsNameHalter,
:frmTSKBeihilfen.tblBeihilfen.coldtDatum, :frmTSKBeihilfen.tblBeihilfen.colnAnzahl, :frmTSKBeihilfen.tblBeihilfen.colnBetrag,
:frmTSKBeihilfen.tblBeihilfen.coldtEinleseDatum, :frmTSKBeihilfen.tblBeihilfen.coldtErlDatum, :frmTSKBeihilfen.tblBeihilfen.colsGUID,
:frmTSKBeihilfen.tblBeihilfen.colsNameArzt, :frmTSKBeihilfen.tblBeihilfen.colnArztNr,
:frmTSKBeihilfen.tblBeihilfen.colsStatus, :frmTSKBeihilfen.tblBeihilfen.colnRechNr
FROM be, a
WHERE beregarzt=aregnr(+) ";
				}
				// 20.10.23
				if (dfArztNr.Number != 0 && dfArztNr.Number != Sys.NUMBER_Null) 
				{
					locals.strSelect = locals.strSelect + @"
AND aarztnr = :frmTSKBeihilfen.dfArztNr";
				}
				if (dfHalterName.Text != "") 
				{
					strPName = "%" + Int.PalLics1(dfHalterName.Text) + "%";
					locals.strSelect = locals.strSelect + @"
AND @LICS(bename) LIKE :frmTSKBeihilfen.strPName";
				}

				if (locals.nAuswahl == 1) 
				{
					locals.strSelect = locals.strSelect + @"
AND beerldat IS NULL";
				}
				if (rbSortRegArzt.Checked) 
				{
					locals.strSelect = locals.strSelect + @"
ORDER BY aarztnr";
				}
				else
				{
					locals.strSelect = locals.strSelect + @"
ORDER BY beerfdat";
				}
				Sal.WaitCursor(true);
				tblBeihilfen.ResetTable();
				if (tblBeihilfen.Populate(hSqlBeih, locals.strSelect, Sys.TBL_FillAll)) 
				{
				}
				Sal.WaitCursor(false);

				return 0;
			}
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmTSKBeihilfen WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmTSKBeihilfen_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmTSKBeihilfen_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmTSKBeihilfen_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmTSKBeihilfen_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlConnection(ref this.hSqlBeih);

			this.rbunerl.Checked = true;
			this.rbSortEinleseDatum.Checked = true;
			this.PalHoleTabelle(1);

			this.dfMonate.Number = Int.PalGetProfileIntR("TSK-Beihilfen", "Monate", 3, "TVN");
			// 09.11.23 F5058
			this.tblBeihilfen.SetContextMenu("frmTSKBeihilfenRightClick", 0);

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmTSKBeihilfen_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalSetProfileStringR("TSK-Beihilfen", "Monate", this.dfMonate.Number.ToString(0), "TVN");

			this.tblBeihilfen.KillCellEdit();
			this.hSqlBeih.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// pbAnzeigen WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAnzeigen_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAnzeigen_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAnzeigen_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.rbunerl.Checked) 
			{
				this.PalHoleTabelle(1);
			}
			else if (this.rbunbekannt.Checked) 
			{
				this.PalHoleTabelle(2);
			}
			else
			{
				this.PalHoleTabelle(3);
			}
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.pbDrucken_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nAnz = MT.MTbl.PrintGetPrinterNames(this.strPrinters);
			this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			this.nOff = -1;
			this.nResult = 0;
			while (this.nResult < this.nAnz) 
			{
				this.lbPrinters.AddListItem(this.strPrinters[this.nResult]);
				if (this.strPrinters[this.nResult] == this.strDevice) 
				{
					this.nOff = this.nResult;
				}
				this.nResult = this.nResult + 1;
			}
			if (this.nOff >= 0) 
			{
				this.lbPrinters.SetListSelectedIndex(this.nOff);
			}

			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PrintParams.Init();

			this.PrintHeaderText.Init();
			if (this.rbunerl.Checked) 
			{
				this.PrintParams.DocName = "unerledigte Beihilfen";
				this.PrintHeader.CenterText = "unerledigte Beihilfen";
			}
			else
			{
				this.PrintParams.DocName = "alle Beihilfen";
				this.PrintHeader.CenterText = "alle Beihilfen";
			}
			this.PrintParams.AddPageHeader(this.PrintHeader);
			this.PrintHeaderText.Init();
			this.PrintHeader.CenterText = " ";
			this.PrintParams.AddPageHeader(this.PrintHeader);

			this.PrintHeaderText.Init();
			this.PrintHeader.CenterText = Int.PalDateToStrDE(SalDateTime.Current);
			this.PrintParams.AddPageFooter(this.PrintHeader);

			this.PrintParams.Orientation = MT.MTbl.MTP_OR_LANDSCAPE;
			this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			this.nResult = this.lbPrinters.GetListSelectedIndex();
			if (this.nResult == Sys.LB_Err) 
			{
				this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			}
			else
			{
				this.strDevice = this.lbPrinters.GetListItemText(this.nResult);
			}
			this.PrintParams.PrinterName = this.strDevice;
			// 07.11.13 F1760
			this.PrintParams.Language = MT.MTbl.MTP_LNG_GERMAN;

			MT.MTbl.Print(this.tblBeihilfen, this.PrintParams);

			#endregion
		}
		
		/// <summary>
		/// pbErinnerung WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbErinnerung_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbErinnerung_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbErinnerung_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// LL
			dlgLlDruck.ModalDialog(App.frmMain, "TSK-Beihilfen-Erinnerung.lst", this.dfMonate.Number.ToString(0));
			#endregion
		}
		
		/// <summary>
		/// tblBeihilfen WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblBeihilfen_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblBeihilfen_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblBeihilfen_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this.tblBeihilfen, 0xffffd8);
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblBeihilfen
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblBeihilfenTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmTSKBeihilfen _frmTSKBeihilfen = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblBeihilfenTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmTSKBeihilfen frmTSKBeihilfen
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmTSKBeihilfen == null) 
					{
						_frmTSKBeihilfen = (frmTSKBeihilfen)this.FindForm();
					}
					return _frmTSKBeihilfen;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblBeihilfenTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblBeihilfenTableWindow)SalWindow.FromHandle(handle, typeof(tblBeihilfenTableWindow)));
			}
			#endregion
		}
		#endregion
		
		#region SqlLocals
		
		/// <summary>
		/// Container class used to group the inner classes that contain
		/// the local variables that have been extracted from methods that use sql calls.
		/// </summary>
		private class SqlLocals
		{
			
			/// <summary>
			/// Contains the local variables that have been extracted from the
			/// method that uses sql calls and might need to access local bind variables.
			/// </summary>
			public class PalHoleTabelleLocals
			{
				public SalString strSelect = "";
				// Boolean: bNurUnerledigte
				public SalNumber nAuswahl = 0;
			}
		}
		#endregion
	}
}
