// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmRueckErst : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlRE = SalSqlHandle.Null;
		public SalNumber nFetchRE = 0;
		public SalNumber nGesGebDM = 0;
		public SalNumber nGebDM = 0;
		public SalNumber nDM = 0;
		public SalNumber nArztNr = 0;
		public SalNumber nUebersch = 0;
		public SalDateTime dtvon = SalDateTime.Null;
		public SalDateTime dtbis = SalDateTime.Null;
		public SalString strSelect = "";
		public SalBoolean bExists = false;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmRueckErst()
		{
			// Assign global reference.
			App.frmRueckErst = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmRueckErst CreateWindow(Control owner)
		{
			frmRueckErst frm = new frmRueckErst();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmRueckErst FromHandle(SalWindowHandle handle)
		{
			return ((frmRueckErst)SalWindow.FromHandle(handle, typeof(frmRueckErst)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlIstDa("FROM re WHERE rejahr = :frmRueckErst.dfJahr", ref this.bExists);
			if (this.bExists) 
			{
				Sal.MessageBox(@"Es sind bereits Rückerstattungen
für " + Int.PalStrNum(this.dfJahr.Number, 4, 0) + " gebucht !", "ungültig !", Sys.MB_Ok);
			}
			else
			{
				if (this.dfJahr.Number < 50) 
				{
					this.dfJahr.Number = this.dfJahr.Number + 2000;
				}
				else if (this.dfJahr.Number < 100) 
				{
					this.dfJahr.Number = this.dfJahr.Number + 1900;
				}
				Sal.WaitCursor(true);
				Int.SqlConnection(ref this.hSqlRE);

				this.dtvon = new SalDateTime(this.dfJahr.Number, 1, 1, 0, 0, 0);
				this.dtbis = new SalDateTime(this.dfJahr.Number, 12, 31, 23, 59, 59);
				Int.SqlImmedSel(@"SELECT sum(akdm) INTO :frmRueckErst.nGesGebDM FROM ak
WHERE akdatum BETWEEN :frmRueckErst.dtvon AND :frmRueckErst.dtbis
AND akarztnr<700 AND aktyp = 'RG' AND aktypdetail LIKE 'UebOP%' AND akdeaktiv IS NULL ");
				this.SetStatusBarText("Gesamt-Gebühren : €" + Int.PalStrNum(this.nGesGebDM, 10, 2));

				this.strSelect = @"
SELECT akarztnr, sum(akdm)
INTO :frmRueckErst.nArztNr, :frmRueckErst.nGebDM
FROM ak
WHERE akdatum BETWEEN :frmRueckErst.dtvon AND :frmRueckErst.dtbis
AND akarztnr<700 AND aktyp = 'RG' AND aktypdetail LIKE 'UebOP%' AND akdeaktiv IS NULL
GROUP BY 1";
				Int.SqlHandleExec(this.hSqlRE, this.strSelect, "Fehler", ref Var.nCount);
				this.nFetchRE = this.hSqlRE.FetchNext();
				// Variablen: 	nGebDM		Gebühren je Arzt und Jahr
				// 		nGesGebDM :	Gesamtgebühren je Jahr
				// 		dfDM: 		Überschuß je Jahr
				// 		nDM:		Erstattungsbetrag je Arzt und Jahr
				while (this.nFetchRE != Sys.FETCH_EOF) 
				{
					this.nDM = this.nGebDM / this.nGesGebDM * this.dfDM.Number;
					Int.SqlImmed(@"INSERT INTO re (rearztnr, regebdm, reuebersch, regesgebdm, rezahldat, rejahr, redm)
VALUES( :frmRueckErst.nArztNr, :frmRueckErst.nGebDM, :frmRueckErst.dfDM,
:frmRueckErst.nGesGebDM, NULL, :frmRueckErst.dfJahr, :frmRueckErst.nDM)");
					this.SetStatusBarText("Arzt-Nr.:" + Int.PalStrNum(this.nArztNr, 4, 0) + " - Erstattung: € " + Int.PalStrNum(this.nDM, 8, 2));
					this.nFetchRE = this.hSqlRE.FetchNext();
				}
				Sal.WaitCursor(false);
				this.hSqlRE.Disconnect();
			}
			#endregion
		}
		#endregion
	}
}
