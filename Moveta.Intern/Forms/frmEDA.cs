// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	/// <param name="strPArt"></param>
	public partial class frmEDA : SalFormWindow
	{
		#region Window Parameters
		public SalString strPArt;
		#endregion
		
		#region Window Variables
		public SalFileHandle hFile = SalFileHandle.Null;
		public SalString strSelect = "";
		public SalSqlHandle hSqlEDA = SalSqlHandle.Null;
		public SalNumber nFetchEDA = 0;
		public SalSqlHandle hSqlEDA1 = SalSqlHandle.Null;
		public SalNumber nFetchEDA1 = 0;
		public SalNumber nArztNr = 0;
		public SalNumber nHalterNr = 0;
		public SalNumber nRechNr = 0;
		public SalNumber nProzNr = 0;
		public SalNumber nTANr = 0;
		public SalNumber nTANr2 = 0;
		public SalNumber nTHNr = 0;
		public SalDateTime dtRechDat = SalDateTime.Null;
		public SalDateTime dtMahnDat = SalDateTime.Null;
		public SalNumber nDMRech = 0;
		public SalNumber nDMMahn = 0;
		public SalString strTAN1 = "";
		public SalString strTAN2 = "";
		public SalString strTAStr = "";
		public SalString strTAOrt = "";
		public SalDateTime dtMBDatum = SalDateTime.Null;
		public SalNumber nGerKosten = 0;
		public SalString strGerName = "";
		public SalNumber nEheleute = 0;
		public SalString strEhepartner = "";
		public SalNumber nNebenford = 0;
		public SalNumber nAnzRech = 0;
		public SalNumber nZinsProz = 0;
		public SalNumber nDMHF = 0;
		public SalString strDate = "";
		public SalNumber nHF = 0;
		public SalNumber nMG = 0;
		public SalNumber nZI = 0;
		public SalNumber nMBNr = 0;
		public SalDateTime dtDat = SalDateTime.Null;
		public SalDateTime dtFaell = SalDateTime.Null;
		public SalNumber nCount = 0;
		public SalBoolean bJa = false;
		public SalBoolean bPfadOk = false;
		public SalNumber nDiskNr = 0;
		public SalNumber nDiskNrKorr = 0;
		public SalNumber nKatAnz = 0;
		public SalString strROWID = "";
		public SalBoolean bExists = false;
		public SalNumber nZahlDM = 0;
		public SalArray<SalString> strZINS = new SalArray<SalString>(20);
		public SalNumber nCountZINS = 0;
		public SalNumber nCount1 = 0;
		public SalNumber nZISATZ = 0;
		public SalNumber nZIDI = 0;
		public SalDateTime dtBZvon = SalDateTime.Null;
		public SalDateTime dtBZbis = SalDateTime.Null;
		public SalNumber nBZZins = 0;
		public SalDateTime dtBZRechDat = SalDateTime.Null;
		public SalDateTime dtBZZahlDat = SalDateTime.Null;
		public SalNumber nBZHF = 0;
		public SalNumber nBZZahl = 0;
		public SalSqlHandle hSqlEDA2 = SalSqlHandle.Null;
		public SalNumber nFetchEDA2 = 0;
		public SalNumber nFetchBZ = 0;
		public SalSqlHandle hSqlBZ = SalSqlHandle.Null;
		public SalNumber nBZZinsEuro = 0;
		public SalDateTime dtBZSeit = SalDateTime.Null;
		public SalNumber nBZTage = 0;
		public SalNumber nBZRest = 0;
		public SalDateTime dtRueckstZinsVon = SalDateTime.Null;
		public SalDateTime dtRueckstZinsBis = SalDateTime.Null;
		public SalNumber nMBGeb = 0;
		public SalString strFile = "";
		public SalString strDir = "";
		public SalNumber PREAGGM = 0;
		public SalNumber PREAGANRA = 0;
		public SalString PREAGN1A = "";
		public SalString PREAGN2A = "";
		public SalString PREAGN3A = "";
		public SalString PREAGRFA = "";
		public SalString PREAGSHA = "";
		public SalString PREAGPLZA = "";
		public SalString PREAGOA = "";
		public SalString PREAGALA = "";
		public SalNumber PREPGMA = 0;
		public SalString PREPGPLZA = "";
		public SalString PREPGOA = "";
		public SalNumber PREAGANRB = 0;
		public SalString PREAGN1B = "";
		public SalString PREAGN2B = "";
		public SalString PREAGN3B = "";
		public SalString PREAGRFB = "";
		public SalString PREAGSHB = "";
		public SalString PREAGPLZB = "";
		public SalString PREAGOB = "";
		public SalString PREAGALB = "";
		public SalNumber PREPGMB = 0;
		public SalString PREPGPLZB = "";
		public SalString PREPGOB = "";
		public SalNumber PREAGANRC = 0;
		public SalString PREAGN1C = "";
		public SalString PREAGN2C = "";
		public SalString PREAGN3C = "";
		public SalString PREAGRFC = "";
		public SalString PREAGSHC = "";
		public SalString PREAGPLZC = "";
		public SalString PREAGOC = "";
		public SalString PREAGALC = "";
		public SalNumber PREPGMC = 0;
		public SalString PREPGPLZC = "";
		public SalString PREPGOC = "";
		public SalNumber PREAGANRD = 0;
		public SalString PREAGN1D = "";
		public SalString PREAGN2D = "";
		public SalString PREAGN3D = "";
		public SalString PREAGRFD = "";
		public SalString PREAGSHD = "";
		public SalString PREAGPLZD = "";
		public SalString PREAGOD = "";
		public SalString PREAGALD = "";
		public SalNumber PREPGMD = 0;
		public SalString PREPGPLZD = "";
		public SalString PREPGOD = "";
		public SalDateTime PREASPVD = SalDateTime.Null;
		public SalDateTime PREASPBD = SalDateTime.Null;
		public SalNumber ANTANZ = 0;
		public SalNumber SANZ = 0;
		public SalNumber SKATNR = 0;
		public SalNumber SUASP = 0;
		public SalNumber ASPANZ = 0;
		public SalString strJJMMTTv = "";
		public SalString strJJMMTTb = "";
		public SalString PREAGGVFUa = "";
		public SalString PREAGGVVNa = "";
		public SalString PREAGGVSHa = "";
		public SalString PREAGGVPLZa = "";
		public SalString PREAGGVOa = "";
		public SalString PREAGGVALa = "";
		public SalString PREAGGVFUb = "";
		public SalString PREAGGVVNb = "";
		public SalString PREAGGVSHb = "";
		public SalString PREAGGVPLZb = "";
		public SalString PREAGGVOb = "";
		public SalString PREAGGVALb = "";
		public SalString PREAGGVFUc = "";
		public SalString PREAGGVVNc = "";
		public SalString PREAGGVSHc = "";
		public SalString PREAGGVPLZc = "";
		public SalString PREAGGVOc = "";
		public SalString PREAGGVALc = "";
		public SalString PREAGGVFUd = "";
		public SalString PREAGGVVNd = "";
		public SalString PREAGGVSHd = "";
		public SalString PREAGGVPLZd = "";
		public SalString PREAGGVOd = "";
		public SalString PREAGGVALd = "";
		public SalString PREAGGVFUa2 = "";
		public SalString PREAGGVVNa2 = "";
		public SalString PREAGGVSHa2 = "";
		public SalString PREAGGVPLZa2 = "";
		public SalString PREAGGVOa2 = "";
		public SalString PREAGGVALa2 = "";
		public SalString PREAGGVFUb2 = "";
		public SalString PREAGGVVNb2 = "";
		public SalString PREAGGVSHb2 = "";
		public SalString PREAGGVPLZb2 = "";
		public SalString PREAGGVOb2 = "";
		public SalString PREAGGVALb2 = "";
		public SalString PREAGGVFUc2 = "";
		public SalString PREAGGVVNc2 = "";
		public SalString PREAGGVSHc2 = "";
		public SalString PREAGGVPLZc2 = "";
		public SalString PREAGGVOc2 = "";
		public SalString PREAGGVALc2 = "";
		public SalString PREAGGVFUd2 = "";
		public SalString PREAGGVVNd2 = "";
		public SalString PREAGGVSHd2 = "";
		public SalString PREAGGVPLZd2 = "";
		public SalString PREAGGVOd2 = "";
		public SalString PREAGGVALd2 = "";
		public SalString PREAGGVFUa3 = "";
		public SalString PREAGGVVNa3 = "";
		public SalString PREAGGVSHa3 = "";
		public SalString PREAGGVPLZa3 = "";
		public SalString PREAGGVOa3 = "";
		public SalString PREAGGVALa3 = "";
		public SalString PREAGGVFUb3 = "";
		public SalString PREAGGVVNb3 = "";
		public SalString PREAGGVSHb3 = "";
		public SalString PREAGGVPLZb3 = "";
		public SalString PREAGGVOb3 = "";
		public SalString PREAGGVALb3 = "";
		public SalString PREAGGVFUc3 = "";
		public SalString PREAGGVVNc3 = "";
		public SalString PREAGGVSHc3 = "";
		public SalString PREAGGVPLZc3 = "";
		public SalString PREAGGVOc3 = "";
		public SalString PREAGGVALc3 = "";
		public SalString PREAGGVFUd3 = "";
		public SalString PREAGGVVNd3 = "";
		public SalString PREAGGVSHd3 = "";
		public SalString PREAGGVPLZd3 = "";
		public SalString PREAGGVOd3 = "";
		public SalString PREAGGVALd3 = "";
		public SalString PREAGGVFUa4 = "";
		public SalString PREAGGVVNa4 = "";
		public SalString PREAGGVSHa4 = "";
		public SalString PREAGGVPLZa4 = "";
		public SalString PREAGGVOa4 = "";
		public SalString PREAGGVALa4 = "";
		public SalString PREAGGVFUb4 = "";
		public SalString PREAGGVVNb4 = "";
		public SalString PREAGGVSHb4 = "";
		public SalString PREAGGVPLZb4 = "";
		public SalString PREAGGVOb4 = "";
		public SalString PREAGGVALb4 = "";
		public SalString PREAGGVFUc4 = "";
		public SalString PREAGGVVNc4 = "";
		public SalString PREAGGVSHc4 = "";
		public SalString PREAGGVPLZc4 = "";
		public SalString PREAGGVOc4 = "";
		public SalString PREAGGVALc4 = "";
		public SalString PREAGGVFUd4 = "";
		public SalString PREAGGVVNd4 = "";
		public SalString PREAGGVSHd4 = "";
		public SalString PREAGGVPLZd4 = "";
		public SalString PREAGGVOd4 = "";
		public SalString PREAGGVALd4 = "";
		public SalString PREAZB = "";
		public SalString PREAZC = "";
		public SalString PREAZD = "";
		public SalString ASGZ = "";
		public SalNumber VBSKOBET = 0;
		public SalNumber VBZAM = 0;
		public SalDateTime VBZAD = SalDateTime.Null;
		public SalNumber VBZABET = 0;
		public SalDateTime VBZAD1 = SalDateTime.Null;
		public SalNumber VBZABET1 = 0;
		public SalDateTime VBZAD2 = SalDateTime.Null;
		public SalNumber VBZABET2 = 0;
		public SalDateTime VBZAD3 = SalDateTime.Null;
		public SalNumber VBZABET3 = 0;
		public SalDateTime VBZAD4 = SalDateTime.Null;
		public SalNumber VBZABET4 = 0;
		public SalDateTime VBZAD5 = SalDateTime.Null;
		public SalNumber VBZABET5 = 0;
		public SalDateTime VBZAD6 = SalDateTime.Null;
		public SalNumber VBZABET6 = 0;
		public SalDateTime VBZAD7 = SalDateTime.Null;
		public SalNumber VBZABET7 = 0;
		public SalDateTime VBZAD8 = SalDateTime.Null;
		public SalNumber VBZABET8 = 0;
		public SalDateTime VBZAD9 = SalDateTime.Null;
		public SalNumber VBZABET9 = 0;
		public SalDateTime VBZAD10 = SalDateTime.Null;
		public SalNumber VBZABET10 = 0;
		public SalDateTime VBZAD11 = SalDateTime.Null;
		public SalNumber VBZABET11 = 0;
		public SalDateTime VBZAD12 = SalDateTime.Null;
		public SalNumber VBZABET12 = 0;
		public SalString VBAGN1 = "";
		public SalString VBAGN2 = "";
		public SalString VBAGGVZFU = "";
		public SalString VBAGGVZN = "";
		public SalString VBAGGVZSH = "";
		public SalString VBAGGVZPLZ = "";
		public SalString VBAGGVZO = "";
		public SalString VBAGGVZAL = "";
		public SalString VBAGGVZ2FU = "";
		public SalString VBAGGVZ2N = "";
		public SalString VBAGGVZ2SH = "";
		public SalString VBAGGVZ2PLZ = "";
		public SalString VBAGGVZ2O = "";
		public SalString VBAGGVZ2AL = "";
		public SalString VBAGGVZ3FU = "";
		public SalString VBAGGVZ3N = "";
		public SalString VBAGGVZ3SH = "";
		public SalString VBAGGVZ3PLZ = "";
		public SalString VBAGGVZ3O = "";
		public SalString VBAGGVZ3AL = "";
		public SalString VBAGGVZ4FU = "";
		public SalString VBAGGVZ4N = "";
		public SalString VBAGGVZ4SH = "";
		public SalString VBAGGVZ4PLZ = "";
		public SalString VBAGGVZ4O = "";
		public SalString VBAGGVZ4AL = "";
		public SalNumber nZahlBetrag = 0;
		public SalNumber nZahlPRNr = 0;
		public SalNumber MBNeuSKOBET = 0;
		public SalString MBNeuSKOBEG = "";
		public SalNumber MBNeuAUSK = 0;
		public SalNumber MBNeuPGM = 0;
		public SalString MBNeuPGPLZ = "";
		public SalString MBNeuPGO = "";
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmEDA(SalString strPArt)
		{
			// Assign global reference.
			App.frmEDA = this;
			// Window Parameters initialization.
			this.strPArt = strPArt;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmEDA CreateWindow(Control owner, SalString strPArt)
		{
			frmEDA frm = new frmEDA(strPArt);
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmEDA FromHandle(SalWindowHandle handle)
		{
			return ((frmEDA)SalWindow.FromHandle(handle, typeof(frmEDA)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <param name="strFile"></param>
		/// <returns></returns>
		public SalFileHandle PalOpen(SalString strFile)
		{
			#region Local Variables
			SalFileHandle hlFile = SalFileHandle.Null;
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				// Call SalFileOpen(hlFile, strFile, OF_Create|OF_Text|OF_Write)
				//FC:FINAL: replaced SalFileOpenCP
				//SalFileOpenCP(hlFile, strFile, ((Sys.OF_Create | Sys.OF_Text) | Sys.OF_Write), ENC_OEMCP);
				int germanOemCodePage = 850;
                hlFile.Open(strFile, ((Sys.OF_Create | Sys.OF_Text) | Sys.OF_Write), Encoding.GetEncoding(germanOemCodePage));
                return hlFile;
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="strBELART"></param>
		/// <param name="strEBAID"></param>
		/// <returns></returns>
		public SalNumber PalAA(SalFileHandle hlFile, SalString strBELART, SalString strEBAID)
		{
			#region Local Variables
			SalString strJJMMTT = "";
			SalString strEDAVersion = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				strDate = SalDateTime.Current.ToString();
				strJJMMTT = strDate.Mid(2, 2) + strDate.Mid(5, 2) + strDate.Mid(8, 2);
				// 29.11.11 Ä553 EDA330
				// Call SalFilePutStr(hlFile, 'AA03803581' || strJJMMTT || strBELART || '        0320' || strEBAID || PalLF('', 92))
				// 09.07.12 Ä553 EDA 400
				// Call SalFilePutStr(hlFile, 'AA03803581' || strJJMMTT || strBELART || '        0330' || strEBAID || '03' || PalLF('', 90))
				if (strBELART == "01") 
				{
					strEDAVersion = "4000";
				}
				else
				{
					strEDAVersion = "4100";
				}
				// 17.04.18 Ä1662 03803581 -> 03739506
				hlFile.PutString("AA03739506" + strJJMMTT + strBELART + "        " + strEDAVersion + strEBAID + Int.PalLF("", 19) + Int.PalLF("MOV", 20) + Int.PalLF(Var.strProgVer, 10) + Int.PalLF("", 43));
				ANTANZ = 0;
				SANZ = 0;
				SKATNR = 0;
				SUASP = 0;
				ASPANZ = 0;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <returns></returns>
		public SalNumber PalClose(SalFileHandle hlFile)
		{
			#region Actions
			using (new SalContext(this))
			{
				hlFile.Close();
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nPR"></param>
		/// <param name="nAGGM"></param>
		/// <returns></returns>
		public SalNumber PalMBAS(SalFileHandle hlFile, SalNumber nPR, SalNumber nAGGM)
		{
			#region Local Variables
			SalString strSatz = "";
			SalString strPR = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				// Kennsatz
				strSatz = "01KS   00";
				// 09.07.12 Ä553 EDA400
				// If nAGGM=1
				// Set strSatz = strSatz || 'X'
				// Else
				// Set strSatz = strSatz || ' '
				// 08.02.05
				// Set strPR = PalLF(SalNumberToStrX(nPR,0) || '/' || PalZust(nTANr),35)

				// Set strSatz = strSatz || '        29503' || PalLF('Uelzen', 30) || ' ' || strPR || '   X   ' || PalLF('', 32)
				// 08.02.05
				strPR = Int.PalLF(nPR.ToString(0) + "/" + Int.PalZust(nTANr), 35);
				strSatz = strSatz + strPR + "                29503" + Int.PalLF("Uelzen", 30) + "            ";
				if (nAGGM == 1) 
				{
					strSatz = strSatz + "X";
				}
				else
				{
					strSatz = strSatz + " ";
				}
				strSatz = strSatz + "X      " + Int.PalLF("", 13);

				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(strSatz);
				// Antragsteller 01
				strSatz = "01AS   01 " + Int.PalLF("e.V.", 35) + Int.PalLF("moveta r.V.k.V.", 35) + Int.PalLF("", 35) + Int.PalLF("", 13);
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(strSatz);
				// Antragsteller 02
				strSatz = "01AS   02" + Int.PalLF("", 35) + Int.PalLF("", 84);
				hlFile.PutString(strSatz);
				// Antragsteller 03
				strSatz = "01AS   03" + Int.PalLF("Danziger Str.1", 35) + "31008" + Int.PalLF("Elze", 27) + Int.PalLF("", 52);
				hlFile.PutString(strSatz);
				// ges.Vertreter zum Antragsteller 01
				strSatz = "01ASGV 01" + Int.PalLF("1.Vorsitzender", 35) + Int.PalLF("Dr.Janos Sallai", 35) + Int.PalLF("", 49);
				hlFile.PutString(strSatz);
				// ges.Vertreter zum Antragsteller 02
				strSatz = "01ASGV 02" + Int.PalLF("Mühlenstraße 21", 35) + "27616" + Int.PalLF("Beverstedt", 27) + Int.PalLF("", 52);
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(strSatz);
				SANZ = SANZ + 5;
				ANTANZ = ANTANZ + 5;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="ASGZ"></param>
		/// <param name="VBSKOBET"></param>
		/// <returns></returns>
		public SalNumber PalVBKS(SalFileHandle hlFile, SalString ASGZ, SalNumber VBSKOBET)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				// Antragsgegner 01
				// 19.08.14 F2119 AGRF=Rechtsform statt Leerzeichen
				// 16.08.18 nTANr -> nProzNr
				strSatz = "08KS   00        " + Int.PalLF(Int.PalStrNurZiffern(ASGZ), 11) + Int.PalLF("PR" + nProzNr.ToString(0) + " " + Int.PalZust(nTANr), 30) + Int.PalDateToStrJJMMTT(SalDateTime.Current) + Int.PalStrNum(VBZAM, 1, 0) + "100000000" + Int.PalStrNum0(
					VBSKOBET * 100, 8, 0) + Int.PalLF("vereinbarte Kosten", 35) + "X          ";
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 1;
				ANTANZ = ANTANZ + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="ASGZ"></param>
		/// <returns></returns>
		public SalNumber PalMBNeuKS(SalFileHandle hlFile, SalString ASGZ)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				// Antragsgegner 01
				// 19.08.14 F2119 AGRF=Rechtsform statt Leerzeichen
				// 20.07.18 statt PR Mitarbeiter stand ArztNr und Mitarbeiter
				strSatz = "07KS   00        " + Int.PalLF(Int.PalStrNurZiffern(ASGZ), 11) + Int.PalLF("PR" + nProzNr.ToString(0) + " " + Int.PalZust(nTANr), 35) + "00000000" + Int.PalStrNullenausNum(this.MBNeuSKOBET * 100, 8) + Int.PalLF(this.MBNeuSKOBEG, 
					35) + Int.PalStrNullenausNum(this.MBNeuAUSK * 100, 8) + Int.PalLF("", 6);
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 1;
				ANTANZ = ANTANZ + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="ASGZ"></param>
		/// <returns></returns>
		public SalNumber PalVBNeuKS(SalFileHandle hlFile, SalString ASGZ)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				// Antragsgegner 01
				// 19.08.14 F2119 AGRF=Rechtsform statt Leerzeichen
				strSatz = "10KS   0003739506" + Int.PalLF(Int.PalStrNurZiffern(ASGZ), 11) + Int.PalLF("PR" + nProzNr.ToString(0) + " " + Int.PalZust(nTANr), 35) + "1" + Int.PalLF("", 64);
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(strSatz);
				SANZ = SANZ + 1;
				ANTANZ = ANTANZ + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <returns></returns>
		public SalNumber PalVBZAHL(SalFileHandle hlFile)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				// Antragsgegner 01
				// 19.08.14 F2119 AGRF=Rechtsform statt Leerzeichen
				strSatz = "08ZAHL 00" + Int.PalDateToStrJJMMTTLeer(VBZAD1) + Int.PalStrNum0Leer(VBZABET1 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD2) + Int.PalStrNum0Leer(VBZABET2 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD3) + Int.PalStrNum0Leer(
					VBZABET3 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD4) + Int.PalStrNum0Leer(VBZABET4 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD5) + Int.PalStrNum0Leer(VBZABET5 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD6) + Int.PalStrNum0Leer(
					VBZABET6 * 100, 10, 0) + Int.PalLF("", 23);
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(strSatz);
				SANZ = SANZ + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <returns></returns>
		public SalNumber PalVBZAHL2(SalFileHandle hlFile)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				// Antragsgegner 01
				// 19.08.14 F2119 AGRF=Rechtsform statt Leerzeichen
				strSatz = "08ZAHL200" + Int.PalDateToStrJJMMTTLeer(VBZAD7) + Int.PalStrNum0Leer(VBZABET7 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD8) + Int.PalStrNum0Leer(VBZABET8 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD9) + Int.PalStrNum0Leer(
					VBZABET9 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD10) + Int.PalStrNum0Leer(VBZABET10 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD11) + Int.PalStrNum0Leer(VBZABET11 * 100, 10, 0) + Int.PalDateToStrJJMMTTLeer(VBZAD12) + Int.PalStrNum0Leer(
					VBZABET12 * 100, 10, 0) + Int.PalLF("", 23);
				// 10.05.20 falsches Format
				strSatz = PalANSI2CP850(strSatz);

				hlFile.PutString(strSatz);
				SANZ = SANZ + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nPR"></param>
		/// <param name="nAGANR"></param>
		/// <param name="strAGN1"></param>
		/// <param name="strAGN2"></param>
		/// <param name="strAGN3"></param>
		/// <param name="strAGRF"></param>
		/// <param name="strAGSH"></param>
		/// <param name="strAGPLZ"></param>
		/// <param name="strAGO"></param>
		/// <param name="strAGAL"></param>
		/// <param name="nPGM"></param>
		/// <param name="strPGPLZ"></param>
		/// <param name="strPGO"></param>
		/// <returns></returns>
		public SalNumber PalMBAG(SalFileHandle hlFile, SalNumber nPR, SalNumber nAGANR, SalString strAGN1, SalString strAGN2, SalString strAGN3, SalString strAGRF, SalString strAGSH, SalString strAGPLZ, SalString strAGO, SalString strAGAL, SalNumber nPGM, SalString strPGPLZ, SalString strPGO)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				// Antragsgegner 01
				// 19.08.14 F2119 AGRF=Rechtsform statt Leerzeichen
				strSatz = "01AG   01" + Int.PalStrNum(nAGANR, 1, 0) + Int.PalLF(PalANSI2CP850(strAGRF), 35) + Int.PalLF(PalANSI2CP850(strAGN1), 35) + Int.PalLF(PalANSI2CP850(strAGN2), 35) + Int.PalLF("", 13);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				// Antragsgegner 02
				// 09.07.12 Ä553
				if (strAGN3 != "") 
				{
					strSatz = "01AG   02" + Int.PalLF(PalANSI2CP850(strAGN3), 35) + Int.PalLF("", 84);
					// 10.05.20 falsches Format
					// Set strSatz = PalANSI2CP850( strSatz )

					hlFile.PutString(strSatz);
				}
				// Antragsgegner 03
				// 09.07.12 Ä553
				// Set strSatz = '01AG   03' || PalLF(strAGRF,35) || PalLF(strAGSH, 35) || PalLF(strAGPLZ,5)  || PalLF(strAGO,27) || PalLF(strAGAL,3) || PalLF('',14)
				strSatz = "01AG   03" + Int.PalLF(PalANSI2CP850(strAGSH), 35) + Int.PalLF(PalANSI2CP850(strAGPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGO), 27) + Int.PalLF(PalANSI2CP850(strAGAL), 3) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )


				hlFile.PutString(PalEntfAccent(strSatz));
				// Antragsgegner 04
				strSatz = "01AG   04";
				strSatz = strSatz + Int.PalStrNum(nPGM, 1, 0);
				strSatz = strSatz + Int.PalLF(PalANSI2CP850(strPGPLZ), 5) + Int.PalLF(PalANSI2CP850(strPGO).Trim(), 30) + Int.PalLF("", 83);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 3;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nPR"></param>
		/// <param name="strAGN1"></param>
		/// <param name="strAGN2"></param>
		/// <param name="strAGN3"></param>
		/// <param name="strAGRF"></param>
		/// <param name="strAGSH"></param>
		/// <param name="strAGPLZ"></param>
		/// <param name="strAGO"></param>
		/// <param name="strAGAL"></param>
		/// <returns></returns>
		public SalNumber PalVBAG(SalFileHandle hlFile, SalNumber nPR, SalString strAGN1, SalString strAGN2, SalString strAGN3, SalString strAGRF, SalString strAGSH, SalString strAGPLZ, SalString strAGO, SalString strAGAL)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				strSatz = "08AG   01" + Int.PalLF(PalANSI2CP850(strAGN1), 35) + Int.PalLF(PalANSI2CP850(strAGN2), 35) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				// Set strSatz = '01AG   02' || PalLF('',35) || PalLF('',84)
				// Call SalFilePutStr(hlFile, strSatz)
				strSatz = "08AG   03" + Int.PalLF(strAGRF, 35) + Int.PalLF(PalANSI2CP850(strAGSH), 35) + Int.PalLF(PalANSI2CP850(strAGPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGO), 27) + Int.PalLF(strAGAL, 3) + Int.PalLF("", 14);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )


				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 2;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nPR"></param>
		/// <param name="strAGN1"></param>
		/// <param name="strAGN2"></param>
		/// <param name="strAGN3"></param>
		/// <param name="strAGRF"></param>
		/// <param name="strAGSH"></param>
		/// <param name="strAGPLZ"></param>
		/// <param name="strAGO"></param>
		/// <param name="strAGAL"></param>
		/// <returns></returns>
		public SalNumber PalMBNeuAG(SalFileHandle hlFile, SalNumber nPR, SalString strAGN1, SalString strAGN2, SalString strAGN3, SalString strAGRF, SalString strAGSH, SalString strAGPLZ, SalString strAGO, SalString strAGAL)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;
				strSatz = "07AG   01" + Int.PalLF(PalANSI2CP850(strAGN1), 35) + Int.PalLF(PalANSI2CP850(strAGN2), 35) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				// Set strSatz = '01AG   02' || PalLF('',35) || PalLF('',84)
				// Call SalFilePutStr(hlFile, strSatz)

				strSatz = "07AG   03" + Int.PalLF(strAGRF, 35) + Int.PalLF(PalANSI2CP850(strAGSH), 35) + Int.PalLF(PalANSI2CP850(strAGPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGO), 27) + Int.PalLF(PalANSI2CP850(strAGAL), 3) + Int.PalLF("", 14);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));

				strSatz = "07AG   04" + MBNeuPGM.ToString(0) + Int.PalLF(MBNeuPGPLZ, 5) + Int.PalLF(PalANSI2CP850(MBNeuPGO), 30) + Int.PalLF("", 83);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));

				SANZ = SANZ + 3;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nPR"></param>
		/// <param name="strAGSH"></param>
		/// <param name="strAGPLZ"></param>
		/// <param name="strAGO"></param>
		/// <param name="strAGAL"></param>
		/// <returns></returns>
		public SalNumber PalVBNeuAG(SalFileHandle hlFile, SalNumber nPR, SalString strAGSH, SalString strAGPLZ, SalString strAGO, SalString strAGAL)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nKatAnz = 0;

				strSatz = "10AG   00" + Int.PalLF(PalANSI2CP850(strAGSH), 35) + Int.PalLF(PalANSI2CP850(strAGPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGO), 27) + Int.PalLF(strAGAL, 3) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));

				SANZ = SANZ + 1;
			}

			return 0;
			#endregion
		}
		// 05.10.05 A32
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="strAGGVFU"></param>
		/// <param name="strAGGVVN"></param>
		/// <param name="strAGGVSH"></param>
		/// <param name="strAGGVPLZ"></param>
		/// <param name="strAGGVO"></param>
		/// <param name="strAGGVAL"></param>
		/// <returns></returns>
		public SalNumber PalMBAGGV(SalFileHandle hlFile, SalString strAGGVFU, SalString strAGGVVN, SalString strAGGVSH, SalString strAGGVPLZ, SalString strAGGVO, SalString strAGGVAL)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				strSatz = "01AGGV 01" + Int.PalLF(PalANSI2CP850(strAGGVFU), 35) + Int.PalLF(PalANSI2CP850(strAGGVVN), 35) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 1;
				if (strAGGVSH + strAGGVPLZ + strAGGVPLZ + strAGGVO + strAGGVAL != "") 
				{
					strSatz = "01AGGV 02" + Int.PalLF(PalANSI2CP850(strAGGVSH), 35) + Int.PalLF(PalANSI2CP850(strAGGVPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGGVO), 27) + Int.PalLF(strAGGVAL, 3) + Int.PalLF("", 49);
					// 10.05.20 falsches Format
					// Set strSatz = PalANSI2CP850( strSatz )

					hlFile.PutString(PalEntfAccent(strSatz));
					SANZ = SANZ + 2;
				}
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="strAGGVFU"></param>
		/// <param name="strAGGVVN"></param>
		/// <param name="strAGGVSH"></param>
		/// <param name="strAGGVPLZ"></param>
		/// <param name="strAGGVO"></param>
		/// <param name="strAGGVAL"></param>
		/// <returns></returns>
		public SalNumber PalVBAGGV(SalFileHandle hlFile, SalString strAGGVFU, SalString strAGGVVN, SalString strAGGVSH, SalString strAGGVPLZ, SalString strAGGVO, SalString strAGGVAL)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				strSatz = "08AGGVN01" + Int.PalLF(PalANSI2CP850(strAGGVFU), 35) + Int.PalLF(PalANSI2CP850(strAGGVVN), 35) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 1;
				if (strAGGVSH + strAGGVPLZ + strAGGVPLZ + strAGGVO + strAGGVAL != "") 
				{
					strSatz = "08AGGVN02" + Int.PalLF(PalANSI2CP850(strAGGVSH), 35) + Int.PalLF(PalANSI2CP850(strAGGVPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGGVO), 27) + Int.PalLF(strAGGVAL, 3) + Int.PalLF("", 49);
					// 10.05.20 falsches Format
					// Set strSatz = PalANSI2CP850( strSatz )

					hlFile.PutString(PalEntfAccent(strSatz));
					SANZ = SANZ + 1;
				}
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="strAGGVFU"></param>
		/// <param name="strAGGVVN"></param>
		/// <param name="strAGGVSH"></param>
		/// <param name="strAGGVPLZ"></param>
		/// <param name="strAGGVO"></param>
		/// <param name="strAGGVAL"></param>
		/// <returns></returns>
		public SalNumber PalMBNeuAGGV(SalFileHandle hlFile, SalString strAGGVFU, SalString strAGGVVN, SalString strAGGVSH, SalString strAGGVPLZ, SalString strAGGVO, SalString strAGGVAL)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				strSatz = "07AGGVN01" + Int.PalLF(PalANSI2CP850(strAGGVFU), 35) + Int.PalLF(PalANSI2CP850(strAGGVVN), 35) + Int.PalLF("", 49);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(PalEntfAccent(strSatz));
				SANZ = SANZ + 1;
				if (strAGGVSH + strAGGVPLZ + strAGGVPLZ + strAGGVO + strAGGVAL != "") 
				{
					strSatz = "07AGGVN02" + Int.PalLF(PalANSI2CP850(strAGGVSH), 35) + Int.PalLF(PalANSI2CP850(strAGGVPLZ), 5) + Int.PalLF(PalANSI2CP850(strAGGVO), 27) + Int.PalLF(strAGGVAL, 3) + Int.PalLF("", 49);
					// 10.05.20 falsches Format
					// Set strSatz = PalANSI2CP850( strSatz )

					hlFile.PutString(PalEntfAccent(strSatz));
					SANZ = SANZ + 1;
				}
			}

			return 0;
			#endregion
		}
		// Function: PalVBAGGVZ
		// Description:
		// Returns
		// Parameters
		// File Handle: hlFile
		// String: strAGGVFU
		// String: strAGGVVN
		// String: strAGGVSH
		// String: strAGGVPLZ
		// String: strAGGVO
		// String: strAGGVAL
		// Static Variables
		// Local variables
		// String: strSatz
		// Actions
		// Set strSatz = '08AGGVZ01' || PalLF(strAGGVFU,35) || PalLF(strAGGVVN,35) || PalLF('',49)
		// Call SalFilePutStr(hlFile, PalEntfAccent(strSatz))
		// Set SANZ = SANZ + 1
		// If strAGGVSH || strAGGVPLZ || strAGGVPLZ || strAGGVO || strAGGVAL != ''
		// Set strSatz = '08AGGVZ02' || PalLF(strAGGVSH,35) || PalLF(strAGGVPLZ,5) || PalLF(strAGGVO,27) || PalLF(strAGGVAL,3) || PalLF('',49)
		// Call SalFilePutStr(hlFile, PalEntfAccent(strSatz))
		// Set SANZ = SANZ + 1
		// Function: PalMBNeuAGGVZ
		// Description:
		// Returns
		// Parameters
		// File Handle: hlFile
		// String: strAGGVFU
		// String: strAGGVVN
		// String: strAGGVSH
		// String: strAGGVPLZ
		// String: strAGGVO
		// String: strAGGVAL
		// Static Variables
		// Local variables
		// String: strSatz
		// Actions
		// Set strSatz = '07AGGVZ01' || PalLF(strAGGVFU,35) || PalLF(strAGGVVN,35) || PalLF('',49)
		// Call SalFilePutStr(hlFile, PalEntfAccent(strSatz))
		// Set SANZ = SANZ + 1
		// Set strSatz = '07AGGVZ02' || PalLF(strAGGVSH,35) || PalLF(strAGGVPLZ,5) || PalLF(strAGGVO,27) || PalLF(strAGGVAL,3) || PalLF('',49)
		// Call SalFilePutStr(hlFile, PalEntfAccent(strSatz))
		// Set SANZ = SANZ + 1
		// Function: PalVBNeuAGGVZ
		// Description:
		// Returns
		// Parameters
		// File Handle: hlFile
		// String: strAGGVFU
		// String: strAGGVVN
		// String: strAGGVSH
		// String: strAGGVPLZ
		// String: strAGGVO
		// String: strAGGVAL
		// Static Variables
		// Local variables
		// String: strSatz
		// Actions
		// Set strSatz = '10AGGVZ01' || PalLF(strAGGVFU,35) || PalLF(strAGGVVN,35) || PalLF('',49)
		// Call SalFilePutStr(hlFile, PalEntfAccent(strSatz))
		// Set SANZ = SANZ + 1
		// Set strSatz = '10AGGVZ02' || PalLF(strAGGVSH,35) || PalLF(strAGGVPLZ,5) || PalLF(strAGGVO,27) || PalLF(strAGGVAL,3) || PalLF('',49)
		// Call SalFilePutStr(hlFile, PalEntfAccent(strSatz))
		// Set SANZ = SANZ + 1
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nASPKAT1"></param>
		/// <param name="strASPGR"></param>
		/// <param name="strASPRNR"></param>
		/// <param name="strASPVD"></param>
		/// <param name="strASPBD"></param>
		/// <param name="nASPBET"></param>
		/// <returns></returns>
		public SalNumber PalMBKA(SalFileHandle hlFile, SalNumber nASPKAT1, SalString strASPGR, SalString strASPRNR, SalString strASPVD, SalString strASPBD, SalNumber nASPBET)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				if (strASPBD == strASPVD) 
				{
					strASPBD = "      ";
				}
				strSatz = "01ASPK 00" + Int.PalLF(Int.PalStrNum(nASPKAT1, 2, 0), 2) + "          " + Int.PalLF(strASPGR, 35) + Int.PalLF(strASPRNR, 35) + strASPVD + strASPBD + Int.PalStrNullen((nASPBET * 100).ToString(0), 10) + Int.PalLF("", 15);
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(strSatz);
				SANZ = SANZ + 1;
				SKATNR = SKATNR + nASPKAT1;
				SUASP = SUASP + nASPBET;
				ASPANZ = ASPANZ + 1;
				nKatAnz = nKatAnz + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="strSatz"></param>
		/// <returns></returns>
		public SalNumber PalMBZINS(SalFileHandle hlFile, SalString strSatz)
		{
			// Number: nZISATZ
			// Number: nZIDI
			
			#region Local Variables
			// String: strSatz
			SalString strZIZO = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				// If nKatAnz = 1
				// Set strZIZO = '01 0000'
				// Else
				// Set strZIZO = '01-' || PalStrNullen(SalNumberToStrX(nKatAnz,0),2) || '00'
				// Set strSatz = '01ZINS 00' || strZIZO || PalStrNullen(SalNumberToStrX(nZISATZ*1000,0),5) || '1' || PalStrNullen(SalNumberToStrX(nZIDI*1000,0),5) || '            ' || PalLF('',10) || '0' || PalLF('',78)
				// 10.05.20 falsches Format
				// Set strSatz = PalANSI2CP850( strSatz )

				hlFile.PutString(strSatz);
				SANZ = SANZ + 1;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <param name="nMBSKOBET"></param>
		/// <param name="strMBSKOBG"></param>
		/// <param name="nMAHNK"></param>
		/// <returns></returns>
		public SalNumber PalMBAUSL(SalFileHandle hlFile, SalNumber nMBSKOBET, SalString strMBSKOBG, SalNumber nMAHNK)
		{
			#region Local Variables
			SalString strSatz = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				strSatz = "01AUSL 000000000000000000" + Int.PalLF("", 35) + Int.PalLF("", 68);
				hlFile.PutString(strSatz);
				// 09.07.12 Ä553 EDA 4.0
				// Set strSatz = '01NEBF 00' || PalStrNullen(SalNumberToStrX(nMAHNK*100,0),7) || '00000000000000'  || PalStrNullen(SalNumberToStrX(nMBSKOBET*100,0),7) || '00000000' || PalLF('',35) || PalLF('',48)
				strSatz = "01MAHNK00" + Int.PalStrNullen((nMAHNK * 100).ToString(0), 7) + Int.PalLF("", 112);
				hlFile.PutString(strSatz);
				strSatz = "01INKB 00" + Int.PalStrNullen((nMBSKOBET * 100).ToString(0), 10) + Int.PalLF("", 109);

				hlFile.PutString(strSatz);
				SANZ = SANZ + 3;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hlFile"></param>
		/// <returns></returns>
		public SalNumber PalBB(SalFileHandle hlFile)
		{
			#region Actions
			using (new SalContext(this))
			{
				// 17.04.18 Ä1662 03803581 -> 03739506
				hlFile.PutString("BB03739506" + Int.PalStrNullen(ANTANZ.ToString(0), 7) + Int.PalStrNullen(SANZ.ToString(0), 7) + Int.PalStrNullen(SKATNR.ToString(0), 7) + Int.PalStrNullen(SUASP.ToString(2), 14) + Int.PalStrNullen(((SalNumber)0).ToString(
							0), 15) + Int.PalStrNullen(ASPANZ.ToString(0), 7) + Int.PalLF("", 61));
				// Set SANZ = SANZ + 1
			}

			return 0;
			#endregion
		}
		// 31.01.08 F331
		/// <summary>
		/// macht aus André Andre
		/// </summary>
		/// <param name="strPText"></param>
		/// <returns></returns>
		public SalString PalEntfAccent(SalString strPText)
		{
			#region Local Variables
			SalNumber nPPos = 0;
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nPPos = strPText.Scan("é");
				if (nPPos != -1) 
				{
					strPText = strPText.Left(nPPos) + "e" + strPText.Mid(nPPos + 1, 4096);
				}
				return strPText;
			}
			#endregion
		}
		// 10.05.20 falsches EDA-Format laut Mail Sasse
		/// <summary>
		/// </summary>
		/// <param name="strANSI"></param>
		/// <returns></returns>
		public SalString PalANSI2CP850(SalString strANSI)
		{
			#region Local Variables
			SalNumber nLen = 0;
			SalNumber nByte = 0;
			SalString strChar = "";
			SalString strReturn = "";
			SalString strDummy = "";
			SalBoolean bCharOk = false;
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nLen = strANSI.Length;
				strReturn = "                                                                                                                                                                                                    ";
				strReturn = "";
				nByte = 0;
				while (nByte < nLen) 
				{
					bCharOk = false;
					strChar = strANSI.Mid(nByte, 1);
					if (strChar >= "A" && strChar <= "Z") 
					{
						bCharOk = true;
					}
					else if (strChar >= "a" && strChar <= "z") 
					{
						bCharOk = true;
					}
					else if (strChar >= "0" && strChar <= "9") 
					{
						bCharOk = true;
					}
					else if (strChar == " " || strChar == "&" || strChar == "\'" || strChar == "(" || strChar == ")" || strChar == "*" || strChar == "+" || strChar == "," || strChar == "-" || strChar == "." || strChar == "/" || strChar == ":" || strChar == 
					";" || strChar == "=" || strChar == "@" || strChar == "€") 
					{
						bCharOk = true;
					}
					else if (strChar == "ä" || strChar == "ö" || strChar == "ü" || strChar == "Ä" || strChar == "Ö" || strChar == "Ü" || strChar == "ß" || strChar == "§") 
					{
						bCharOk = true;
					}

					if (bCharOk) 
					{
						strReturn = strReturn + strChar;
					}
					// Else
					// If strChar = 'ü'
					// Set strReturn = strReturn || 'ue'
					// Else If strChar = 'ä'
					// Set strReturn = strReturn || 'ae'
					// Else If strChar = 'Ä'
					// Set strReturn = strReturn || 'Ae'
					// Else If strChar = 'ö'
					// Set strReturn = strReturn || 'oe'
					// Else If strChar = 'Ö'
					// Set strReturn = strReturn || 'Oe'
					// Else If strChar = 'Ü'
					// Set strReturn = strReturn || 'Ue'
					// If strChar = 'ü'
					// Set strReturn = strReturn || SalNumberToChar( 129 )
					// Else If strChar = 'ä'
					// Set strReturn = strReturn || SalNumberToChar( 132 )
					// Else If strChar = 'Ä'
					// Set strReturn = strReturn || SalNumberToChar( 142 )
					// Else If strChar = 'ö'
					// Set strReturn = strReturn || SalNumberToChar( 148 )
					// Set strReturn = strReturn || SalNumberToChar( 0x0094 )
					// Else If strChar = 'Ö'
					// Set strReturn = strReturn || SalNumberToChar( 153 )
					// Else If strChar = 'Ü'
					// Set strReturn = strReturn || SalNumberToChar( 154 )
					// Else If strChar = 'ß'
					// Set strReturn = strReturn || SalNumberToCharASCII( 225 )
					// Else If strChar = '§'
					// Set strReturn = strReturn || SalNumberToCharASCII( 245 )

					nByte = nByte + 1;
				}
				return strReturn;
			}
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmEDA WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmEDA_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmEDA_OnSAM_Create(sender, e);
					break;
				
				// On SAM_ReportStart
				
				// If (hWndfrmReport)
				
				// Call SalBringWindowToTop(hWndfrmReport)
				
				// Call SalReportDlgOptions(SalNumberToWindowHandle(wParam),
				
				// '','Druck läuft','','')
				
				// On SAM_ReportFetchInit
				
				// Set bJa=TRUE
				
				// Return TRUE
				
				// On SAM_ReportFetchNext
				
				// If bJa=TRUE
				
				// Set bJa=FALSE
				
				// Return TRUE
				
				// Else
				
				// Return FALSE
				
				// On SAM_ReportFinish
				
				// Call SalMessageBeep(0)
				
				// Call SalDestroyWindow(hWndForm)
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmEDA_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 18.12.17
			if (this.strPArt == "MB") 
			{
				this.SetText("Mahnbescheide");
			}
			else if (this.strPArt == "VB") 
			{
				this.SetText("Vollstreckungsbescheide");
			}
			else if (this.strPArt == "MBNeu") 
			{
				this.SetText("Neuzustellung Mahnbescheide");
			}
			else if (this.strPArt == "VBNeu") 
			{
				this.SetText("Neuzustellung Vollstreckungsbescheide");
			}

			Int.SqlImmedSel("SELECT MAX(predisknr) INTO :frmEDA.nDiskNr FROM pre");
			if (this.nDiskNr == SalNumber.Null) 
			{
				this.nDiskNr = 0;
			}
			this.nDiskNr = this.nDiskNr + 1;
			this.nDiskNrKorr = this.nDiskNr;
			while (this.nDiskNrKorr > 500) 
			{
				this.nDiskNrKorr = this.nDiskNrKorr - 500;
			}
			// 17.04.18 Ä1662 TVN -> MOV
			this.dfBez.Text = "MOV" + Int.PalNullen(this.nDiskNrKorr, 3);
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.bPfadOk = Sal.FileSetCurrentDirectory(Const.PATH_EDA);
			if (!(this.bPfadOk)) 
			{
				this.bPfadOk = Sal.FileCreateDirectory(Const.PATH_EDA);
			}
			if (!(this.bPfadOk)) 
			{
				Sal.MessageBox("Der Sicherungsordner konnte nicht erstellt werden. Diskette wurde nicht erstellt.", "Fehler", (Sys.MB_Ok | Sys.MB_IconStop));
			}
			else
			{
				if (this.strPArt == "MB") 
				{
					// 10.11.05
					// 30.06.09 OTÄ195 rkkzzahl>1  -> (rkdmleis+rkdmarzn-rkzaleis-rkzaarzn)=0
					this.strSelect = @"SELECT prd.ROWID, mbnr, prdarztnr, prdrechnr
INTO :frmEDA.strROWID, :frmEDA.nMBNr, :frmEDA.nArztNr, :frmEDA.nRechNr
FROM prd, mb, rk
WHERE prdnr=mbnr AND prdarztnr=rkarztnr AND prdrechnr=rkrechnr AND (rkdmleis+rkdmarzn-rkzaleis-rkzaarzn)=0 AND rkdeaktiv IS NULL";
					Sal.WaitCursor(true);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA);
					Var.bOK = Int.SqlHandleExec(this.hSqlEDA, this.strSelect, "EDA: Prüflauf ob bezahlt", ref Var.nErr) == Sys.IDOK;
					if (Var.bOK) 
					{
						this.nFetchEDA = this.hSqlEDA.FetchNext();
						while (this.nFetchEDA != Sys.FETCH_EOF) 
						{
							this.SetStatusBarText("Prüflauf Arzt-Nr.: " + this.nTANr.ToString(0));
							Int.PalLog("AG-Disk.Prüflauf: bezahlt " + this.nArztNr.ToString(0) + "/R" + this.nRechNr.ToString(0));
							Sal.MessageBox(@"Folgende Rechnung ist bezahlt
und wird nicht auf Diskette ausgegeben: " + this.nArztNr.ToString(0) + "/R" + this.nRechNr.ToString(0), "Achtung", (Sys.MB_Ok | Sys.MB_IconAsterisk));
							Int.SqlImmed("DELETE FROM prd WHERE ROWID=:frmEDA.strROWID");
							Int.SqlIstDa("FROM prd WHERE prdnr = :frmEDA.nMBNr", ref this.bExists);
							if (!(this.bExists)) 
							{
								Int.SqlImmed("DELETE FROM pr WHERE prnr = :frmEDA.nMBNr");
								// 14.01.10 OTF367
								Int.SqlImmed("DELETE FROM mb WHERE mbnr = :frmEDA.nMBNr");

								Int.PalLog("AG-Disk.Prüflauf: PR gelöscht PR" + this.nMBNr.ToString(0));
								Sal.MessageBox(@"Folgende PR-Nr. ist komplett bezahlt
und  wurde gelöscht: PR" + this.nMBNr.ToString(0), "Achtung", (Sys.MB_Ok | Sys.MB_IconAsterisk));
								Sal.MessageBox("AG-Disk.Prüflauf: bezahlt " + this.nArztNr.ToString(0) + "/R" + this.nRechNr.ToString(0), "Achtung", (Sys.MB_Ok | Sys.MB_IconAsterisk));
							}
							this.nFetchEDA = this.hSqlEDA.FetchNext();
						}
					}
					this.hSqlEDA.Commit();
					this.hSqlEDA.Disconnect();
					// 29.05.07 F176
					// If cbTest
					// Set hFile = PalOpen('A:\\JT.DTA')
					// Else
					// Set hFile = PalOpen('A:\\JM.DTA')
					if (this.cbTest.Checked) 
					{
						this.strFile = Const.PATH_EDA + "JT" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					else
					{
						this.strFile = Const.PATH_EDA + "JM" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					this.hFile = this.PalOpen(this.strFile);

					this.PalAA(this.hFile, "01", this.dfBez.Text);

					// Set strSelect = '
					// SELECT prarztnr, prhalternr, prnr,
					// aname1, aname2, astr, aort, anr2,
					// prprozhf,
					// prdatum, NULL, NULL,
					// NULL,  NULL,
					// preaggm,
					// preaganra, preagn1a, preagn2a, preagn3a, preagrfa, preagsha, preagplza, preagoa, preagala, prepgma, prepgplza, prepgoa,
					// preaganrb, preagn1b, preagn2b, preagn3b, preagrfb, preagshb, preagplzb, preagob, preagalb, prepgmb, prepgplzb, prepgob,
					// preaganrc, preagn1c, preagn2c, preagn3c, preagrfc, preagshc, preagplzc, preagoc, preagalc, prepgmc, prepgplzc, prepgoc,
					// preaganrd, preagn1d, preagn2d, preagn3d, preagrfd, preagshd, preagplzd, preagod, preagald, prepgmd, prepgplzd, prepgod,
					// preaggvfua, preaggvvna, preaggvsha, preaggvplza, preaggvoa, preaggvala,
					// preaggvfub, preaggvvnb, preaggvshb, preaggvplzb, preaggvob, preaggvalb,
					// preaggvfuc, preaggvvnc, preaggvshc, preaggvplzc, preaggvoc, preaggvalc,
					// preaggvfud, preaggvvnd, preaggvshd, preaggvplzd, preaggvod, preaggvald,
					// preaggvfua2, preaggvvna2, preaggvsha2, preaggvplza2, preaggvoa2, preaggvala2,
					// preaggvfub2, preaggvvnb2, preaggvshb2, preaggvplzb2, preaggvob2, preaggvalb2,
					// preaggvfuc2, preaggvvnc2, preaggvshc2, preaggvplzc2, preaggvoc2, preaggvalc2,
					// preaggvfud2, preaggvvnd2, preaggvshd2, preaggvplzd2, preaggvod2, preaggvald2,
					// preaggvfua3, preaggvvna3, preaggvsha3, preaggvplza3, preaggvoa3, preaggvala3,
					// preaggvfub3, preaggvvnb3, preaggvshb3, preaggvplzb3, preaggvob3, preaggvalb3,
					// preaggvfuc3, preaggvvnc3, preaggvshc3, preaggvplzc3, preaggvoc3, preaggvalc3,
					// preaggvfud3, preaggvvnd3, preaggvshd3, preaggvplzd3, preaggvod3, preaggvald3,
					// preaggvfua4, preaggvvna4, preaggvsha4, preaggvplza4, preaggvoa4, preaggvala4,
					// preaggvfub4, preaggvvnb4, preaggvshb4, preaggvplzb4, preaggvob4, preaggvalb4,
					// preaggvfuc4, preaggvvnc4, preaggvshc4, preaggvplzc4, preaggvoc4, preaggvalc4,
					// preaggvfud4, preaggvvnd4, preaggvshd4, preaggvplzd4, preaggvod4, preaggvald4
					// INTO :frmEDA.nTANr, :frmEDA.nTHNr, :frmEDA.nMBNr,
					// :frmEDA.strTAN1, :frmEDA.strTAN2, :frmEDA.strTAStr, :frmEDA.strTAOrt, :frmEDA.nTANr2,
					// :frmEDA.nZinsProz,
					// :frmEDA.dtMBDatum, :frmEDA.nGerKosten, :frmEDA.strGerName,
					// :frmEDA.nEheleute, :frmEDA.strEhepartner,
					// :frmEDA.PREAGGM,
					// :frmEDA.PREAGANRA, :frmEDA.PREAGN1A, :frmEDA.PREAGN2A, :frmEDA.PREAGN3A, :frmEDA.PREAGRFA, :frmEDA.PREAGSHA, :frmEDA.PREAGPLZA, :frmEDA.PREAGOA, :frmEDA.PREAGALA,
					// :frmEDA.PREPGMA, :frmEDA.PREPGPLZA, :frmEDA.PREPGOA,
					// :frmEDA.PREAGANRB, :frmEDA.PREAGN1B, :frmEDA.PREAGN2B, :frmEDA.PREAGN3B, :frmEDA.PREAGRFB, :frmEDA.PREAGSHB, :frmEDA.PREAGPLZB, :frmEDA.PREAGOB, :frmEDA.PREAGALB,
					// :frmEDA.PREPGMB, :frmEDA.PREPGPLZB, :frmEDA.PREPGOB,
					// :frmEDA.PREAGANRC, :frmEDA.PREAGN1C, :frmEDA.PREAGN2C, :frmEDA.PREAGN3C, :frmEDA.PREAGRFC, :frmEDA.PREAGSHC, :frmEDA.PREAGPLZC, :frmEDA.PREAGOC, :frmEDA.PREAGALC,
					// :frmEDA.PREPGMC, :frmEDA.PREPGPLZC, :frmEDA.PREPGOC,
					// :frmEDA.PREAGANRD, :frmEDA.PREAGN1D, :frmEDA.PREAGN2D, :frmEDA.PREAGN3D, :frmEDA.PREAGRFD, :frmEDA.PREAGSHD, :frmEDA.PREAGPLZD, :frmEDA.PREAGOD, :frmEDA.PREAGALD,
					// :frmEDA.PREPGMD, :frmEDA.PREPGPLZD, :frmEDA.PREPGOD,
					// :frmEDA.PREAGGVFUa, :frmEDA.PREAGGVVNa, :frmEDA.PREAGGVSHa, :frmEDA.PREAGGVPLZa, :frmEDA.PREAGGVOa, :frmEDA.PREAGGVALa,
					// :frmEDA.PREAGGVFUb, :frmEDA.PREAGGVVNb, :frmEDA.PREAGGVSHb, :frmEDA.PREAGGVPLZb, :frmEDA.PREAGGVOb, :frmEDA.PREAGGVALb,
					// :frmEDA.PREAGGVFUc, :frmEDA.PREAGGVVNc, :frmEDA.PREAGGVSHc, :frmEDA.PREAGGVPLZc, :frmEDA.PREAGGVOc, :frmEDA.PREAGGVALc,
					// :frmEDA.PREAGGVFUd, :frmEDA.PREAGGVVNd, :frmEDA.PREAGGVSHd, :frmEDA.PREAGGVPLZd, :frmEDA.PREAGGVOd, :frmEDA.PREAGGVALd,
					// :frmEDA.PREAGGVFUa2, :frmEDA.PREAGGVVNa2, :frmEDA.PREAGGVSHa2, :frmEDA.PREAGGVPLZa2, :frmEDA.PREAGGVOa2, :frmEDA.PREAGGVALa2,
					// :frmEDA.PREAGGVFUb2, :frmEDA.PREAGGVVNb2, :frmEDA.PREAGGVSHb2, :frmEDA.PREAGGVPLZb2, :frmEDA.PREAGGVOb2, :frmEDA.PREAGGVALb2,
					// :frmEDA.PREAGGVFUc2, :frmEDA.PREAGGVVNc2, :frmEDA.PREAGGVSHc2, :frmEDA.PREAGGVPLZc2, :frmEDA.PREAGGVOc2, :frmEDA.PREAGGVALc2,
					// :frmEDA.PREAGGVFUd2, :frmEDA.PREAGGVVNd2, :frmEDA.PREAGGVSHd2, :frmEDA.PREAGGVPLZd2, :frmEDA.PREAGGVOd2, :frmEDA.PREAGGVALd2,
					// :frmEDA.PREAGGVFUa3, :frmEDA.PREAGGVVNa3, :frmEDA.PREAGGVSHa3, :frmEDA.PREAGGVPLZa3, :frmEDA.PREAGGVOa3, :frmEDA.PREAGGVALa3,
					// :frmEDA.PREAGGVFUb3, :frmEDA.PREAGGVVNb3, :frmEDA.PREAGGVSHb3, :frmEDA.PREAGGVPLZb3, :frmEDA.PREAGGVOb3, :frmEDA.PREAGGVALb3,
					// :frmEDA.PREAGGVFUc3, :frmEDA.PREAGGVVNc3, :frmEDA.PREAGGVSHc3, :frmEDA.PREAGGVPLZc3, :frmEDA.PREAGGVOc3, :frmEDA.PREAGGVALc3,
					// :frmEDA.PREAGGVFUd3, :frmEDA.PREAGGVVNd3, :frmEDA.PREAGGVSHd3, :frmEDA.PREAGGVPLZd3, :frmEDA.PREAGGVOd3, :frmEDA.PREAGGVALd3,
					// :frmEDA.PREAGGVFUa4, :frmEDA.PREAGGVVNa4, :frmEDA.PREAGGVSHa4, :frmEDA.PREAGGVPLZa4, :frmEDA.PREAGGVOa4, :frmEDA.PREAGGVALa4,
					// :frmEDA.PREAGGVFUb4, :frmEDA.PREAGGVVNb4, :frmEDA.PREAGGVSHb4, :frmEDA.PREAGGVPLZb4, :frmEDA.PREAGGVOb4, :frmEDA.PREAGGVALb4,
					// :frmEDA.PREAGGVFUc4, :frmEDA.PREAGGVVNc4, :frmEDA.PREAGGVSHc4, :frmEDA.PREAGGVPLZc4, :frmEDA.PREAGGVOc4, :frmEDA.PREAGGVALc4,
					// :frmEDA.PREAGGVFUd4, :frmEDA.PREAGGVVNd4, :frmEDA.PREAGGVSHd4, :frmEDA.PREAGGVPLZd4, :frmEDA.PREAGGVOd4, :frmEDA.PREAGGVALd4
					// FROM h,a, pre, pr
					// WHERE prarztnr=harztnr and prhalternr=hhalternr
					// AND prarztnr=aarztnr
					// AND prnr=preproznr
					// AND predisknr=213
					// ORDER BY prnr'
					this.strSelect = @"
SELECT mbarztnr, mbhalternr, mbnr,
aname1, aname2, astr, aort, anr2,
mbprozhf,
mbdatum, mbgerkosten, mbgername,
mbeheleute, mbehepartner,
preaggm,
preaganra, preagn1a, preagn2a, preagn3a, preagrfa, preagsha, preagplza, preagoa, preagala, prepgma, prepgplza, prepgoa,
preaganrb, preagn1b, preagn2b, preagn3b, preagrfb, preagshb, preagplzb, preagob, preagalb, prepgmb, prepgplzb, prepgob,
preaganrc, preagn1c, preagn2c, preagn3c, preagrfc, preagshc, preagplzc, preagoc, preagalc, prepgmc, prepgplzc, prepgoc,
preaganrd, preagn1d, preagn2d, preagn3d, preagrfd, preagshd, preagplzd, preagod, preagald, prepgmd, prepgplzd, prepgod,
preaggvfua, preaggvvna, preaggvsha, preaggvplza, preaggvoa, preaggvala,
preaggvfub, preaggvvnb, preaggvshb, preaggvplzb, preaggvob, preaggvalb,
preaggvfuc, preaggvvnc, preaggvshc, preaggvplzc, preaggvoc, preaggvalc,
preaggvfud, preaggvvnd, preaggvshd, preaggvplzd, preaggvod, preaggvald,
preaggvfua2, preaggvvna2, preaggvsha2, preaggvplza2, preaggvoa2, preaggvala2,
preaggvfub2, preaggvvnb2, preaggvshb2, preaggvplzb2, preaggvob2, preaggvalb2,
preaggvfuc2, preaggvvnc2, preaggvshc2, preaggvplzc2, preaggvoc2, preaggvalc2,
preaggvfud2, preaggvvnd2, preaggvshd2, preaggvplzd2, preaggvod2, preaggvald2,
preaggvfua3, preaggvvna3, preaggvsha3, preaggvplza3, preaggvoa3, preaggvala3,
preaggvfub3, preaggvvnb3, preaggvshb3, preaggvplzb3, preaggvob3, preaggvalb3,
preaggvfuc3, preaggvvnc3, preaggvshc3, preaggvplzc3, preaggvoc3, preaggvalc3,
preaggvfud3, preaggvvnd3, preaggvshd3, preaggvplzd3, preaggvod3, preaggvald3,
preaggvfua4, preaggvvna4, preaggvsha4, preaggvplza4, preaggvoa4, preaggvala4,
preaggvfub4, preaggvvnb4, preaggvshb4, preaggvplzb4, preaggvob4, preaggvalb4,
preaggvfuc4, preaggvvnc4, preaggvshc4, preaggvplzc4, preaggvoc4, preaggvalc4,
preaggvfud4, preaggvvnd4, preaggvshd4, preaggvplzd4, preaggvod4, preaggvald4
INTO :frmEDA.nTANr, :frmEDA.nTHNr, :frmEDA.nMBNr,
:frmEDA.strTAN1, :frmEDA.strTAN2, :frmEDA.strTAStr, :frmEDA.strTAOrt, :frmEDA.nTANr2,
:frmEDA.nZinsProz,
:frmEDA.dtMBDatum, :frmEDA.nGerKosten, :frmEDA.strGerName,
:frmEDA.nEheleute, :frmEDA.strEhepartner,
:frmEDA.PREAGGM,
:frmEDA.PREAGANRA, :frmEDA.PREAGN1A, :frmEDA.PREAGN2A, :frmEDA.PREAGN3A, :frmEDA.PREAGRFA, :frmEDA.PREAGSHA, :frmEDA.PREAGPLZA, :frmEDA.PREAGOA, :frmEDA.PREAGALA,
:frmEDA.PREPGMA, :frmEDA.PREPGPLZA, :frmEDA.PREPGOA,
:frmEDA.PREAGANRB, :frmEDA.PREAGN1B, :frmEDA.PREAGN2B, :frmEDA.PREAGN3B, :frmEDA.PREAGRFB, :frmEDA.PREAGSHB, :frmEDA.PREAGPLZB, :frmEDA.PREAGOB, :frmEDA.PREAGALB,
:frmEDA.PREPGMB, :frmEDA.PREPGPLZB, :frmEDA.PREPGOB,
:frmEDA.PREAGANRC, :frmEDA.PREAGN1C, :frmEDA.PREAGN2C, :frmEDA.PREAGN3C, :frmEDA.PREAGRFC, :frmEDA.PREAGSHC, :frmEDA.PREAGPLZC, :frmEDA.PREAGOC, :frmEDA.PREAGALC,
:frmEDA.PREPGMC, :frmEDA.PREPGPLZC, :frmEDA.PREPGOC,
:frmEDA.PREAGANRD, :frmEDA.PREAGN1D, :frmEDA.PREAGN2D, :frmEDA.PREAGN3D, :frmEDA.PREAGRFD, :frmEDA.PREAGSHD, :frmEDA.PREAGPLZD, :frmEDA.PREAGOD, :frmEDA.PREAGALD,
:frmEDA.PREPGMD, :frmEDA.PREPGPLZD, :frmEDA.PREPGOD,
:frmEDA.PREAGGVFUa, :frmEDA.PREAGGVVNa, :frmEDA.PREAGGVSHa, :frmEDA.PREAGGVPLZa, :frmEDA.PREAGGVOa, :frmEDA.PREAGGVALa,
:frmEDA.PREAGGVFUb, :frmEDA.PREAGGVVNb, :frmEDA.PREAGGVSHb, :frmEDA.PREAGGVPLZb, :frmEDA.PREAGGVOb, :frmEDA.PREAGGVALb,
:frmEDA.PREAGGVFUc, :frmEDA.PREAGGVVNc, :frmEDA.PREAGGVSHc, :frmEDA.PREAGGVPLZc, :frmEDA.PREAGGVOc, :frmEDA.PREAGGVALc,
:frmEDA.PREAGGVFUd, :frmEDA.PREAGGVVNd, :frmEDA.PREAGGVSHd, :frmEDA.PREAGGVPLZd, :frmEDA.PREAGGVOd, :frmEDA.PREAGGVALd,
:frmEDA.PREAGGVFUa2, :frmEDA.PREAGGVVNa2, :frmEDA.PREAGGVSHa2, :frmEDA.PREAGGVPLZa2, :frmEDA.PREAGGVOa2, :frmEDA.PREAGGVALa2,
:frmEDA.PREAGGVFUb2, :frmEDA.PREAGGVVNb2, :frmEDA.PREAGGVSHb2, :frmEDA.PREAGGVPLZb2, :frmEDA.PREAGGVOb2, :frmEDA.PREAGGVALb2,
:frmEDA.PREAGGVFUc2, :frmEDA.PREAGGVVNc2, :frmEDA.PREAGGVSHc2, :frmEDA.PREAGGVPLZc2, :frmEDA.PREAGGVOc2, :frmEDA.PREAGGVALc2,
:frmEDA.PREAGGVFUd2, :frmEDA.PREAGGVVNd2, :frmEDA.PREAGGVSHd2, :frmEDA.PREAGGVPLZd2, :frmEDA.PREAGGVOd2, :frmEDA.PREAGGVALd2,
:frmEDA.PREAGGVFUa3, :frmEDA.PREAGGVVNa3, :frmEDA.PREAGGVSHa3, :frmEDA.PREAGGVPLZa3, :frmEDA.PREAGGVOa3, :frmEDA.PREAGGVALa3,
:frmEDA.PREAGGVFUb3, :frmEDA.PREAGGVVNb3, :frmEDA.PREAGGVSHb3, :frmEDA.PREAGGVPLZb3, :frmEDA.PREAGGVOb3, :frmEDA.PREAGGVALb3,
:frmEDA.PREAGGVFUc3, :frmEDA.PREAGGVVNc3, :frmEDA.PREAGGVSHc3, :frmEDA.PREAGGVPLZc3, :frmEDA.PREAGGVOc3, :frmEDA.PREAGGVALc3,
:frmEDA.PREAGGVFUd3, :frmEDA.PREAGGVVNd3, :frmEDA.PREAGGVSHd3, :frmEDA.PREAGGVPLZd3, :frmEDA.PREAGGVOd3, :frmEDA.PREAGGVALd3,
:frmEDA.PREAGGVFUa4, :frmEDA.PREAGGVVNa4, :frmEDA.PREAGGVSHa4, :frmEDA.PREAGGVPLZa4, :frmEDA.PREAGGVOa4, :frmEDA.PREAGGVALa4,
:frmEDA.PREAGGVFUb4, :frmEDA.PREAGGVVNb4, :frmEDA.PREAGGVSHb4, :frmEDA.PREAGGVPLZb4, :frmEDA.PREAGGVOb4, :frmEDA.PREAGGVALb4,
:frmEDA.PREAGGVFUc4, :frmEDA.PREAGGVVNc4, :frmEDA.PREAGGVSHc4, :frmEDA.PREAGGVPLZc4, :frmEDA.PREAGGVOc4, :frmEDA.PREAGGVALc4,
:frmEDA.PREAGGVFUd4, :frmEDA.PREAGGVVNd4, :frmEDA.PREAGGVSHd4, :frmEDA.PREAGGVPLZd4, :frmEDA.PREAGGVOd4, :frmEDA.PREAGGVALd4
FROM mb,h,a, pre
WHERE mbarztnr=harztnr and mbhalternr=hhalternr
AND mbarztnr=aarztnr
AND mbnr=preproznr AND hdeaktiv IS NULL
ORDER BY mbnr";
					Sal.WaitCursor(true);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA1);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA2);
					Var.bOK = Int.SqlConnection(ref this.hSqlBZ);
					Var.bOK = Int.SqlHandleExec(this.hSqlEDA, this.strSelect, "EDA Datei erstellen", ref Var.nErr) == Sys.IDOK;
					if (Var.bOK) 
					{
						this.nFetchEDA = this.hSqlEDA.FetchNext();
						while (this.nFetchEDA != Sys.FETCH_EOF) 
						{
							// 14.09.06 Ä8
							// 20.03.19 Ä1842 nur noch 5% ÜBZ, daher nur noch nZIDI = 5
							// If nZinsProz <= 8
							// Set nZISATZ = 0
							// 26.01.07 A6
							// If nZinsProz < 0
							// Set nZIDI = SalNumberAbs(nZinsProz)
							// Else
							// Set nZIDI = 5
							// Else
							// Set nZISATZ = nZinsProz
							// Set nZIDI = 0
							this.nZIDI = 5;
							// 04.09.06 F50
							Int.SqlIstDa("FROM prd WHERE prdnr = :frmEDA.nMBNr ", ref this.bExists);

							this.SetStatusBarText("Arzt-Nr.: " + this.nTANr.ToString(0));
							// 04.09.06 F50 + And  bExists
							if (this.nFetchEDA == Sys.FETCH_Ok && this.bExists) 
							{
								this.PalMBAS(this.hFile, this.nMBNr, this.PREAGGM);
								this.PalMBAG(this.hFile, this.nMBNr, this.PREAGANRA, this.PREAGN1A, this.PREAGN2A, this.PREAGN3A, this.PREAGRFA, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA, this.PREPGMA, this.PREPGPLZA, this.PREPGOA);
								if (this.PREAGGVFUa + this.PREAGGVVNa != "") 
								{
									this.PalMBAGGV(this.hFile, this.PREAGGVFUa, this.PREAGGVVNa, this.PREAGGVSHa, this.PREAGGVPLZa, this.PREAGGVOa, this.PREAGGVALa);
								}
								// 26.01.07 Ä59
								if (this.PREAGGVFUa2 + this.PREAGGVVNa2 != "") 
								{
									this.PalMBAGGV(this.hFile, this.PREAGGVFUa2, this.PREAGGVVNa2, this.PREAGGVSHa2, this.PREAGGVPLZa2, this.PREAGGVOa2, this.PREAGGVALa2);
								}
								if (this.PREAGGVFUa3 + this.PREAGGVVNa3 != "") 
								{
									this.PalMBAGGV(this.hFile, this.PREAGGVFUa3, this.PREAGGVVNa3, this.PREAGGVSHa3, this.PREAGGVPLZa3, this.PREAGGVOa3, this.PREAGGVALa3);
								}
								if (this.PREAGGVFUa4 + this.PREAGGVVNa4 != "") 
								{
									this.PalMBAGGV(this.hFile, this.PREAGGVFUa4, this.PREAGGVVNa4, this.PREAGGVSHa4, this.PREAGGVPLZa4, this.PREAGGVOa4, this.PREAGGVALa4);
								}
								// If PREAGGVFUa5 || PREAGGVVNa5 != ''
								// Call PalMBAGGV(hFile, PREAGGVFUa5, PREAGGVVNa5, PREAGGVSHa5, PREAGGVPLZa5, PREAGGVOa5, PREAGGVALa5)
								// If PREAGGVFUa6 || PREAGGVVNa6 != ''
								// Call PalMBAGGV(hFile, PREAGGVFUa6, PREAGGVVNa6, PREAGGVSHa6, PREAGGVPLZa6, PREAGGVOa6, PREAGGVALa6)
								if (this.PREAGGM == 1) 
								{
									if (this.PREAGN1B + this.PREAGN2B + this.PREAGOB != "") 
									{
										this.PalMBAG(this.hFile, this.nMBNr, this.PREAGANRB, this.PREAGN1B, this.PREAGN2B, this.PREAGN3B, this.PREAGRFB, this.PREAGSHB, this.PREAGPLZB, this.PREAGOB, this.PREAGALB, this.PREPGMB, this.PREPGPLZB, this.PREPGOA);
										if (this.PREAGGVFUb + this.PREAGGVVNb != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUb, this.PREAGGVVNb, this.PREAGGVSHb, this.PREAGGVPLZb, this.PREAGGVOb, this.PREAGGVALb);
										}
										// 26.01.07 Ä59
										if (this.PREAGGVFUb2 + this.PREAGGVVNb2 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUb2, this.PREAGGVVNb2, this.PREAGGVSHb2, this.PREAGGVPLZb2, this.PREAGGVOb2, this.PREAGGVALb2);
										}
										if (this.PREAGGVFUb3 + this.PREAGGVVNb3 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUb3, this.PREAGGVVNb3, this.PREAGGVSHb3, this.PREAGGVPLZb3, this.PREAGGVOb3, this.PREAGGVALb3);
										}
										if (this.PREAGGVFUb4 + this.PREAGGVVNb4 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUb4, this.PREAGGVVNb4, this.PREAGGVSHb4, this.PREAGGVPLZb4, this.PREAGGVOb4, this.PREAGGVALb4);
										}
										// If PREAGGVFUb5 || PREAGGVVNb5 != ''
										// Call PalMBAGGV(hFile, PREAGGVFUb5, PREAGGVVNb5, PREAGGVSHb5, PREAGGVPLZb5, PREAGGVOb5, PREAGGVALb5)
										// If PREAGGVFUb6 || PREAGGVVNb6 != ''
										// Call PalMBAGGV(hFile, PREAGGVFUb6, PREAGGVVNb6, PREAGGVSHb6, PREAGGVPLZb6, PREAGGVOb6, PREAGGVALb6)
									}
									if (this.PREAGN1C + this.PREAGN2C + this.PREAGOC != "") 
									{
										this.PalMBAG(this.hFile, this.nMBNr, this.PREAGANRC, this.PREAGN1C, this.PREAGN2C, this.PREAGN3C, this.PREAGRFC, this.PREAGSHC, this.PREAGPLZC, this.PREAGOC, this.PREAGALC, this.PREPGMC, this.PREPGPLZC, this.PREPGOA);
										if (this.PREAGGVFUc + this.PREAGGVVNc != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUc, this.PREAGGVVNc, this.PREAGGVSHc, this.PREAGGVPLZc, this.PREAGGVOc, this.PREAGGVALc);
										}
										// 26.01.07 Ä59
										if (this.PREAGGVFUc2 + this.PREAGGVVNc2 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUc2, this.PREAGGVVNc2, this.PREAGGVSHc2, this.PREAGGVPLZc2, this.PREAGGVOc2, this.PREAGGVALc2);
										}
										if (this.PREAGGVFUc3 + this.PREAGGVVNc3 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUc3, this.PREAGGVVNc3, this.PREAGGVSHc3, this.PREAGGVPLZc3, this.PREAGGVOc3, this.PREAGGVALc3);
										}
										if (this.PREAGGVFUc4 + this.PREAGGVVNc4 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUc4, this.PREAGGVVNc4, this.PREAGGVSHc4, this.PREAGGVPLZc4, this.PREAGGVOc4, this.PREAGGVALc4);
										}
										// If PREAGGVFUc5 || PREAGGVVNc5 != ''
										// Call PalMBAGGV(hFile, PREAGGVFUc5, PREAGGVVNc5, PREAGGVSHc5, PREAGGVPLZc5, PREAGGVOc5, PREAGGVALc5)
										// If PREAGGVFUc6 || PREAGGVVNc6 != ''
										// Call PalMBAGGV(hFile, PREAGGVFUc6, PREAGGVVNc6, PREAGGVSHc6, PREAGGVPLZc6, PREAGGVOc6, PREAGGVALc6)
									}
									if (this.PREAGN1D + this.PREAGN2D + this.PREAGOD != "") 
									{
										this.PalMBAG(this.hFile, this.nMBNr, this.PREAGANRD, this.PREAGN1D, this.PREAGN2D, this.PREAGN3D, this.PREAGRFD, this.PREAGSHD, this.PREAGPLZD, this.PREAGOD, this.PREAGALD, this.PREPGMD, this.PREPGPLZD, this.PREPGOA);
										if (this.PREAGGVFUd + this.PREAGGVVNd != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUd, this.PREAGGVVNd, this.PREAGGVSHd, this.PREAGGVPLZd, this.PREAGGVOd, this.PREAGGVALd);
										}
										// 26.01.07 Ä59
										if (this.PREAGGVFUd2 + this.PREAGGVVNd2 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUd2, this.PREAGGVVNd2, this.PREAGGVSHd2, this.PREAGGVPLZd2, this.PREAGGVOd2, this.PREAGGVALd2);
										}
										if (this.PREAGGVFUd3 + this.PREAGGVVNd3 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUd3, this.PREAGGVVNd3, this.PREAGGVSHd3, this.PREAGGVPLZd3, this.PREAGGVOd3, this.PREAGGVALd3);
										}
										if (this.PREAGGVFUd4 + this.PREAGGVVNd4 != "") 
										{
											this.PalMBAGGV(this.hFile, this.PREAGGVFUd4, this.PREAGGVVNd4, this.PREAGGVSHd4, this.PREAGGVPLZd4, this.PREAGGVOd4, this.PREAGGVALd4);
										}
										// If PREAGGVFUd5 || PREAGGVVNd5 != ''
										// Call PalMBAGGV(hFile, PREAGGVFUd5, PREAGGVVNd5, PREAGGVSHd5, PREAGGVPLZd5, PREAGGVOd5, PREAGGVALd5)
										// If PREAGGVFUd6 || PREAGGVVNd6 != ''
										// Call PalMBAGGV(hFile, PREAGGVFUd6, PREAGGVVNd6, PREAGGVSHd6, PREAGGVPLZd6, PREAGGVOd6, PREAGGVALd6)
									}
								}

								this.nAnzRech = 0;
								this.nDMHF = 0;
								this.nDMMahn = 0;
								this.nNebenford = 0;
								this.nBZZinsEuro = 0;
								this.dtRueckstZinsVon = SalDateTime.Current;
								this.dtRueckstZinsBis = Int.PalAddDay(SalDateTime.Current, -1);

								// Set nCount1 = 0
								// While nCount1 < 20
								// Set strZINS[nCount1] = ''
								// Set nCount1 = nCount1 + 1
								// MBKA
								this.strSelect = @"SELECT prdarztnr, prdrechnr, (rkdmleis+rkdmarzn-rkzaleis-rkzaarzn),
(rkdmmahn-rkzamahn), (rkdmzins-rkzazins), rkrechDat,  rkfaelldat, (rkzaleis+rkzaarzn+rkzamahn+rkzazins)
INTO :frmEDA.nArztNr, :frmEDA.nRechNr, :frmEDA.nHF, :frmEDA.nMG, :frmEDA.nZI, :frmEDA.dtDat, :frmEDA.dtFaell, :frmEDA.nZahlDM
FROM prd, rk WHERE prdnr = :frmEDA.nMBNr AND prdarztnr=rkarztnr AND prdrechnr=rkrechnr AND rkdeaktiv IS NULL ORDER BY prdarztnr, prdrechnr";
								Int.SqlHandleExec(this.hSqlEDA1, this.strSelect, "Fehler", ref this.nCount);
								this.nFetchEDA1 = this.hSqlEDA1.FetchNext();
								this.nCount1 = 0;
								this.nCountZINS = 0;
								while (this.nFetchEDA1 != Sys.FETCH_EOF) 
								{
									if (Int.SqlImmedSel(@"SELECT MIN(rpdatum), MAX(rpdatum) INTO :frmEDA.PREASPVD, :frmEDA.PREASPBD FROM rp
WHERE rparztnr = :frmEDA.nArztNr AND rprechnr = :frmEDA.nRechNr")) 
									{
									}

									this.strDate = this.PREASPVD.ToString();
									this.strJJMMTTv = this.strDate.Mid(2, 2) + this.strDate.Mid(5, 2) + this.strDate.Mid(8, 2);
									this.strDate = this.PREASPBD.ToString();
									this.strJJMMTTb = this.strDate.Mid(2, 2) + this.strDate.Mid(5, 2) + this.strDate.Mid(8, 2);
									this.PalMBKA(this.hFile, 78, "Rechnung", this.nArztNr.ToString(0) + "/" + this.nRechNr.ToString(0), this.strJJMMTTv, this.strJJMMTTb, this.nHF);
                                    // 08.05.24 F5099 ### auskommentiert
                                    //if (Int.PalAddDay(this.dtDat, 30) < this.dtRueckstZinsVon) 
                                    //{
                                    //	this.dtRueckstZinsVon = Int.PalAddDay(this.dtDat, 30);
                                    //}


                                    this.nCount1 = this.nCount1 + 1;
									this.nDMHF = this.nDMHF + this.nHF;
									this.nDMMahn = this.nDMMahn + this.nMG;
									// 14.09.06 Ä8
									if (this.nZahlDM == 0 || this.nZahlDM == SalNumber.Null) 
									{
										// 13.02.07 F129
										// Set strZINS[nCountZINS] = '01ZINS ' || PalNullen(nCountZINS+1,2) || PalNullen(nCount1,2) || ' 0000' || PalStrNullen(SalNumberToStrX(nZISATZ*1000,0),5) || '1' || PalStrNullen(SalNumberToStrX(nZIDI*1000,0),5) ||
										// PalDateToStrJJMMTT(PalAddDay(dtDat,30)) || '      ' || PalLF('',10) || '0' ||
										// PalLF('',78)
										// 09.07.12 Ä553 EDA 400
										// Set strZINS[nCountZINS] = '01ZINS 00' || PalNullen(nCount1,2) || ' 0000' || PalStrNullen(SalNumberToStrX(nZISATZ*1000,0),5) || '1' || PalStrNullen(SalNumberToStrX(nZIDI*1000,0),5) ||
										// PalDateToStrJJMMTT(PalAddDay(dtDat,30)) || '      ' || PalLF('',10) || '0' ||
										// PalLF('',78)
										// 09.07.12 Ä553 EDA 4.00
										// Set strZINS[nCountZINS] = '01ZINS 00' || PalNullen(nCount1,2) || ' 0000' || PalStrNullen(SalNumberToStrX(nZISATZ*1000,0),5) || '1' || PalStrNullen(SalNumberToStrX(nZIDI*1000,0),5) ||
										// PalDateToStrJJMMTT(PalAddDay(dtDat,30)) || '      ' || PalLF('',10) || '0' ||
										// PalLF('',78)
										if (this.nZIDI == 0) 
										{
											Var.strDummy1 = Int.PalStrNullen((this.nZISATZ * 1000).ToString(0), 5) + "F";
										}
										else
										{
											Var.strDummy1 = Int.PalStrNullen((this.nZIDI * 1000).ToString(0), 5) + "B";
										}
										this.PalMBZINS(this.hFile, "01ZINS 00" + Var.strDummy1 + "1" + Int.PalDateToStrJJMMTT(Int.PalAddDay(this.dtDat, 30)) + "      " + Int.PalLF("", 100));

										this.nCountZINS = this.nCountZINS + 1;
									}
									else
									{
										// Zinsberechnung je Zahldatum
										this.strSelect = @"SELECT rkrechdat, (rkdmleis+rkdmarzn), zabuchdat, zadm
INTO :frmEDA.dtBZRechDat, :frmEDA.nBZHF, :frmEDA.dtBZZahlDat, :frmEDA.nBZZahl
FROM rk, za WHERE rkarztnr = :frmEDA.nArztNr AND rkrechnr = :frmEDA.nRechNr AND rkarztnr=zaarztnr and rkrechnr=zarechnr AND rkdeaktiv IS NULL AND zadeaktiv IS NULL ORDER BY zabuchdat";
										Int.SqlHandleExec(this.hSqlEDA2, this.strSelect, "Fehler", ref this.nCount);
										this.nFetchEDA2 = this.hSqlEDA2.FetchNext();
										this.dtBZSeit = Int.PalAddDay(this.dtBZRechDat, 30);

										this.nBZRest = this.nBZHF;
										// Set nBZZinsEuro = 0
										while (this.nFetchEDA2 != Sys.FETCH_EOF) 
										{
											this.hSqlBZ.PrepareAndExecute(@"SELECT bzvon, bzbis, bzzins INTO :frmEDA.dtBZvon, :frmEDA.dtBZbis, :frmEDA.nBZZins
FROM bz ORDER BY bzvon, bzbis");
											this.nFetchBZ = this.hSqlBZ.FetchNext();
											while (this.nFetchBZ != Sys.FETCH_EOF) 
											{
												if (this.dtBZZahlDat < this.dtBZvon) 
												{
												}
												else if (this.dtBZbis < this.dtBZSeit) 
												{
												}
												else
												{
													if (this.dtBZZahlDat <= this.dtBZbis) 
													{
														this.dtBZbis = Int.PalAddDay(this.dtBZZahlDat, -1);
													}
													if (this.dtBZvon < this.dtBZSeit) 
													{
														this.dtBZvon = this.dtBZSeit;
													}
													this.nBZTage = Int.PalTage(this.dtBZvon, this.dtBZbis, false);
													this.nBZZinsEuro = this.nBZZinsEuro + (this.nBZRest * (this.nBZTage / 365) * this.nBZZins).Round() / 100;
												}

												this.nFetchBZ = this.hSqlBZ.FetchNext();
											}

											// Set strZINS[nCountZINS] = '01ZINS ' || PalNullen(nCountZINS+1,2) || PalNullen(nCount1,2) || ' 0000' || PalNullen(0,5) || ' ' || PalNullen(0,5) ||
											// PalDateToStrJJMMTT(PalAddDay(dtBZRechDat,30)) || PalDateToStrJJMMTT(PalAddDay(dtBZZahlDat,-1)) || PalLF('',10) || '3' || PalStrNullen(SalNumberToStrX(nBZZinsEuro*100,0),10) ||
											// PalLF('',68)
											// Set nCountZINS = nCountZINS + 1
											// Set nBZZinsEuro = 0
											// Hochsetzen für nächsten Datensatz
											this.dtBZSeit = this.dtBZZahlDat;
											this.nBZRest = this.nBZRest - this.nBZZahl;
											this.nFetchEDA2 = this.hSqlEDA2.FetchNext();
										}
										// Zinsen für Zeitraum von letzter Zahlung bis heute
										this.hSqlBZ.PrepareAndExecute(@"SELECT bzvon, bzbis, bzzins INTO :frmEDA.dtBZvon, :frmEDA.dtBZbis, :frmEDA.nBZZins
FROM bz ORDER BY bzvon, bzbis");
										this.nFetchBZ = this.hSqlBZ.FetchNext();
										while (this.nFetchBZ != Sys.FETCH_EOF) 
										{
											if (SalDateTime.Current < this.dtBZvon) 
											{
											}
											else if (this.dtBZbis < this.dtBZSeit) 
											{
											}
											else
											{
												if (SalDateTime.Current <= this.dtBZbis) 
												{
													this.dtBZbis = Int.PalAddDay(SalDateTime.Current, -1);
												}
												if (this.dtBZvon < this.dtBZSeit) 
												{
													this.dtBZvon = this.dtBZSeit;
												}
												this.nBZTage = Int.PalTage(this.dtBZvon, this.dtBZbis, false);
												this.nBZZinsEuro = this.nBZZinsEuro + (this.nBZRest * (this.nBZTage / 365) * this.nBZZins).Round() / 100;
											}

											this.nFetchBZ = this.hSqlBZ.FetchNext();
										}
										// berechnete Zinsen bis heute
										// Set strZINS[nCountZINS] = '01ZINS ' || PalNullen(nCountZINS+1,2) || PalNullen(nCount1,2) || ' 0000' || PalNullen(0,5) || ' ' || PalNullen(0,5) ||
										// PalDateToStrJJMMTT(dtBZSeit) || PalDateToStrJJMMTT(PalAddDay(SalDateCurrent(),-1)) || PalLF('',10) || '3' || PalStrNullen(SalNumberToStrX(nBZZinsEuro*100,0),10) ||
										// PalLF('',68)
										// Set nCountZINS = nCountZINS + 1
										// und die noch kommenden Zinsen wie üblich
										// 09.07.12 Ä553 EDA 4.00
										// Set strZINS[nCountZINS] = '01ZINS ' || PalNullen(nCountZINS+1,2) || PalNullen(nCount1,2) || ' 0000' || PalStrNullen(SalNumberToStrX(nZISATZ*1000,0),5) || '1' || PalStrNullen(SalNumberToStrX(nZIDI*1000,0),5) ||
										// PalDateToStrJJMMTT(SalDateCurrent()) || '      ' || PalLF('',10) || '0' ||
										// PalLF('',78)
										if (this.nZIDI == 0) 
										{
											Var.strDummy1 = Int.PalStrNullen((this.nZISATZ * 1000).ToString(0), 5) + "F";
										}
										else
										{
											Var.strDummy1 = Int.PalStrNullen((this.nZIDI * 1000).ToString(0), 5) + "B";
										}
                                        // 11.04.24 F5099
                                        // Call PalMBZINS(hFile, '01ZINS 00' || strDummy1|| '1' || PalDateToStrJJMMTT(PalAddDay(dtDat,30)) || '      ' || PalLF('',100))
                                        this.PalMBZINS(this.hFile, "01ZINS 00" + Var.strDummy1 + "1" + Int.PalDateToStrJJMMTT(SalDateTime.Current) + "      " + Int.PalLF("", 100));

                                        this.nCountZINS = this.nCountZINS + 1;
									}

									this.nFetchEDA1 = this.hSqlEDA1.FetchNext();
								}
								this.hSqlEDA1.Commit();

								// 14.09.06 Ä8
								// berechnete Zinsen bis heute
								if (this.nBZZinsEuro > 0) 
								{
									this.strDate = this.dtRueckstZinsVon.ToString();
									this.strJJMMTTv = this.strDate.Mid(2, 2) + this.strDate.Mid(5, 2) + this.strDate.Mid(8, 2);
									this.strDate = this.dtRueckstZinsBis.ToString();
									this.strJJMMTTb = this.strDate.Mid(2, 2) + this.strDate.Mid(5, 2) + this.strDate.Mid(8, 2);
									// 11.01.10 OTF363 + If dtRueckstZinsBis >= dtRueckstZinsVon
									if (this.dtRueckstZinsBis >= this.dtRueckstZinsVon) 
									{
										this.PalMBKA(this.hFile, 46, "rückständige Zinsen", "", this.strJJMMTTv, this.strJJMMTTb, this.nBZZinsEuro);
									}
									// Set strZINS[nCountZINS] = '01ZINS ' || PalNullen(nCountZINS+1,2) || PalNullen(nCount1,2) || ' 0000' || PalNullen(0,5) || ' ' || PalNullen(0,5) ||
									// PalDateToStrJJMMTT(dtBZSeit) || PalDateToStrJJMMTT(PalAddDay(SalDateCurrent(),-1)) || PalLF('',10) || '3' || PalStrNullen(SalNumberToStrX(nBZZinsEuro*100,0),10) ||
									// PalLF('',68)
								}
								// 09.07.12 Ä553 auskommentiert
								// Set nCount1 = 0
								// While nCount1 < nCountZINS
								// Call PalMBZINS(hFile, strZINS[nCount1])
								// Set nCount1 = nCount1 + 1

								// If nZinsProz <= 8
								// Call PalMBZINS(hFile, 0, 5)
								// Else
								// Call PalMBZINS(hFile, nZinsProz, 0)
								// 16.04.07 F156
								// Call PalMBAUSL(hFile, 11.9, 'Auslagen des Tierarztes', nDMMahn)
								Int.SqlImmedSel("SELECT badm1+badm3 INTO :frmEDA.nMBGeb FROM ba WHERE banr=1");
								// 30.06.20 Ä1892
								if (this.dtMBDatum >= new SalDateTime(2020, 7, 1) && this.dtMBDatum <= new SalDateTime(2020, 12, 31)) 
								{
									this.nMBGeb = (this.nMBGeb * 116 / 119 * 100).Round() / 100;
								}

								this.PalMBAUSL(this.hFile, this.nMBGeb, "Auslagen des Tierarztes", this.nDMMahn);

								// Set nNebenford = nDMMahn + 11.9	! DM 23.2
								// Set nMaxNebenko = 99999999
								// Update PR 05.10.99
								// Set nDMHF = nHF1 + nHF2 + nHF3 + nHF4  + nHF5 + nHF6
								Int.SqlImmed(@"UPDATE pr SET prdmhf = :frmEDA.nDMHF, prdmmahn =  :frmEDA.nDMMahn
WHERE prnr = :frmEDA.nMBNr");
								Int.SqlImmed(@"UPDATE pre SET predisknr = :frmEDA.nDiskNr
WHERE preproznr = :frmEDA.nMBNr");
							}
							this.nFetchEDA = this.hSqlEDA.FetchNext();
						}
					}
					this.hSqlEDA.Commit();
					this.hSqlBZ.Disconnect();
					this.hSqlEDA2.Disconnect();
					this.hSqlEDA1.Disconnect();
					this.hSqlEDA.Disconnect();
					this.PalBB(this.hFile);

					this.PalClose(this.hFile);
				}
				if (this.strPArt == "VB")  // 11.12.17 Ä1662
				{
					Sal.WaitCursor(true);
					// 29.05.07 F176
					// If cbTest
					// Set hFile = PalOpen('A:\\JT.DTA')
					// Else
					// Set hFile = PalOpen('A:\\JM.DTA')
					if (this.cbTest.Checked) 
					{
						this.strFile = Const.PATH_EDA + "JT" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					else
					{
						this.strFile = Const.PATH_EDA + "JM" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					this.hFile = this.PalOpen(this.strFile);

					this.PalAA(this.hFile, "08", this.dfBez.Text);

					this.strSelect = @"
SELECT prarztnr, mbkproznr, mbkaz, mbkdmvb, preazb, preazc, preazd,
preaggm,
preaganra, preagn1a, preagn2a, preagn3a, preagrfa, preagsha, preagplza, preagoa, preagala, prepgma, prepgplza, prepgoa,
preaganrb, preagn1b, preagn2b, preagn3b, preagrfb, preagshb, preagplzb, preagob, preagalb, prepgmb, prepgplzb, prepgob,
preaganrc, preagn1c, preagn2c, preagn3c, preagrfc, preagshc, preagplzc, preagoc, preagalc, prepgmc, prepgplzc, prepgoc,
preaganrd, preagn1d, preagn2d, preagn3d, preagrfd, preagshd, preagplzd, preagod, preagald, prepgmd, prepgplzd, prepgod,
preaggvfua, preaggvvna, preaggvsha, preaggvplza, preaggvoa, preaggvala,
preaggvfub, preaggvvnb, preaggvshb, preaggvplzb, preaggvob, preaggvalb,
preaggvfuc, preaggvvnc, preaggvshc, preaggvplzc, preaggvoc, preaggvalc,
preaggvfud, preaggvvnd, preaggvshd, preaggvplzd, preaggvod, preaggvald,
preaggvfua2, preaggvvna2, preaggvsha2, preaggvplza2, preaggvoa2, preaggvala2,
preaggvfub2, preaggvvnb2, preaggvshb2, preaggvplzb2, preaggvob2, preaggvalb2,
preaggvfuc2, preaggvvnc2, preaggvshc2, preaggvplzc2, preaggvoc2, preaggvalc2,
preaggvfud2, preaggvvnd2, preaggvshd2, preaggvplzd2, preaggvod2, preaggvald2,
preaggvfua3, preaggvvna3, preaggvsha3, preaggvplza3, preaggvoa3, preaggvala3,
preaggvfub3, preaggvvnb3, preaggvshb3, preaggvplzb3, preaggvob3, preaggvalb3,
preaggvfuc3, preaggvvnc3, preaggvshc3, preaggvplzc3, preaggvoc3, preaggvalc3,
preaggvfud3, preaggvvnd3, preaggvshd3, preaggvplzd3, preaggvod3, preaggvald3,
preaggvfua4, preaggvvna4, preaggvsha4, preaggvplza4, preaggvoa4, preaggvala4,
preaggvfub4, preaggvvnb4, preaggvshb4, preaggvplzb4, preaggvob4, preaggvalb4,
preaggvfuc4, preaggvvnc4, preaggvshc4, preaggvplzc4, preaggvoc4, preaggvalc4,
preaggvfud4, preaggvvnd4, preaggvshd4, preaggvplzd4, preaggvod4, preaggvald4
INTO :nTANr, :nProzNr, :ASGZ, :VBSKOBET, :frmEDA.PREAZB, :frmEDA.PREAZC, :frmEDA.PREAZD,
:frmEDA.PREAGGM,
:frmEDA.PREAGANRA, :frmEDA.PREAGN1A, :frmEDA.PREAGN2A, :frmEDA.PREAGN3A, :frmEDA.PREAGRFA, :frmEDA.PREAGSHA, :frmEDA.PREAGPLZA, :frmEDA.PREAGOA, :frmEDA.PREAGALA,
:frmEDA.PREPGMA, :frmEDA.PREPGPLZA, :frmEDA.PREPGOA,
:frmEDA.PREAGANRB, :frmEDA.PREAGN1B, :frmEDA.PREAGN2B, :frmEDA.PREAGN3B, :frmEDA.PREAGRFB, :frmEDA.PREAGSHB, :frmEDA.PREAGPLZB, :frmEDA.PREAGOB, :frmEDA.PREAGALB,
:frmEDA.PREPGMB, :frmEDA.PREPGPLZB, :frmEDA.PREPGOB,
:frmEDA.PREAGANRC, :frmEDA.PREAGN1C, :frmEDA.PREAGN2C, :frmEDA.PREAGN3C, :frmEDA.PREAGRFC, :frmEDA.PREAGSHC, :frmEDA.PREAGPLZC, :frmEDA.PREAGOC, :frmEDA.PREAGALC,
:frmEDA.PREPGMC, :frmEDA.PREPGPLZC, :frmEDA.PREPGOC,
:frmEDA.PREAGANRD, :frmEDA.PREAGN1D, :frmEDA.PREAGN2D, :frmEDA.PREAGN3D, :frmEDA.PREAGRFD, :frmEDA.PREAGSHD, :frmEDA.PREAGPLZD, :frmEDA.PREAGOD, :frmEDA.PREAGALD,
:frmEDA.PREPGMD, :frmEDA.PREPGPLZD, :frmEDA.PREPGOD,
:frmEDA.PREAGGVFUa, :frmEDA.PREAGGVVNa, :frmEDA.PREAGGVSHa, :frmEDA.PREAGGVPLZa, :frmEDA.PREAGGVOa, :frmEDA.PREAGGVALa,
:frmEDA.PREAGGVFUb, :frmEDA.PREAGGVVNb, :frmEDA.PREAGGVSHb, :frmEDA.PREAGGVPLZb, :frmEDA.PREAGGVOb, :frmEDA.PREAGGVALb,
:frmEDA.PREAGGVFUc, :frmEDA.PREAGGVVNc, :frmEDA.PREAGGVSHc, :frmEDA.PREAGGVPLZc, :frmEDA.PREAGGVOc, :frmEDA.PREAGGVALc,
:frmEDA.PREAGGVFUd, :frmEDA.PREAGGVVNd, :frmEDA.PREAGGVSHd, :frmEDA.PREAGGVPLZd, :frmEDA.PREAGGVOd, :frmEDA.PREAGGVALd,
:frmEDA.PREAGGVFUa2, :frmEDA.PREAGGVVNa2, :frmEDA.PREAGGVSHa2, :frmEDA.PREAGGVPLZa2, :frmEDA.PREAGGVOa2, :frmEDA.PREAGGVALa2,
:frmEDA.PREAGGVFUb2, :frmEDA.PREAGGVVNb2, :frmEDA.PREAGGVSHb2, :frmEDA.PREAGGVPLZb2, :frmEDA.PREAGGVOb2, :frmEDA.PREAGGVALb2,
:frmEDA.PREAGGVFUc2, :frmEDA.PREAGGVVNc2, :frmEDA.PREAGGVSHc2, :frmEDA.PREAGGVPLZc2, :frmEDA.PREAGGVOc2, :frmEDA.PREAGGVALc2,
:frmEDA.PREAGGVFUd2, :frmEDA.PREAGGVVNd2, :frmEDA.PREAGGVSHd2, :frmEDA.PREAGGVPLZd2, :frmEDA.PREAGGVOd2, :frmEDA.PREAGGVALd2,
:frmEDA.PREAGGVFUa3, :frmEDA.PREAGGVVNa3, :frmEDA.PREAGGVSHa3, :frmEDA.PREAGGVPLZa3, :frmEDA.PREAGGVOa3, :frmEDA.PREAGGVALa3,
:frmEDA.PREAGGVFUb3, :frmEDA.PREAGGVVNb3, :frmEDA.PREAGGVSHb3, :frmEDA.PREAGGVPLZb3, :frmEDA.PREAGGVOb3, :frmEDA.PREAGGVALb3,
:frmEDA.PREAGGVFUc3, :frmEDA.PREAGGVVNc3, :frmEDA.PREAGGVSHc3, :frmEDA.PREAGGVPLZc3, :frmEDA.PREAGGVOc3, :frmEDA.PREAGGVALc3,
:frmEDA.PREAGGVFUd3, :frmEDA.PREAGGVVNd3, :frmEDA.PREAGGVSHd3, :frmEDA.PREAGGVPLZd3, :frmEDA.PREAGGVOd3, :frmEDA.PREAGGVALd3,
:frmEDA.PREAGGVFUa4, :frmEDA.PREAGGVVNa4, :frmEDA.PREAGGVSHa4, :frmEDA.PREAGGVPLZa4, :frmEDA.PREAGGVOa4, :frmEDA.PREAGGVALa4,
:frmEDA.PREAGGVFUb4, :frmEDA.PREAGGVVNb4, :frmEDA.PREAGGVSHb4, :frmEDA.PREAGGVPLZb4, :frmEDA.PREAGGVOb4, :frmEDA.PREAGGVALb4,
:frmEDA.PREAGGVFUc4, :frmEDA.PREAGGVVNc4, :frmEDA.PREAGGVSHc4, :frmEDA.PREAGGVPLZc4, :frmEDA.PREAGGVOc4, :frmEDA.PREAGGVALc4,
:frmEDA.PREAGGVFUd4, :frmEDA.PREAGGVVNd4, :frmEDA.PREAGGVSHd4, :frmEDA.PREAGGVPLZd4, :frmEDA.PREAGGVOd4, :frmEDA.PREAGGVALd4
FROM mbk,h,a, pre, pr
WHERE prarztnr=harztnr and prhalternr=hhalternr
AND prarztnr=aarztnr AND prnr = preproznr
AND mbkproznr=preproznr AND mbkuser = :strBNUser AND mbktyp = :frmEDA.strPArt AND hdeaktiv IS NULL
ORDER BY mbkproznr";
					Sal.WaitCursor(true);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA1);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA2);
					Var.bOK = Int.SqlConnection(ref this.hSqlBZ);
					Var.bOK = Int.SqlHandleExec(this.hSqlEDA, this.strSelect, "EDA Datei erstellen", ref Var.nErr) == Sys.IDOK;
					if (Var.bOK) 
					{
						this.nFetchEDA = this.hSqlEDA.FetchNext();
						while (this.nFetchEDA != Sys.FETCH_EOF) 
						{
							// 14.09.06 Ä8
							if (this.nZinsProz <= 8) 
							{
								this.nZISATZ = 0;
								// 26.01.07 A6
								if (this.nZinsProz < 0) 
								{
									this.nZIDI = this.nZinsProz.Abs();
								}
								else
								{
									this.nZIDI = 5;
								}
							}
							else
							{
								this.nZISATZ = this.nZinsProz;
								this.nZIDI = 0;
							}

							Var.nDummyHaben = 0;
							this.VBZAD1 = SalDateTime.Null;
							this.VBZABET1 = SalNumber.Null;
							this.VBZAD2 = SalDateTime.Null;
							this.VBZABET2 = SalNumber.Null;
							this.VBZAD3 = SalDateTime.Null;
							this.VBZABET3 = SalNumber.Null;
							this.VBZAD4 = SalDateTime.Null;
							this.VBZABET4 = SalNumber.Null;
							this.VBZAD5 = SalDateTime.Null;
							this.VBZABET5 = SalNumber.Null;
							this.VBZAD6 = SalDateTime.Null;
							this.VBZABET6 = SalNumber.Null;
							this.VBZAD7 = SalDateTime.Null;
							this.VBZABET7 = SalNumber.Null;
							this.VBZAD8 = SalDateTime.Null;
							this.VBZABET8 = SalNumber.Null;
							this.VBZAD9 = SalDateTime.Null;
							this.VBZABET9 = SalNumber.Null;
							this.VBZAD10 = SalDateTime.Null;
							this.VBZABET10 = SalNumber.Null;
							this.VBZAD11 = SalDateTime.Null;
							this.VBZABET11 = SalNumber.Null;
							this.VBZAD12 = SalDateTime.Null;
							this.VBZABET12 = SalNumber.Null;
							this.nZahlBetrag = 0;
							this.nZahlPRNr = this.nProzNr;
							Int.SqlImmedSel("SELECT sum(zadm) INTO :frmEDA.nZahlBetrag FROM za WHERE zaproznr= :frmEDA.nZahlPRNr AND zakz < 4 AND zadeaktiv IS NULL");
							if (this.nZahlBetrag > 0) 
							{
								this.VBZAM = 2;

								// 28.08.18 Ä1770
								// Set bOK = (SqlHandleExec(hSqlEDA1, 'SELECT zabuchdat, zadm INTO :VBZAD, :VBZABET FROM za WHERE zaproznr= :frmEDA.nZahlPRNr AND zakz < 4 ORDER BY zabuchdat','Zahlungen ermitteln für EDA-VBs', nErr) = IDOK)
								Var.bOK = Int.SqlHandleExec(this.hSqlEDA1, @"SELECT zabuchdat, SUM( zadm ) INTO :VBZAD, :VBZABET FROM za
WHERE zaproznr= :frmEDA.nZahlPRNr AND zakz < 4 AND zadeaktiv IS NULL GROUP BY 1", "Zahlungen ermitteln für EDA-VBs", ref Var.nErr) == Sys.IDOK;

								if (Var.bOK) 
								{
									this.nFetchEDA1 = this.hSqlEDA1.FetchNext();
									while (this.nFetchEDA1 != Sys.FETCH_EOF) 
									{
										if (this.VBZAD1 == SalDateTime.Null) 
										{
											this.VBZAD1 = this.VBZAD;
											this.VBZABET1 = this.VBZABET;
										}
										else if (this.VBZAD2 == SalDateTime.Null) 
										{
											this.VBZAD2 = this.VBZAD;
											this.VBZABET2 = this.VBZABET;
										}
										else if (this.VBZAD3 == SalDateTime.Null) 
										{
											this.VBZAD3 = this.VBZAD;
											this.VBZABET3 = this.VBZABET;
										}
										else if (this.VBZAD4 == SalDateTime.Null) 
										{
											this.VBZAD4 = this.VBZAD;
											this.VBZABET4 = this.VBZABET;
										}
										else if (this.VBZAD5 == SalDateTime.Null) 
										{
											this.VBZAD5 = this.VBZAD;
											this.VBZABET5 = this.VBZABET;
										}
										else if (this.VBZAD6 == SalDateTime.Null) 
										{
											this.VBZAD6 = this.VBZAD;
											this.VBZABET6 = this.VBZABET;
										}
										else if (this.VBZAD7 == SalDateTime.Null) 
										{
											this.VBZAD7 = this.VBZAD;
											this.VBZABET7 = this.VBZABET;
										}
										else if (this.VBZAD8 == SalDateTime.Null) 
										{
											this.VBZAD8 = this.VBZAD;
											this.VBZABET8 = this.VBZABET;
										}
										else if (this.VBZAD9 == SalDateTime.Null) 
										{
											this.VBZAD9 = this.VBZAD;
											this.VBZABET9 = this.VBZABET;
										}
										else if (this.VBZAD10 == SalDateTime.Null) 
										{
											this.VBZAD10 = this.VBZAD;
											this.VBZABET10 = this.VBZABET;
										}
										else if (this.VBZAD11 == SalDateTime.Null) 
										{
											this.VBZAD11 = this.VBZAD;
											this.VBZABET11 = this.VBZABET;
										}
										else if (this.VBZAD12 == SalDateTime.Null) 
										{
											this.VBZAD12 = this.VBZAD;
											this.VBZABET12 = this.VBZABET;
										}
										this.nFetchEDA1 = this.hSqlEDA1.FetchNext();
									}
									// Call PalVBZAHL(hFile)
								}
								this.hSqlEDA1.Commit();
							}
							else
							{
								this.VBZAM = 1;
							}

							this.SetStatusBarText("Arzt-Nr.: " + this.nTANr.ToString(0));
							// 04.09.06 F50 + And  bExists
							this.PalVBKS(this.hFile, this.ASGZ, this.VBSKOBET);

							if (this.VBZAD1 != SalDateTime.Null || this.VBZAD2 != SalDateTime.Null || this.VBZAD3 != SalDateTime.Null || this.VBZAD4 != SalDateTime.Null || this.VBZAD5 != SalDateTime.Null || this.VBZAD6 != SalDateTime.Null) 
							{
								this.PalVBZAHL(this.hFile);
							}
							this.PalVBAG(this.hFile, this.nProzNr, this.PREAGN1A, this.PREAGN2A, this.PREAGN3A, this.PREAGRFA, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA);
							// 06.09.18 GV raus laut SE und YI
							// If PREAGGVFUa || PREAGGVVNa != ''
							// Call PalVBAGGV(hFile, PREAGGVFUa, PREAGGVVNa, PREAGGVSHa, PREAGGVPLZa, PREAGGVOa, PREAGGVALa)
							// If VBAGGVZFU || VBAGGVZN != ''
							// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
							if (this.VBZAD7 != SalDateTime.Null || this.VBZAD8 != SalDateTime.Null || this.VBZAD9 != SalDateTime.Null || this.VBZAD10 != SalDateTime.Null || this.VBZAD11 != SalDateTime.Null || this.VBZAD12 != SalDateTime.Null) 
							{
								this.PalVBZAHL2(this.hFile);
							}

							// If PREAGGVFUa2 || PREAGGVVNa2 != ''
							// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
							// Call PalVBZAHL( hFile )
							// Call PalVBAG(hFile, nProzNr, PREAGN1A, PREAGN2A, PREAGN3A, PREAGRFA, PREAGSHA, PREAGPLZA, PREAGOA, PREAGALA)
							// Call PalVBAGGV(hFile, PREAGGVFUa2, PREAGGVVNa2, PREAGGVSHa2, PREAGGVPLZa2, PREAGGVOa2, PREAGGVALa2)
							// If VBAGGVZFU || VBAGGVZN != ''
							// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
							// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
							//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
							// Call PalVBZAHL2( hFile )
							// If PREAGGVFUa3 || PREAGGVVNa3 != ''
							// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
							// Call PalVBZAHL( hFile )
							// Call PalVBAG(hFile, nProzNr, PREAGN1A, PREAGN2A, PREAGN3A, PREAGRFA, PREAGSHA, PREAGPLZA, PREAGOA, PREAGALA)
							// Call PalVBAGGV(hFile, PREAGGVFUa3, PREAGGVVNa3, PREAGGVSHa3, PREAGGVPLZa3, PREAGGVOa3, PREAGGVALa3)
							// If VBAGGVZFU || VBAGGVZN != ''
							// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
							// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
							//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
							// Call PalVBZAHL2( hFile )
							// If PREAGGVFUa4 || PREAGGVVNa4 != ''
							// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
							// Call PalVBZAHL( hFile )
							// Call PalVBAG(hFile, nProzNr, PREAGN1A, PREAGN2A, PREAGN3A, PREAGRFA, PREAGSHA, PREAGPLZA, PREAGOA, PREAGALA)
							// Call PalVBAGGV(hFile, PREAGGVFUa4, PREAGGVVNa4, PREAGGVSHa4, PREAGGVPLZa4, PREAGGVOa4, PREAGGVALa4)
							// If VBAGGVZFU || VBAGGVZN != ''
							// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
							// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
							//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
							// Call PalVBZAHL2( hFile )

							if (this.PREAGN1B + this.PREAGN2B + this.PREAGOB != "") 
							{
								this.PalVBKS(this.hFile, this.PREAZB, this.VBSKOBET);
								if (this.VBZAD1 != SalDateTime.Null || this.VBZAD2 != SalDateTime.Null || this.VBZAD3 != SalDateTime.Null || this.VBZAD4 != SalDateTime.Null || this.VBZAD5 != SalDateTime.Null || this.VBZAD6 != SalDateTime.Null) 
								{
									this.PalVBZAHL(this.hFile);
								}
								this.PalVBAG(this.hFile, this.nProzNr, this.PREAGN1B, this.PREAGN2B, this.PREAGN3B, this.PREAGRFB, this.PREAGSHB, this.PREAGPLZB, this.PREAGOB, this.PREAGALB);
								// If PREAGGVFUb || PREAGGVVNb != ''
								// Call PalVBAGGV(hFile, PREAGGVFUb, PREAGGVVNb, PREAGGVSHb, PREAGGVPLZb, PREAGGVOb, PREAGGVALb)
								// If VBAGGVZ2FU || VBAGGVZ2N != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZ2FU, VBAGGVZ2N, VBAGGVZ2SH, VBAGGVZ2PLZ, VBAGGVZ2O, VBAGGVZ2AL)
								if (this.VBZAD7 != SalDateTime.Null || this.VBZAD8 != SalDateTime.Null || this.VBZAD9 != SalDateTime.Null || this.VBZAD10 != SalDateTime.Null || this.VBZAD11 != SalDateTime.Null || this.VBZAD12 != SalDateTime.Null) 
								{
									this.PalVBZAHL2(this.hFile);
								}

								// If PREAGGVFUb2 || PREAGGVVNb2 != ''
								// Call PalVBKS(hFile, PREAZB, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
								// Call PalVBAGGV(hFile, PREAGGVFUb2, PREAGGVVNb2, PREAGGVSHb2, PREAGGVPLZb2, PREAGGVOb2, PREAGGVALb2)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
								// If PREAGGVFUb3 || PREAGGVVNb3 != ''
								// Call PalVBKS(hFile, PREAZB, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
								// Call PalVBAGGV(hFile, PREAGGVFUb3, PREAGGVVNb3, PREAGGVSHb3, PREAGGVPLZb3, PREAGGVOb3, PREAGGVALb3)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
								// If PREAGGVFUb4 || PREAGGVVNb4 != ''
								// Call PalVBKS(hFile, PREAZB, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
								// Call PalVBAGGV(hFile, PREAGGVFUb4, PREAGGVVNb4, PREAGGVSHb4, PREAGGVPLZb4, PREAGGVOb4, PREAGGVALb4)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
							}
							if (this.PREAGN1C + this.PREAGN2C + this.PREAGOC != "") 
							{
								this.PalVBKS(this.hFile, this.PREAZC, this.VBSKOBET);
								if (this.VBZAD1 != SalDateTime.Null || this.VBZAD2 != SalDateTime.Null || this.VBZAD3 != SalDateTime.Null || this.VBZAD4 != SalDateTime.Null || this.VBZAD5 != SalDateTime.Null || this.VBZAD6 != SalDateTime.Null) 
								{
									this.PalVBZAHL(this.hFile);
								}
								this.PalVBAG(this.hFile, this.nProzNr, this.PREAGN1C, this.PREAGN2C, this.PREAGN3C, this.PREAGRFC, this.PREAGSHC, this.PREAGPLZC, this.PREAGOC, this.PREAGALC);
								// If PREAGGVFUc || PREAGGVVNc != ''
								// Call PalVBAGGV(hFile, PREAGGVFUc, PREAGGVVNc, PREAGGVSHc, PREAGGVPLZc, PREAGGVOc, PREAGGVALc)
								// If VBAGGVZ3FU || VBAGGVZ3N != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZ3FU, VBAGGVZ3N, VBAGGVZ3SH, VBAGGVZ3PLZ, VBAGGVZ3O, VBAGGVZ3AL)
								if (this.VBZAD7 != SalDateTime.Null || this.VBZAD8 != SalDateTime.Null || this.VBZAD9 != SalDateTime.Null || this.VBZAD10 != SalDateTime.Null || this.VBZAD11 != SalDateTime.Null || this.VBZAD12 != SalDateTime.Null) 
								{
									this.PalVBZAHL2(this.hFile);
								}

								// If PREAGGVFUc2 || PREAGGVVNc2 != ''
								// Call PalVBKS(hFile, PREAZC, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
								// Call PalVBAGGV(hFile, PREAGGVFUc2, PREAGGVVNc2, PREAGGVSHc2, PREAGGVPLZc2, PREAGGVOc2, PREAGGVALc2)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
								// If PREAGGVFUc3 || PREAGGVVNc3 != ''
								// Call PalVBKS(hFile, PREAZC, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
								// Call PalVBAGGV(hFile, PREAGGVFUc3, PREAGGVVNc3, PREAGGVSHc3, PREAGGVPLZc3, PREAGGVOc3, PREAGGVALc3)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
								// If PREAGGVFUc4 || PREAGGVVNc4 != ''
								// Call PalVBKS(hFile, PREAZC, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
								// Call PalVBAGGV(hFile, PREAGGVFUc4, PREAGGVVNc4, PREAGGVSHc4, PREAGGVPLZc4, PREAGGVOc4, PREAGGVALc4)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
							}
							if (this.PREAGN1D + this.PREAGN2D + this.PREAGOD != "") 
							{
								this.PalVBKS(this.hFile, this.PREAZD, this.VBSKOBET);
								if (this.VBZAD1 != SalDateTime.Null || this.VBZAD2 != SalDateTime.Null || this.VBZAD3 != SalDateTime.Null || this.VBZAD4 != SalDateTime.Null || this.VBZAD5 != SalDateTime.Null || this.VBZAD6 != SalDateTime.Null) 
								{
									this.PalVBZAHL(this.hFile);
								}
								this.PalVBAG(this.hFile, this.nProzNr, this.PREAGN1D, this.PREAGN2D, this.PREAGN3D, this.PREAGRFD, this.PREAGSHD, this.PREAGPLZD, this.PREAGOD, this.PREAGALD);
								// If PREAGGVFUd || PREAGGVVNd != ''
								// Call PalVBAGGV(hFile, PREAGGVFUd, PREAGGVVNd, PREAGGVSHd, PREAGGVPLZd, PREAGGVOd, PREAGGVALd)
								// If VBAGGVZ4FU || VBAGGVZ4N != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZ4FU, VBAGGVZ4N, VBAGGVZ4SH, VBAGGVZ4PLZ, VBAGGVZ4O, VBAGGVZ4AL)
								if (this.VBZAD7 != SalDateTime.Null || this.VBZAD8 != SalDateTime.Null || this.VBZAD9 != SalDateTime.Null || this.VBZAD10 != SalDateTime.Null || this.VBZAD11 != SalDateTime.Null || this.VBZAD12 != SalDateTime.Null) 
								{
									this.PalVBZAHL2(this.hFile);
								}

								// If PREAGGVFUd2 || PREAGGVVNd2 != ''
								// Call PalVBKS(hFile, PREAZD, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1D, PREAGN2D, PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
								// Call PalVBAGGV(hFile, PREAGGVFUd2, PREAGGVVNd2, PREAGGVSHd2, PREAGGVPLZd2, PREAGGVOd2, PREAGGVALd2)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
								// If PREAGGVFUd3 || PREAGGVVNd3 != ''
								// Call PalVBKS(hFile, PREAZD, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1D, PREAGN2D, PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
								// Call PalVBAGGV(hFile, PREAGGVFUd3, PREAGGVVNd3, PREAGGVSHd3, PREAGGVPLZd3, PREAGGVOd3, PREAGGVALd3)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
								// If PREAGGVFUd4 || PREAGGVVNd4 != ''
								// Call PalVBKS(hFile, PREAZD, VBSKOBET)
								// If VBZAD1 != DATETIME_Null or VBZAD2 != DATETIME_Null or VBZAD3 != DATETIME_Null or VBZAD4 != DATETIME_Null or VBZAD5 != DATETIME_Null or VBZAD6 != DATETIME_Null
								// Call PalVBZAHL( hFile )
								// Call PalVBAG(hFile, nProzNr, PREAGN1D, PREAGN2D, PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
								// Call PalVBAGGV(hFile, PREAGGVFUd4, PREAGGVVNd4, PREAGGVSHd4, PREAGGVPLZd4, PREAGGVOd4, PREAGGVALd4)
								// If VBAGGVZFU || VBAGGVZN != ''
								// Call PalVBAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)
								// If VBZAD7 != DATETIME_Null or VBZAD8 != DATETIME_Null or VBZAD9 != DATETIME_Null or VBZAD10 != DATETIME_Null
								//  or VBZAD11 != DATETIME_Null or VBZAD12 != DATETIME_Null
								// Call PalVBZAHL2( hFile )
							}

							Int.SqlImmed("UPDATE pre SET predisknr = :frmEDA.nDiskNr WHERE preproznr = :frmEDA.nProzNr");

							this.nFetchEDA = this.hSqlEDA.FetchNext();
						}
					}
					this.hSqlEDA.Commit();
					this.hSqlBZ.Disconnect();
					this.hSqlEDA2.Disconnect();
					this.hSqlEDA1.Disconnect();
					this.hSqlEDA.Disconnect();
					this.PalBB(this.hFile);

					this.PalClose(this.hFile);
				}
				if (this.strPArt == "MBNeu")  // 19.12.17 Ä1662
				{
					Sal.WaitCursor(true);
					// 29.05.07 F176
					// If cbTest
					// Set hFile = PalOpen('A:\\JT.DTA')
					// Else
					// Set hFile = PalOpen('A:\\JM.DTA')
					if (this.cbTest.Checked) 
					{
						this.strFile = Const.PATH_EDA + "JT" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					else
					{
						this.strFile = Const.PATH_EDA + "JM" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					this.hFile = this.PalOpen(this.strFile);
					// 20.07.18 08 -> 07
					this.PalAA(this.hFile, "07", this.dfBez.Text);

					// Set strSelect = '
					// SELECT mbkproznr, mbkaz, prarztnr, prhalternr, preazb, preazc, preazd,
					// preaganra, preagn1a, preagn2a, preagn3a, preagrfa, preagsha, preagplza, preagoa, preagala, prepgma, prepgplza, prepgoa,
					// preaganrb, preagn1b, preagn2b, preagn3b, preagrfb, preagshb, preagplzb, preagob, preagalb, prepgmb, prepgplzb, prepgob,
					// preaganrc, preagn1c, preagn2c, preagn3c, preagrfc, preagshc, preagplzc, preagoc, preagalc, prepgmc, prepgplzc, prepgoc,
					// preaganrd, preagn1d, preagn2d, preagn3d, preagrfd, preagshd, preagplzd, preagod, preagald, prepgmd, prepgplzd, prepgod,
					// preaggvfua, preaggvvna, preaggvsha, preaggvplza, preaggvoa, preaggvala,
					// preaggvfub, preaggvvnb, preaggvshb, preaggvplzb, preaggvob, preaggvalb,
					// preaggvfuc, preaggvvnc, preaggvshc, preaggvplzc, preaggvoc, preaggvalc,
					// preaggvfud, preaggvvnd, preaggvshd, preaggvplzd, preaggvod, preaggvald,
					// preaggvfua2, preaggvvna2, preaggvsha2, preaggvplza2, preaggvoa2, preaggvala2,
					// preaggvfub2, preaggvvnb2, preaggvshb2, preaggvplzb2, preaggvob2, preaggvalb2,
					// preaggvfuc2, preaggvvnc2, preaggvshc2, preaggvplzc2, preaggvoc2, preaggvalc2,
					// preaggvfud2, preaggvvnd2, preaggvshd2, preaggvplzd2, preaggvod2, preaggvald2,
					// preaggvfua3, preaggvvna3, preaggvsha3, preaggvplza3, preaggvoa3, preaggvala3,
					// preaggvfub3, preaggvvnb3, preaggvshb3, preaggvplzb3, preaggvob3, preaggvalb3,
					// preaggvfuc3, preaggvvnc3, preaggvshc3, preaggvplzc3, preaggvoc3, preaggvalc3,
					// preaggvfud3, preaggvvnd3, preaggvshd3, preaggvplzd3, preaggvod3, preaggvald3,
					// preaggvfua4, preaggvvna4, preaggvsha4, preaggvplza4, preaggvoa4, preaggvala4,
					// preaggvfub4, preaggvvnb4, preaggvshb4, preaggvplzb4, preaggvob4, preaggvalb4,
					// preaggvfuc4, preaggvvnc4, preaggvshc4, preaggvplzc4, preaggvoc4, preaggvalc4,
					// preaggvfud4, preaggvvnd4, preaggvshd4, preaggvplzd4, preaggvod4, preaggvald4
					// INTO :frmEDA.nProzNr, :ASGZ, :nTANr, :nTHNr, :frmEDA.PREAZB, :frmEDA.PREAZC, :frmEDA.PREAZD,
					// :frmEDA.PREAGANRA, :frmEDA.PREAGN1A, :frmEDA.PREAGN2A, :frmEDA.PREAGN3A, :frmEDA.PREAGRFA, :frmEDA.PREAGSHA, :frmEDA.PREAGPLZA, :frmEDA.PREAGOA, :frmEDA.PREAGALA,
					// :frmEDA.PREPGMA, :frmEDA.PREPGPLZA, :frmEDA.PREPGOA,
					// :frmEDA.PREAGANRB, :frmEDA.PREAGN1B, :frmEDA.PREAGN2B, :frmEDA.PREAGN3B, :frmEDA.PREAGRFB, :frmEDA.PREAGSHB, :frmEDA.PREAGPLZB, :frmEDA.PREAGOB, :frmEDA.PREAGALB,
					// :frmEDA.PREPGMB, :frmEDA.PREPGPLZB, :frmEDA.PREPGOB,
					// :frmEDA.PREAGANRC, :frmEDA.PREAGN1C, :frmEDA.PREAGN2C, :frmEDA.PREAGN3C, :frmEDA.PREAGRFC, :frmEDA.PREAGSHC, :frmEDA.PREAGPLZC, :frmEDA.PREAGOC, :frmEDA.PREAGALC,
					// :frmEDA.PREPGMC, :frmEDA.PREPGPLZC, :frmEDA.PREPGOC,
					// :frmEDA.PREAGANRD, :frmEDA.PREAGN1D, :frmEDA.PREAGN2D, :frmEDA.PREAGN3D, :frmEDA.PREAGRFD, :frmEDA.PREAGSHD, :frmEDA.PREAGPLZD, :frmEDA.PREAGOD, :frmEDA.PREAGALD,
					// :frmEDA.PREPGMD, :frmEDA.PREPGPLZD, :frmEDA.PREPGOD,
					// :frmEDA.PREAGGVFUa, :frmEDA.PREAGGVVNa, :frmEDA.PREAGGVSHa, :frmEDA.PREAGGVPLZa, :frmEDA.PREAGGVOa, :frmEDA.PREAGGVALa,
					// :frmEDA.PREAGGVFUb, :frmEDA.PREAGGVVNb, :frmEDA.PREAGGVSHb, :frmEDA.PREAGGVPLZb, :frmEDA.PREAGGVOb, :frmEDA.PREAGGVALb,
					// :frmEDA.PREAGGVFUc, :frmEDA.PREAGGVVNc, :frmEDA.PREAGGVSHc, :frmEDA.PREAGGVPLZc, :frmEDA.PREAGGVOc, :frmEDA.PREAGGVALc,
					// :frmEDA.PREAGGVFUd, :frmEDA.PREAGGVVNd, :frmEDA.PREAGGVSHd, :frmEDA.PREAGGVPLZd, :frmEDA.PREAGGVOd, :frmEDA.PREAGGVALd,
					// :frmEDA.PREAGGVFUa2, :frmEDA.PREAGGVVNa2, :frmEDA.PREAGGVSHa2, :frmEDA.PREAGGVPLZa2, :frmEDA.PREAGGVOa2, :frmEDA.PREAGGVALa2,
					// :frmEDA.PREAGGVFUb2, :frmEDA.PREAGGVVNb2, :frmEDA.PREAGGVSHb2, :frmEDA.PREAGGVPLZb2, :frmEDA.PREAGGVOb2, :frmEDA.PREAGGVALb2,
					// :frmEDA.PREAGGVFUc2, :frmEDA.PREAGGVVNc2, :frmEDA.PREAGGVSHc2, :frmEDA.PREAGGVPLZc2, :frmEDA.PREAGGVOc2, :frmEDA.PREAGGVALc2,
					// :frmEDA.PREAGGVFUd2, :frmEDA.PREAGGVVNd2, :frmEDA.PREAGGVSHd2, :frmEDA.PREAGGVPLZd2, :frmEDA.PREAGGVOd2, :frmEDA.PREAGGVALd2,
					// :frmEDA.PREAGGVFUa3, :frmEDA.PREAGGVVNa3, :frmEDA.PREAGGVSHa3, :frmEDA.PREAGGVPLZa3, :frmEDA.PREAGGVOa3, :frmEDA.PREAGGVALa3,
					// :frmEDA.PREAGGVFUb3, :frmEDA.PREAGGVVNb3, :frmEDA.PREAGGVSHb3, :frmEDA.PREAGGVPLZb3, :frmEDA.PREAGGVOb3, :frmEDA.PREAGGVALb3,
					// :frmEDA.PREAGGVFUc3, :frmEDA.PREAGGVVNc3, :frmEDA.PREAGGVSHc3, :frmEDA.PREAGGVPLZc3, :frmEDA.PREAGGVOc3, :frmEDA.PREAGGVALc3,
					// :frmEDA.PREAGGVFUd3, :frmEDA.PREAGGVVNd3, :frmEDA.PREAGGVSHd3, :frmEDA.PREAGGVPLZd3, :frmEDA.PREAGGVOd3, :frmEDA.PREAGGVALd3,
					// :frmEDA.PREAGGVFUa4, :frmEDA.PREAGGVVNa4, :frmEDA.PREAGGVSHa4, :frmEDA.PREAGGVPLZa4, :frmEDA.PREAGGVOa4, :frmEDA.PREAGGVALa4,
					// :frmEDA.PREAGGVFUb4, :frmEDA.PREAGGVVNb4, :frmEDA.PREAGGVSHb4, :frmEDA.PREAGGVPLZb4, :frmEDA.PREAGGVOb4, :frmEDA.PREAGGVALb4,
					// :frmEDA.PREAGGVFUc4, :frmEDA.PREAGGVVNc4, :frmEDA.PREAGGVSHc4, :frmEDA.PREAGGVPLZc4, :frmEDA.PREAGGVOc4, :frmEDA.PREAGGVALc4,
					// :frmEDA.PREAGGVFUd4, :frmEDA.PREAGGVVNd4, :frmEDA.PREAGGVSHd4, :frmEDA.PREAGGVPLZd4, :frmEDA.PREAGGVOd4, :frmEDA.PREAGGVALd4
					// FROM mbk,h,a, pre, pr
					// WHERE prarztnr=harztnr and prhalternr=hhalternr
					// AND prarztnr=aarztnr AND prnr = preproznr
					// AND mbkproznr=preproznr AND mbkuser = :strBNUser AND mbktyp = :frmEDA.strPArt
					// ORDER BY mbkproznr'
					// 28.08.18 F3231 +, mbkpgm, mbkpgplz, mbkpgo
					this.strSelect = @"
SELECT mbkproznr, mbkaz, prarztnr, prhalternr,
mbkhname1, mbkhname2, mbkhstr, mbkagplz, mbkhort, mbkagal, mbkhrf,
mbkgvzfu, mbkgvzn, mbkgvzsh, mbkgvzplz, mbkgvzo, mbkgvzal,
mbkskobet, mbkskobeg, mbkausk, mbkpgm, mbkpgplz, mbkpgo
INTO :frmEDA.nProzNr, :ASGZ, :nTANr, :nTHNr,
:frmEDA.PREAGN1A, :frmEDA.PREAGN2A, :frmEDA.PREAGSHA, :frmEDA.PREAGPLZA, :frmEDA.PREAGOA, :frmEDA.PREAGALA, :frmEDA.PREAGRFA,
:frmEDA.VBAGGVZFU, :frmEDA.VBAGGVZN, :frmEDA.VBAGGVZSH, :frmEDA.VBAGGVZPLZ, :frmEDA.VBAGGVZO, :frmEDA.VBAGGVZAL,
:frmEDA.MBNeuSKOBET, :frmEDA.MBNeuSKOBEG, :frmEDA.MBNeuAUSK,
:frmEDA.MBNeuPGM, :frmEDA.MBNeuPGPLZ, :frmEDA.MBNeuPGO
FROM mbk, pr
WHERE mbkproznr = prnr
AND mbkuser = :strBNUser AND mbktyp = :frmEDA.strPArt
ORDER BY mbkproznr";
					Sal.WaitCursor(true);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA1);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA2);
					Var.bOK = Int.SqlConnection(ref this.hSqlBZ);
					Var.bOK = Int.SqlHandleExec(this.hSqlEDA, this.strSelect, "EDA Datei erstellen", ref Var.nErr) == Sys.IDOK;
					if (Var.bOK) 
					{
						this.nFetchEDA = this.hSqlEDA.FetchNext();
						while (this.nFetchEDA != Sys.FETCH_EOF) 
						{
							this.SetStatusBarText("Arzt-Nr.: " + this.nTANr.ToString(0));
							// 04.09.06 F50 + And  bExists
							this.PalMBNeuKS(this.hFile, this.ASGZ);
							this.PalMBNeuAG(this.hFile, this.nProzNr, this.PREAGN1A, this.PREAGN2A, "", this.PREAGRFA, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA);
							if (this.PREAGGVFUa + this.PREAGGVVNa != "") 
							{
								this.PalMBNeuAGGV(this.hFile, this.PREAGGVFUa, this.PREAGGVVNa, this.PREAGGVSHa, this.PREAGGVPLZa, this.PREAGGVOa, this.PREAGGVALa);
							}
							// If VBAGGVZFU || VBAGGVZN != ''
							// Call PalMBNeuAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)

							if (this.PREAGGVFUa2 + this.PREAGGVVNa2 != "") 
							{
								this.PalMBNeuKS(this.hFile, this.ASGZ);
								this.PalMBNeuAG(this.hFile, this.nProzNr, this.PREAGN1A, this.PREAGN2A, "", this.PREAGRFA, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA);
								this.PalMBNeuAGGV(this.hFile, this.PREAGGVFUa2, this.PREAGGVVNa2, this.PREAGGVSHa2, this.PREAGGVPLZa2, this.PREAGGVOa2, this.PREAGGVALa2);
							}
							if (this.PREAGGVFUa3 + this.PREAGGVVNa3 != "") 
							{
								this.PalMBNeuKS(this.hFile, this.ASGZ);
								this.PalMBNeuAG(this.hFile, this.nProzNr, this.PREAGN1A, this.PREAGN2A, "", this.PREAGRFA, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA);
								this.PalMBNeuAGGV(this.hFile, this.PREAGGVFUa3, this.PREAGGVVNa3, this.PREAGGVSHa3, this.PREAGGVPLZa3, this.PREAGGVOa3, this.PREAGGVALa3);
							}
							if (this.PREAGGVFUa4 + this.PREAGGVVNa4 != "") 
							{
								this.PalMBNeuKS(this.hFile, this.ASGZ);
								this.PalMBNeuAG(this.hFile, this.nProzNr, this.PREAGN1A, this.PREAGN2A, "", this.PREAGRFA, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA);
								this.PalMBNeuAGGV(this.hFile, this.PREAGGVFUa4, this.PREAGGVVNa4, this.PREAGGVSHa4, this.PREAGGVPLZa4, this.PREAGGVOa4, this.PREAGGVALa4);
							}

							// If PREAGN1B || PREAGN2B || PREAGOB != ''
							// Call PalMBNeuKS(hFile, PREAZB )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
							// If PREAGGVFUb || PREAGGVVNb != ''
							// Call PalMBNeuAGGV(hFile, PREAGGVFUb, PREAGGVVNb, PREAGGVSHb, PREAGGVPLZb, PREAGGVOb, PREAGGVALb)
							// If VBAGGVZ2FU || VBAGGVZ2N != ''
							// Call PalMBNeuAGGVZ(hFile, VBAGGVZ2FU, VBAGGVZ2N, VBAGGVZ2SH, VBAGGVZ2PLZ, VBAGGVZ2O, VBAGGVZ2AL)
							// If PREAGGVFUb2 || PREAGGVVNb2 != ''
							// Call PalMBNeuKS(hFile, PREAZB )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUb2, PREAGGVVNb2, PREAGGVSHb2, PREAGGVPLZb2, PREAGGVOb2, PREAGGVALb2)
							// If PREAGGVFUb3 || PREAGGVVNb3 != ''
							// Call PalMBNeuKS(hFile, PREAZB )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUb3, PREAGGVVNb3, PREAGGVSHb3, PREAGGVPLZb3, PREAGGVOb3, PREAGGVALb3)
							// If PREAGGVFUb4 || PREAGGVVNb4 != ''
							// Call PalMBNeuKS(hFile, PREAZB )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1B, PREAGN2B, PREAGN3B, PREAGRFB, PREAGSHB, PREAGPLZB, PREAGOB, PREAGALB)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUb4, PREAGGVVNb4, PREAGGVSHb4, PREAGGVPLZb4, PREAGGVOb4, PREAGGVALb4)
							// If PREAGN1C || PREAGN2C || PREAGOC != ''
							// Call PalMBNeuKS(hFile, PREAZC )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
							// If PREAGGVFUc || PREAGGVVNc != ''
							// Call PalMBNeuAGGV(hFile, PREAGGVFUc, PREAGGVVNc, PREAGGVSHc, PREAGGVPLZc, PREAGGVOc, PREAGGVALc)
							// If VBAGGVZ3FU || VBAGGVZ3N != ''
							// Call PalMBNeuAGGVZ(hFile, VBAGGVZ3FU, VBAGGVZ3N, VBAGGVZ3SH, VBAGGVZ3PLZ, VBAGGVZ3O, VBAGGVZ3AL)
							// If PREAGGVFUc2 || PREAGGVVNc2 != ''
							// Call PalMBNeuKS(hFile, PREAZC )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUc2, PREAGGVVNc2, PREAGGVSHc2, PREAGGVPLZc2, PREAGGVOc2, PREAGGVALc2)
							// If PREAGGVFUc3 || PREAGGVVNc3 != ''
							// Call PalMBNeuKS(hFile, PREAZC )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUc3, PREAGGVVNc3, PREAGGVSHc3, PREAGGVPLZc3, PREAGGVOc3, PREAGGVALc3)
							// If PREAGGVFUc4 || PREAGGVVNc4 != ''
							// Call PalMBNeuKS(hFile, PREAZC )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1C, PREAGN2C, PREAGN3C, PREAGRFC, PREAGSHC, PREAGPLZC, PREAGOC, PREAGALC)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUc4, PREAGGVVNc4, PREAGGVSHc4, PREAGGVPLZc4, PREAGGVOc4, PREAGGVALc4)
							// If PREAGN1D || PREAGN2D || PREAGOD != ''
							// Call PalMBNeuKS(hFile, PREAZD )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1D, PREAGN2D,PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
							// If PREAGGVFUd || PREAGGVVNd != ''
							// Call PalMBNeuAGGV(hFile, PREAGGVFUd, PREAGGVVNd, PREAGGVSHd, PREAGGVPLZd, PREAGGVOd, PREAGGVALd)
							// If VBAGGVZ4FU || VBAGGVZ4N != ''
							// Call PalMBNeuAGGVZ(hFile, VBAGGVZ4FU, VBAGGVZ4N, VBAGGVZ4SH, VBAGGVZ4PLZ, VBAGGVZ4O, VBAGGVZ4AL)
							// If PREAGGVFUd2 || PREAGGVVNd2 != ''
							// Call PalMBNeuKS(hFile, PREAZD )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1D, PREAGN2D, PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUd2, PREAGGVVNd2, PREAGGVSHd2, PREAGGVPLZd2, PREAGGVOd2, PREAGGVALd2)
							// If PREAGGVFUd3 || PREAGGVVNd3 != ''
							// Call PalMBNeuKS(hFile, PREAZD )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1D, PREAGN2D, PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUd3, PREAGGVVNd3, PREAGGVSHd3, PREAGGVPLZd3, PREAGGVOd3, PREAGGVALd3)
							// If PREAGGVFUd4 || PREAGGVVNd4 != ''
							// Call PalMBNeuKS(hFile, PREAZD )
							// Call PalMBNeuAG(hFile, nProzNr, PREAGN1D, PREAGN2D, PREAGN3D, PREAGRFD, PREAGSHD, PREAGPLZD, PREAGOD, PREAGALD)
							// Call PalMBNeuAGGV(hFile, PREAGGVFUd4, PREAGGVVNd4, PREAGGVSHd4, PREAGGVPLZd4, PREAGGVOd4, PREAGGVALd4)

							Int.PalAktion(this.nTANr, this.nTHNr, SalNumber.Null, "MB", this.strPArt, 1, SalNumber.Null, SalNumber.Null, SalNumber.Null, this.nProzNr, SalNumber.Null);
							Int.SqlImmed("DELETE FROM mbk WHERE mbkproznr= :frmEDA.nProzNr AND mbkuser = :strBNUser AND mbktyp = :frmEDA.strPArt");

							Int.SqlImmed("UPDATE pre SET predisknr = :frmEDA.nDiskNr WHERE preproznr = :frmEDA.nProzNr");

							this.nFetchEDA = this.hSqlEDA.FetchNext();
						}
					}
					this.hSqlEDA.Commit();
					this.hSqlBZ.Disconnect();
					this.hSqlEDA2.Disconnect();
					this.hSqlEDA1.Disconnect();
					this.hSqlEDA.Disconnect();
					this.PalBB(this.hFile);

					this.PalClose(this.hFile);
				}
				if (this.strPArt == "VBNeu")  // 17.04.18 Ä1662
				{
					Sal.WaitCursor(true);
					// 29.05.07 F176
					// If cbTest
					// Set hFile = PalOpen('A:\\JT.DTA')
					// Else
					// Set hFile = PalOpen('A:\\JM.DTA')
					if (this.cbTest.Checked) 
					{
						this.strFile = Const.PATH_EDA + "JT" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					else
					{
						this.strFile = Const.PATH_EDA + "JM" + Int.PalDateToStrJJJJMMTThhmmss(SalDateTime.Current) + ".DTA";
					}
					this.hFile = this.PalOpen(this.strFile);

					this.PalAA(this.hFile, "10", this.dfBez.Text);

					this.strSelect = @"
SELECT mbkproznr, mbkaz, prarztnr, prhalternr,
mbkhname1, mbkhname2, mbkhstr, mbkagplz, mbkhort, mbkagal, mbkhrf,
mbkgvnsh, mbkgvnplz, mbkgvno, mbkgvnal,
mbkgvzfu, mbkgvzn, mbkgvzsh, mbkgvzplz, mbkgvzo, mbkgvzal
INTO :frmEDA.nProzNr, :ASGZ, :nTANr, :nTHNr,
:frmEDA.PREAGN1A, :frmEDA.PREAGN2A, :frmEDA.PREAGSHA, :frmEDA.PREAGPLZA, :frmEDA.PREAGOA, :frmEDA.PREAGALA, :frmEDA.PREAGRFA,
:frmEDA.VBAGGVZFU, :frmEDA.VBAGGVZN, :frmEDA.VBAGGVZSH, :frmEDA.VBAGGVZPLZ, :frmEDA.VBAGGVZO, :frmEDA.VBAGGVZAL
FROM mbk, pr
WHERE mbkproznr = prnr
AND mbkuser = :strBNUser AND mbktyp = :frmEDA.strPArt
ORDER BY mbkproznr";
					Sal.WaitCursor(true);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA1);
					Var.bOK = Int.SqlConnection(ref this.hSqlEDA2);
					Var.bOK = Int.SqlConnection(ref this.hSqlBZ);
					Var.bOK = Int.SqlHandleExec(this.hSqlEDA, this.strSelect, "EDA Datei erstellen", ref Var.nErr) == Sys.IDOK;
					if (Var.bOK) 
					{
						this.nFetchEDA = this.hSqlEDA.FetchNext();
						while (this.nFetchEDA != Sys.FETCH_EOF) 
						{
							this.SetStatusBarText("Arzt-Nr.: " + this.nTANr.ToString(0));
							// 04.09.06 F50 + And  bExists
							this.PalVBNeuKS(this.hFile, this.ASGZ);
							this.PalVBNeuAG(this.hFile, this.nProzNr, this.PREAGSHA, this.PREAGPLZA, this.PREAGOA, this.PREAGALA);
							// If VBAGGVZFU || VBAGGVZN != ''
							// Call PalVBNeuAGGVZ(hFile, VBAGGVZFU, VBAGGVZN, VBAGGVZSH, VBAGGVZPLZ, VBAGGVZO, VBAGGVZAL)

							Int.PalAktion(this.nTANr, this.nTHNr, SalNumber.Null, "MB", this.strPArt, 1, SalNumber.Null, SalNumber.Null, SalNumber.Null, this.nProzNr, SalNumber.Null);
							Int.SqlImmed("DELETE FROM mbk WHERE mbkproznr= :frmEDA.nProzNr AND mbkuser = :strBNUser AND mbktyp = :frmEDA.strPArt");

							Int.SqlImmed("UPDATE pre SET predisknr = :frmEDA.nDiskNr WHERE preproznr = :frmEDA.nProzNr");

							this.nFetchEDA = this.hSqlEDA.FetchNext();
						}
					}
					this.hSqlEDA.Commit();
					this.hSqlBZ.Disconnect();
					this.hSqlEDA2.Disconnect();
					this.hSqlEDA1.Disconnect();
					this.hSqlEDA.Disconnect();
					this.PalBB(this.hFile);

					this.PalClose(this.hFile);
				}
				// 29.05.07 F176
				// If cbTest
				// Call SalFileCopy( 'A:\\JT.DTA', Const.PATH_EDA || 'JT' || PalDateToStrJJJJMMTThhmmss(SalDateCurrent()) || '.DTA', TRUE)
				// Else
				// Call SalFileCopy( 'A:\\JM.DTA', Const.PATH_EDA || 'JM' || PalDateToStrJJJJMMTThhmmss(SalDateCurrent()) || '.DTA', TRUE)
				// Call PalReport(frmEDA, 'EDA.QRP',
				// ':frmEDA.dfBez, :frmEDA.ANTANZ, :frmEDA.SANZ, :frmEDA.SKATNR, :frmEDA.SUASP, :frmEDA.ASPANZ',
				// 'EDAID, ANTANZ, SANZ, SKATNR, SUASP, ASPANZ', nErr)
				// 12.08.11 Ä615
				// 31.05.18 von unter dem Druck hierher verschoben
				App.frmRgSuchen.strDrive = Sal.FileGetDrive();
				Sal.FileSetDrive("A:");
				Sal.WaitCursor(false);
				dlgLaufwerk.ModalDialog(this, "Gerichtsdaten", ref this.strDir);
				Sal.FileSetDrive(App.frmRgSuchen.strDrive);
				// 'A:\\ -> strDir || '
				if (this.cbTest.Checked) 
				{
					this.bPfadOk = Sal.FileCopy(this.strFile, this.strDir + "JT.DTA", true);
					if (Sys.FILE_CopyOK == this.bPfadOk) 
					{
						Sal.MessageBox("Die Datei wurde korrekt erstellt.", "Ok", (Sys.MB_Ok | Sys.MB_IconAsterisk));
					}
					else
					{
						Sal.MessageBox("Die Datei konnte NICHT korrekt erstellt werden.", "Fehler", (Sys.MB_Ok | Sys.MB_IconStop));
					}
				}
				else
				{
					this.bPfadOk = Sal.FileCopy(this.strFile, this.strDir + "JM.DTA", true);
					if (Sys.FILE_CopyOK == this.bPfadOk) 
					{
						Sal.MessageBox("Die Datei wurde korrekt erstellt.", "Ok", (Sys.MB_Ok | Sys.MB_IconAsterisk));
					}
					else
					{
						Sal.MessageBox("Die Datei konnte NICHT korrekt erstellt werden.", "Fehler", (Sys.MB_Ok | Sys.MB_IconStop));
					}
				}
				// LL
				if (1 == dlgLlDruck.ModalDialog(App.frmMain, "BriefEDA.crd", "")) 
				{
					// Set dlgLlDruck.ANTANZ = frmEDA.ANTANZ
					// Set dlgLlDruck.SANZ = SANZ
					// Set dlgLlDruck.SKATNR = SKATNR
					// Set dlgLlDruck.SUASP = SUASP
					// Set dlgLlDruck.ASPANZ = ASPANZ
					// Set dlgLlDruck.strEDAID = dfBez
					// 12.08.11 Ä615 If
					if (this.bPfadOk) 
					{
						// 01.11.07 Ä176
						// If cbTest
						// Set lsDummy = 'EDA-TEST-Diskette
						// Datenträgerbezeichnung:
						// ' || dfBez || '
						// Tierärztl.Verrechnungsstelle Nds.
						// Kennziffer: 03803581  TEST!!!'
						// Call SqlImmed('INSERT INTO ed (eda, edn1,edn2,eds,edo) VALUES( \'EDA-TEST-Diskette\', \'Datenträgerbezeichnung: \', :frmEDA.dfBez, \'Tierärztl.Verrechnungsst. Nds.\', \'Kennziffer: 03803581  TEST!!!\')')
						// Else
						// Call SqlImmed('INSERT INTO ed (eda, edn1,edn2,eds,edo) VALUES( \'EDA-Diskette\', \'Datenträgerbezeichnung: \', :frmEDA.dfBez, \'Tierärztl.Verrechnungsstelle Nds.\', \'Kennziffer: 03803581\')')
						// Set lsDummy = 'EDA-Diskette
						// Datenträgerbezeichnung:
						// ' || dfBez || '
						// Tierärztl.Verrechnungsstelle Nds.
						// Kennziffer: 03803581'

						// If bfrmDYMODruck
						// While Not SalDestroyWindow(frmDYMODruck)
						// Call SalCreateWindow(frmDYMODruck, hWndForm, lsDummy, 'frmEDA')

						Sal.WaitCursor(false);
						if (Sys.IDOK == Sal.MessageBox("Der Vorgang ist abgeschlossen.", "Fertig", (Sys.MB_Ok | Sys.MB_IconAsterisk))) 
						{
						}
					}
				}

			}
			#endregion
		}
		#endregion
	}
}
