// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class dlgSqlErrorAction : SalDialogBox
	{
		#region Window Variables
		public SalNumber nResult = 0;
		public SalString strSqlMsg = "";
		public SalString strErrorText = "";
		public SalString strSqlStatement = "";
		public SalString strTemp1 = "";
		public SalString strTemp2 = "";
		public SalNumber nFehlerPos = 0;
		public SalNumber nFehlerNr = 0;
		public SalSqlHandle hSqlLocal = SalSqlHandle.Null;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public dlgSqlErrorAction()
		{
			// Assign global reference.
			App.dlgSqlErrorAction = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the modal dialog.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static SalNumber ModalDialog(Control owner)
		{
			dlgSqlErrorAction dlg = new dlgSqlErrorAction();
			SalNumber ret = dlg.ShowDialog(owner);
			return ret;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static dlgSqlErrorAction FromHandle(SalWindowHandle handle)
		{
			return ((dlgSqlErrorAction)SalWindow.FromHandle(handle, typeof(dlgSqlErrorAction)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// dlgSqlErrorAction WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgSqlErrorAction_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.dlgSqlErrorAction_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.dlgSqlErrorAction_OnSAM_Close(sender, e);
					break;
				
				case Const.PM_INIT:
					this.dlgSqlErrorAction_OnPM_INIT(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgSqlErrorAction_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.CenterWindow();
			this.nResult = Sys.IDCANCEL;
			Sal.WaitCursor(false);
			this.PostMessage(Const.PM_INIT, 0, 0);
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgSqlErrorAction_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.WaitCursor(true);
			Int.PalLog(((SalString)this.dfTabelle.Text).Left(10) + "-" + this.mlFehlerText.Text);
			this.EndDialog(this.nResult);
			#endregion
		}
		
		/// <summary>
		/// PM_INIT event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgSqlErrorAction_OnPM_INIT(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PopNumber(ref this.nFehlerNr);
			this.hSqlLocal = (SalSqlHandle)this.nFehlerNr.ToWindowHandle();
			Int.PopNumber(ref this.nFehlerNr);

			// PPJ: Automatically generated temporary assignments. Properties canot be passed by reference.
			SalString temp1 = this.dfTabelle.Text;
			Int.PopString(ref temp1);
			this.dfTabelle.Text = temp1;

			this.strTemp1 = this.nFehlerNr.ToString(0);
			this.strTemp1 = "Fehler Nr.: " + this.strTemp1 + "   ";
			this.nFehlerPos = this.hSqlLocal.GetErrorPosition();
			if (this.nFehlerPos > 0) 
			{
				this.strTemp2 = this.nFehlerPos.ToString(0);
				this.strTemp1 = this.strTemp1 + "Position : " + this.strTemp2;
			}
			Sql.GetErrorText(this.nFehlerNr, ref this.strTemp2);
			this.mlFehlerText.Text = this.strTemp1 + Const.STRRETURN + this.strTemp2;
			if (this.nFehlerPos > 0) 
			{
				Int.PopString(ref this.strSqlStatement);
				this.strTemp1 = this.strSqlStatement.Left(this.nFehlerPos);
				this.strTemp2 = this.strSqlStatement.Mid(this.nFehlerPos, this.strSqlStatement.Length - this.nFehlerPos);
				this.mlSqlStatement.Text = this.strTemp1 + Const.STRRETURN + "********* FEHLER ********" + Const.STRRETURN + this.strTemp2;
			}
			else
			{

				// PPJ: Automatically generated temporary assignments. Properties canot be passed by reference.
				SalString temp2 = this.mlSqlStatement.Text;
				Int.PopString(ref temp2);
				this.mlSqlStatement.Text = temp2;

			}
			#endregion
		}
		
		/// <summary>
		/// pbEsc WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbEsc_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbEsc_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbEsc_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nResult = Sys.IDCANCEL;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		
		/// <summary>
		/// pbRetry WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbRetry_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbRetry_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbRetry_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nResult = Sys.IDRETRY;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		
		/// <summary>
		/// pbIgnore WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbIgnore_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbIgnore_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbIgnore_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nResult = Sys.IDIGNORE;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.PrtPrintForm(this);
			#endregion
		}
		#endregion
	}
}
