// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmAnwBeleg : SalFormWindow
	{
		#region Window Variables
		public SalString strWhere = "";
		public SalSqlHandle hSqlAB = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalNumber nColor = 0;
		public SalNumber nRow = 0;
		public SalNumber nFetch = 0;
		public SalString strCheckAusl = "";
		public SalBoolean bFalschesZeichen = false;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmAnwBeleg()
		{
			// Assign global reference.
			App.frmAnwBeleg = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmAnwBeleg CreateWindow(Control owner)
		{
			frmAnwBeleg frm = new frmAnwBeleg();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmAnwBeleg FromHandle(SalWindowHandle handle)
		{
			return ((frmAnwBeleg)SalWindow.FromHandle(handle, typeof(frmAnwBeleg)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalNewRow()
		{
			#region Actions
			using (new SalContext(this))
			{
				if (PalSave()) 
				{
				}
				PalPopulate();
				nRow = tblAB.InsertRow(Sys.TBL_MaxRow);
				tblAB.colZei.Text = Var.strBNZei;
				tblAB.colErfDat.DateTime = SalDateTime.Current;
				tblAB.SetFocusCell(nRow, tblAB.colArztNr, 0, -1);
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalSave()
		{
			#region Actions
			using (new SalContext(this))
			{
				Sal.WaitCursor(true);
				tblAB.KillCellEdit();
				if (tblAB.AnyRows((Sys.ROW_New | Sys.ROW_Edited), 0)) 
				{
					nRow = Sys.TBL_MinRow;
					while (true)
					{
						if (!(tblAB.FindNextRow(ref nRow, (Sys.ROW_New | Sys.ROW_Edited), 0))) 
						{
							break;
						}
						tblAB.SetFocusRow(nRow);

						if (this.tblAB.colDruDat.DateTime == Sys.DATETIME_Null && this.tblAB.colDM.Number != 0 && this.tblAB.colDM.Number != Sys.NUMBER_Null) 
						{
							Int.SqlIstDa("FROM ab WHERE aberfdat = :frmAnwBeleg.tblAB.colErfDat", ref Var.bExists);
							if (Var.bExists) 
							{
								Int.SqlImmed(@"UPDATE ab SET
abarztnr = :frmAnwBeleg.tblAB.colArztNr,
absoll = :frmAnwBeleg.tblAB.colSoll,
abhaben = :frmAnwBeleg.tblAB.colHaben,
abdm = :frmAnwBeleg.tblAB.colDM,
abmwst  = :frmAnwBeleg.tblAB.colMwSt,
abbuchtext = :frmAnwBeleg.tblAB.colBuchText
WHERE aberfdat = :frmAnwBeleg.tblAB.colErfDat");
							}
							if (!(Var.bExists)) 
							{
								Int.SqlImmed(@"INSERT INTO ab
( abzei, abarztnr, absoll, abhaben, abdm, aberfdat, abdrudat, abmwst, abbuchtext )
VALUES( :frmAnwBeleg.tblAB.colZei, :frmAnwBeleg.tblAB.colArztNr, :frmAnwBeleg.tblAB.colSoll, :frmAnwBeleg.tblAB.colHaben,
:frmAnwBeleg.tblAB.colDM, :frmAnwBeleg.tblAB.colErfDat, NULL, :frmAnwBeleg.tblAB.colMwSt, :frmAnwBeleg.tblAB.colBuchText )");
							}
						}
						tblAB.SetRowFlags(nRow, (Sys.ROW_New | Sys.ROW_Edited), false);
					}
				}
				Sal.WaitCursor(false);
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalPopulate()
		{
			#region Actions
			using (new SalContext(this))
			{
				Sal.WaitCursor(true);
				if (dfSuchenArztNr.Number > 0) 
				{
					strWhere = "AND abarztnr = :frmAnwBeleg.dfSuchenArztNr ";
				}
				else
				{
					strWhere = "";
				}
				// 20.03.19 Ä1843
				if (!(oErl.Checked)) 
				{
					strWhere = strWhere + "AND abdrudat IS NULL ";
				}

				// 09.07.18 Ä1428 +  AND aberfdat>=SYSDATE - 3 MONTHS
				strSelect = @"SELECT abzei, abarztnr, absoll, abhaben, abdm, aberfdat, abdrudat, abmwst, aname1, abbuchtext
INTO :frmAnwBeleg.tblAB.colZei, :frmAnwBeleg.tblAB.colArztNr, :frmAnwBeleg.tblAB.colSoll, :frmAnwBeleg.tblAB.colHaben,
:frmAnwBeleg.tblAB.colDM, :frmAnwBeleg.tblAB.colErfDat, :frmAnwBeleg.tblAB.colDruDat, :frmAnwBeleg.tblAB.colMwSt, :frmAnwBeleg.tblAB.colArztName,
:frmAnwBeleg.tblAB.colBuchText
FROM ab, a WHERE abarztnr=aarztnr " + strWhere + " AND aberfdat>=SYSDATE - 3 MONTHS ORDER BY aberfdat DESC";
				if (tblAB.Populate(hSqlAB, strSelect, Sys.TBL_FillNormal)) 
				{
				}
				Sal.WaitCursor(false);
			}

			return 0;
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmAnwBeleg WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmAnwBeleg_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmAnwBeleg_OnSAM_Create(sender, e);
					break;
				//FC:FINAL: SAM_Close
				case Sys.SAM_Close:
					this.frmAnwBeleg_OnSAM_Destroy(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmAnwBeleg_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 05.12.17 Ä1428
			Var.bfrmAnwBelege = true;
			Sal.WaitCursor(true);
			Int.SqlConnection(ref this.hSqlAB);
			// 20.03.19 Ä1843
			this.oErl.Checked = false;

			this.PalPopulate();

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_Destroy event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmAnwBeleg_OnSAM_Destroy(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalSave();
			this.hSqlAB.Disconnect();
			Var.bfrmAnwBelege = false;
			#endregion
		}
		
		/// <summary>
		/// tblAB WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAB_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_EndCellTab:
					this.tblAB_OnSAM_EndCellTab(sender, e);
					break;
				
				case Const.WM_KEYUP:
					this.tblAB_OnWM_KEYUP(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.tblAB_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_EndCellTab event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAB_OnSAM_EndCellTab(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalNewRow();
			e.Return = true;
			return;
			#endregion
		}
		
		/// <summary>
		/// WM_KEYUP event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAB_OnWM_KEYUP(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (Sys.wParam == 45)  // Einf.
			{
				this.PalNewRow();
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblAB_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this.tblAB, 0xbfffff);
			#endregion
		}
		
		/// <summary>
		/// pbNeu WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbNeu_OnSAM_Click(sender, e);
					break;
				
				case Const.WM_KEYUP:
					this.pbNeu_OnWM_KEYUP(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.pbNeu_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalNewRow();
			#endregion
		}
		
		/// <summary>
		/// WM_KEYUP event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_OnWM_KEYUP(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (Sys.wParam == 45)  // Einf.
			{
				this.PalNewRow();
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.pbNeu, "Neue Zeile hinzufügen.");
			return;
			#endregion
		}
		
		/// <summary>
		/// pbLoe WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLoe_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbLoe_OnSAM_Click(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.pbLoe_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLoe_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.tblAB.AnyRows((Sys.ROW_Selected | Sys.ROW_MarkDeleted), 0)) 
			{
				this.nRow = Sys.TBL_MinRow;
				this.bFalschesZeichen = false; // 23.01.18 Ä1428
				while (true)
				{
					if (!(this.tblAB.FindNextRow(ref this.nRow, (Sys.ROW_Selected | Sys.ROW_MarkDeleted), 0))) 
					{
						break;
					}
					this.tblAB.SetFocusRow(this.nRow);
					if (this.tblAB.colZei.Text != Var.strBNZei)  // 23.01.18 Ä1428
					{
						this.bFalschesZeichen = true;
					}
					else
					{
						Int.SqlImmed("DELETE FROM ab WHERE aberfdat = :frmAnwBeleg.tblAB.colErfDat");
					}
				}
				this.PalSave();
				this.tblAB.ResetTable();
				this.tblAB.Populate(this.hSqlAB, this.strSelect, Sys.TBL_FillNormal);
				if (this.bFalschesZeichen)  // 23.01.18 Ä1428
				{
					Sal.MessageBox(@"Mindestens eine Zeile war markiert, die von einem anderen Benutzer erfasst wurde.
Diese wurde(n) nicht gelöscht.", "Anderer Benutzer", (Sys.MB_Ok | Sys.MB_IconExclamation));
				}
			}
			else
			{
				Sal.MessageBox(@"Vorher müssen die zu löschenden
Zeilen markiert werden !", "Markieren !", Sys.MB_IconAsterisk);
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLoe_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.pbLoe, "Schwarz markierte Zeilen löschen.");
			return;
			#endregion
		}
		
		/// <summary>
		/// dfSuchenArztNr WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfSuchenArztNr_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfSuchenArztNr_OnSAM_Validate(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.dfSuchenArztNr_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfSuchenArztNr_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalPopulate();
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfSuchenArztNr_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.dfSuchenArztNr, "nach Mitglied filtern");
			return;
			#endregion
		}
		
		/// <summary>
		/// oErl WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void oErl_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.oErl_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void oErl_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 20.03.19 Ä1843
			this.PalPopulate();
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.DestroyWindow();
			#endregion
		}
		#endregion
		
		#region tblAB
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblABTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmAnwBeleg _frmAnwBeleg = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblABTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmAnwBeleg frmAnwBeleg
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmAnwBeleg == null) 
					{
						_frmAnwBeleg = (frmAnwBeleg)this.FindForm();
					}
					return _frmAnwBeleg;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblABTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblABTableWindow)SalWindow.FromHandle(handle, typeof(tblABTableWindow)));
			}
			#endregion
			
			#region Window Actions
			
			/// <summary>
			/// colArztNr WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colArztNr_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colArztNr_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colArztNr_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				this.colArztName.Text = "";
				Int.SqlImmedSel("SELECT aname1 INTO :frmAnwBeleg.tblAB.colArztName FROM a WHERE aarztnr = :frmAnwBeleg.tblAB.colArztNr");
				#endregion
			}
			
			/// <summary>
			/// colBuchArt WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colBuchArt_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colBuchArt_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colBuchArt_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				this.colSoll.Number = this.colArztNr.Number;
				this.frmAnwBeleg.strCheckAusl = Int.PalCheckAuslTA(this.colArztNr.Number);
				if (this.frmAnwBeleg.strCheckAusl == "") 
				{
					this.colMwSt.Number = Var.nMwStVoll; // 12.06.20 Ä1892 19 -> nMwStVoll
				}
				else
				{
					this.colMwSt.Number = 0;
				}
				if (this.colBuchText.Text == "") 
				{
					this.colBuchText.Text = this.colBuchArt.Text;
				}
				// 23.02.18
				this.colMwSt.Number = Var.nMwStVoll;

				if (this.colBuchArt.Text == "+Darlehen") 
				{
					this.colHaben.Number = 15400;
					// 23.02.18 Ä1428
					this.colMwSt.Number = 0;
				}
				else if (this.colBuchArt.Text == "Gebühr") 
				{
					if (this.frmAnwBeleg.strCheckAusl == "")  // Inland
					{
						this.colHaben.Number = 86030;
					}
					else
					{
						this.colHaben.Number = 86031;
					}
				}
				else if (this.colBuchArt.Text == "Solvenzprüfung" || this.colBuchArt.Text == "Impferinnerungen" || this.colBuchArt.Text == "Abgabebelege" || this.colBuchArt.Text == "Bestandsbuch") 
				{
					if (this.frmAnwBeleg.strCheckAusl == "")  // Inland
					{
						this.colHaben.Number = 81200;
					}
					else
					{
						this.colHaben.Number = 81210;
					}
				}
				else if (this.colBuchArt.Text == "Zinsabschlag") 
				{
					if (this.frmAnwBeleg.strCheckAusl == "")  // Inland
					{
						this.colHaben.Number = 81300;
					}
					else
					{
						this.colHaben.Number = 81340;
						// 06.09.18 Ä1784
						this.colMwSt.Number = 0;
					}
				}
				else if (this.colBuchArt.Text == "Porto") 
				{
                    // Mail BU 09.10.24 ###
                    // Set colHaben = 49100
                    this.colHaben.Number = 81700;

                    this.colMwSt.Number = 19; // 08.04.21 Trillian SA 07.04.21 16:04 0 -> 19
                }
				else if (this.colBuchArt.Text == "Scheck storno") 
				{
					this.colHaben.Number = 13300;
					this.colMwSt.Number = 0;
				}
				else if (this.colBuchArt.Text == "Rundschreiben") 
				{
					this.colHaben.Number = 86000;
					this.colMwSt.Number = 19;
				}
				else if (this.colBuchArt.Text == "Rundschreibenporto") 
				{
					this.colHaben.Number = 81700;
					this.colMwSt.Number = 19;
				}
				else if (this.colBuchArt.Text == "Pegasus-Nutzung") 
				{
					this.colHaben.Number = 81450;
					this.colMwSt.Number = Var.nMwStVoll;
				}
				// 30.06.20 Ä1892
				if (this.colErfDat.DateTime >= new SalDateTime(2020, 7, 1) && this.colErfDat.DateTime <= new SalDateTime(2020, 12, 31)) 
				{
					this.colHaben.Number = Int.PalKontenMwStSenkung(this.colHaben.Number);
				}
				#endregion
			}
			#endregion
		}
		#endregion
	}
}
