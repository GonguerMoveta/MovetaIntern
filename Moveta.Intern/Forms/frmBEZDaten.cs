// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;
using System.Xml;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmBEZDaten : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlUser = SalSqlHandle.Null;
		public SalString strSelectS = "";
		public SalString strSelect = "";
		public SalNumber nColor = 0;
		public SalString strDir = "";
		public SalNumber nRow = 0;
		public SalString lsDummy = "";
		public SalDateTime dtErfDat = SalDateTime.Null;
		public SalNumber nArztNr = 0;
		public SalNumber nHalterNr = 0;
		public SalNumber nRechNr = 0;
		public SalSqlHandle hSqlUeberwDTAUS = SalSqlHandle.Null;
		public SalFileHandle hFile = SalFileHandle.Null;
		public SalNumber nFetch = 0;
		public SalString strText = "";
		public SalString strDatei = "";
		public SalBoolean bOK = false;
		public SalNumber nResult = 0;
		public SalString strDatum = "";
		public SalNumber nTVNr = 0;
		public SalString strEmpfName = "";
		public SalString strEmpfBLZ = "";
		public SalString strEmpfKonto = "";
		public SalString strAbsBank = "";
		public SalString strAbsBLZ = "";
		public SalString strAbsKonto = "";
		public SalNumber nDM = 0;
		public SalString strVerw1 = "";
		public SalString strVerw2 = "";
		public SalString strVerw3 = "";
		public SalString strVerw4 = "";
		public SalString strROWID = "";
		public SalNumber nBankNr = 0; // nur für PalBTX
		public SalNumber nSumBLZ = 0;
		public SalNumber nSumKonto = 0;
		public SalNumber nSumSatz = 0;
		public SalNumber nSumDM = 0;
		public SalString strBEZID = "";
		public SalDateTime dtBEZSignDat = SalDateTime.Null;
		public SalString strBEZBIC = "";
		public SalString strBEZIban = "";
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmBEZDaten()
		{
			// Assign global reference.
			App.frmBEZDaten = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmBEZDaten CreateWindow(Control owner)
		{
			frmBEZDaten frm = new frmBEZDaten();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmBEZDaten FromHandle(SalWindowHandle handle)
		{
			return ((frmBEZDaten)SalWindow.FromHandle(handle, typeof(frmBEZDaten)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <param name="nArzt"></param>
		/// <param name="nHalter"></param>
		/// <returns></returns>
		public SalNumber PalHoleTabelle(SalNumber nArzt, SalNumber nHalter)
		{
			#region Local Variables
			SqlLocals.PalHoleTabelleLocals locals = new SqlLocals.PalHoleTabelleLocals();
			#endregion
			
			#region Actions
			using (new SalContext(this, locals))
			{

				// PPJ: Assign parameters to the locals instance.
				locals.nArzt = nArzt;
				locals.nHalter = nHalter;

				tblBEZD.ResetTable();
				strSelectS = @"SELECT bezderfdat, bezdarztnr, bezdhalternr, bezdrechnr, bezdblz, bezdkonto, bezddm, bezderldat, bezdiban, bezdbic, bezdsigndat, bezdid
INTO :frmBEZDaten.tblBEZD.colErfDat, :frmBEZDaten.tblBEZD.colArztNr, :frmBEZDaten.tblBEZD.colHalterNr, :frmBEZDaten.tblBEZD.colRechNr,
:frmBEZDaten.tblBEZD.colBLZ, :frmBEZDaten.tblBEZD.colKonto, :frmBEZDaten.tblBEZD.colDM , :frmBEZDaten.tblBEZD.colErlDat,
:frmBEZDaten.tblBEZD.colIBAN, :frmBEZDaten.tblBEZD.colBIC, :frmBEZDaten.tblBEZD.colSignDat, :frmBEZDaten.tblBEZD.colID
FROM bezd ";
				locals.strSelect1 = "";
				if (locals.nArzt != SalNumber.Null) 
				{
					locals.strSelect1 = "AND bezdarztnr = " + locals.nArzt.ToString(0) + " ";
				}
				if (locals.nHalter != SalNumber.Null) 
				{
					locals.strSelect1 = "AND bezdhalternr = " + locals.nHalter.ToString(0) + " ";
				}
				// 27.04.12 Ä788
				if (cbNUR.Checked) 
				{
					locals.strSelect1 = "AND bezderldat IS NULL ";
				}

				if (locals.strSelect1 != "") 
				{
					locals.strSelect1 = "WHERE " + locals.strSelect1.Mid(3, 255);
				}
				strSelectS = strSelectS + locals.strSelect1 + "ORDER BY bezderfdat";
				if (tblBEZD.Populate(hSqlUser, strSelectS, Sys.TBL_FillAll)) 
				{
				}

				return 0;
			}
			#endregion
		}
		// Function: PalDTAUS
		// Description:
		// Returns
		// Parameters
		// String: strOrdner
		// Static Variables
		// Local variables
		// String: strPut
		// String: strTVN
		// Actions
		// Set nSumBLZ = 0
		// Set nSumKonto = 0
		// 30.05.00
		// Set nSumDM = 0
		// Set nSumSatz=0
		// Set bOK = FALSE
		// Set strDatei = 'SPK'
		// Set strDatei = strOrdner || 'DTAUS_Einzuege_' || strDatei || '.TXT'
		// Set nResult=IDOK
		// If nResult = IDOK
		// If SalFileOpen(hFile , strDatei , OF_Exist)
		// Set nResult = SalMessageBox( 'Soll die alte Einzugsdatei gelöscht werden  ?','Achtung',MB_YesNo|MB_IconExclamation )
		// If nResult=IDYES
		// Set bOK = TRUE
		// Else
		// Set bOK = TRUE
		// If bOK
		// Set bOK = SalFileOpen(hFile,strDatei,OF_Create|OF_Write|OF_Text)
		// If bOK
		// Set strTVN = PalWinToDos(PalLF( 'MOVETA', 27))
		// Call SalWaitCursor( TRUE )
		// Call SqlConnection(hSqlUeberwDTAUS)
		// Set strSelect =
		// 'SELECT  hvn || \' \' || hnn, bezdblz, bezdkonto, bezddm, bezderfdat, bezdarztnr, bezdhalternr, bezdrechnr
		// INTO :frmBEZDaten.strEmpfName, :frmBEZDaten.strEmpfBLZ, :frmBEZDaten.strEmpfKonto, :frmBEZDaten.nDM, :frmBEZDaten.dtErfDat,
		// :frmBEZDaten.nArztNr, :frmBEZDaten.nHalterNr, :frmBEZDaten.nRechNr
		// FROM h, bezd
		// WHERE harztnr = bezdarztnr AND hhalternr = bezdhalternr AND hdeaktiv IS NULL AND bezderldat IS NULL AND (bezdiban IS NULL OR bezdbic IS NULL OR bezdsigndat IS NULL)'
		// Set strSelect =
		// 'SELECT  hvn || \' \' || hnn, bezdblz, bezdkonto, bezddm, bezderfdat, bezdarztnr, bezdhalternr, bezdrechnr
		// INTO :frmBEZDaten.strEmpfName, :frmBEZDaten.strEmpfBLZ, :frmBEZDaten.strEmpfKonto, :frmBEZDaten.nDM, :frmBEZDaten.dtErfDat,
		// :frmBEZDaten.nArztNr, :frmBEZDaten.nHalterNr, :frmBEZDaten.nRechNr
		// FROM h, bezd
		// WHERE harztnr = bezdarztnr AND hhalternr = bezdhalternr AND bezderldat IS NULL '
		// Call SqlHandleExec(hSqlUeberwDTAUS,strSelect,'Fehler',nCount)
		// Call SqlFetchNext(hSqlUeberwDTAUS,nFetch)
		// Call PalPut128( '0128ALK2595013000000000' || strTVN)
		// Call PalPut128(SalStrMidX( SalDateToStrX(SalDateCurrent()), 0,2) || SalStrMidX( SalDateToStrX(SalDateCurrent()), 3,2)
		// || SalStrMidX( SalDateToStrX(SalDateCurrent()), 6,2)
		// || '    ' || PalStrNullen('7006573', 10) || '0000000000' || PalLF('',47) || '1')
		// While nFetch != FETCH_EOF
		// Set strAbsBLZ = '25950130'
		// Set strAbsKonto = PalStrNullen('7006573',10)
		// Set strEmpfName = PalWinToDos( PalLF(SalStrUpperX(strEmpfName),27 ))
		// Set strEmpfBLZ = PalStrNullen(PalWinToDos( strEmpfBLZ ),8)
		// Set strEmpfKonto = PalStrNullen(PalWinToDos( strEmpfKonto ), 10)
		// Set strVerw1 = 'EINZUG ' || PalStrNum( nArztNr, 4, 0 ) || 'H' || PalStrNum( nHalterNr,5,0)
		// Set strVerw1 = PalWinToDos( PalLF(strVerw1,27 ))
		// Set strVerw2 = 'RECHNUNG ' || PalStrNum( nArztNr, 4, 0 ) || 'R' || PalStrNum( nRechNr,5,0)
		// Set strVerw2 = PalWinToDos( PalLF(strVerw2,27 ))
		// Set strVerw3 = ''
		// Set strVerw4 = ''
		// Call PalPut128( '0245C' || strAbsBLZ || strEmpfBLZ
		// || strEmpfKonto || '0000000000000' || '05000 ' || '00000000000'
		// || strAbsBLZ || strAbsKonto || PalNullen( nDM *100, 11) || '   '
		// || strEmpfName  )
		// Call PalPut128( '        ' )
		// Call PalPut128(strTVN)
		// Call PalPut128( strVerw1 )
		// Call PalPut128( '1  ' || '02' || '01' ||  strEmpfName )
		// Call PalPut128('02' ||  strVerw2 )
		// Call PalPut128( '           ')
		// 21.04.11 Ä555
		// Call PalPut128('02' ||  strVerw3 )
		// Call PalPut128('02' ||  strVerw4 )
		// Call PalPut128('02                           ' )
		// Call PalPut128('02                           ' )
		// Call PalPut128( '            ')
		// Ende Else
		// Set nSumBLZ = nSumBLZ + SalStrToNumber( strEmpfBLZ)
		// Set nSumKonto = nSumKonto + SalStrToNumber( strEmpfKonto)
		// Set nSumDM = nSumDM + nDM
		// Set nSumSatz = nSumSatz + 1
		// Call SqlImmedX( 'INSERT INTO bez (bezbearbeiter, bezbearbdatum, bezarztnr, bezhalternr, bezrechnr, bezdm)
		// VALUES(:frmMain.strUser, SYSDATETIME, :frmBEZDaten.nArztNr, :frmBEZDaten.nHalterNr, :frmBEZDaten.nRechNr, :frmBEZDaten.nDM)' )
		// Call SqlImmedX('UPDATE bezd SET bezderldat = SYSDATETIME WHERE bezderfdat = :frmBEZDaten.dtErfDat')
		// Call SalStatusSetText(hWndForm,'Einzug '  || ' € '||SalNumberToStrX(nDM,2) || '  ' || strEmpfName)
		// Call SqlFetchNext(hSqlUeberwDTAUS,nFetch)
		// Call SqlCommit( hSqlUeberwDTAUS )
		// Call PalPut128( '0128E     ' || PalNullen( nSumSatz, 7) || '0000000000000'
		// || PalNullen( nSumKonto, 17)    || PalNullen( nSumBLZ, 17)  || PalNullen( nSumDM*100, 13)
		// || PalLF('', 51))
		// Call SalFileClose(hFile)
		// Call SqlDisconnect(hSqlUeberwDTAUS)
		// Call SalMessageBox( 'Bitte verarbeiten Sie die Datei
		// 
		// ' || strDatei || '
		// 
		// in SFirm.', 'Verarbeitung abgeschlossen', MB_Ok|MB_IconAsterisk)
		// 15.09.06 Ä30 +  And nBankNr != 12400
		// Call PalHoleTabelle( dfArztNr, dfHalterNr )
		// Call SalWaitCursor( FALSE )
		// Call SalStatusSetText(hWndForm,'Übergabe beendet')
		/// <summary>
		/// schreibe String als SalFilePutChar
		/// </summary>
		/// <param name="str128"></param>
		/// <returns></returns>
		public SalNumber PalPut128(SalString str128)
		{
			#region Local Variables
			SalNumber nDispl = 0;
			SalNumber nByte = 0;
			SalBoolean bReturn = false;
			SalString strDummy = "";
			#endregion
			
			#region Actions
			using (new SalContext(this))
			{
				nDispl = str128.Length;
				nDispl = 0;
				while (nDispl < str128.Length) 
				{
					strDummy = str128.Mid(nDispl, 1);
					nByte = Sal.StrLop(ref strDummy);
					hFile.PutChar(nByte);
					nDispl = nDispl + 1;
				}
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="strDruck"></param>
		/// <returns></returns>
		public SalNumber Drucke(SalString strDruck)
		{
			#region Actions
			using (new SalContext(this))
			{
				hFile.PutString(strDruck);
			}

			return 0;
			#endregion
		}

		/// <summary>
		/// </summary>
		/// <param name="strOrdner"></param>
		/// <returns></returns>
		public SalNumber PalMakeDocument(SalString strOrdner)
		{
			#region Local Variables
			SqlLocals.PalMakeDocumentLocals locals = new SqlLocals.PalMakeDocumentLocals();
			#endregion

			#region Actions
			using (new SalContext(this, locals))
			{

				// PPJ: Assign parameters to the locals instance.
				locals.strOrdner = strOrdner;

				nSumDM = 0;
				nSumSatz = 0;
				Sal.WaitCursor(true);
				Int.SqlConnection(ref hSqlUeberwDTAUS);
				strSelect = @"SELECT  hvn || ' ' || hnn, bezdblz, bezdkonto, bezddm, bezderfdat, bezdarztnr, bezdhalternr, bezdrechnr, bezdsigndat , bezdbic, bezdiban
INTO :frmBEZDaten.strEmpfName, :frmBEZDaten.strEmpfBLZ, :frmBEZDaten.strEmpfKonto, :frmBEZDaten.nDM, :frmBEZDaten.dtErfDat,
:frmBEZDaten.nArztNr, :frmBEZDaten.nHalterNr, :frmBEZDaten.nRechNr, :frmBEZDaten.dtBEZSignDat, :frmBEZDaten.strBEZBIC, :frmBEZDaten.strBEZIban
FROM h, bezd
WHERE harztnr = bezdarztnr AND hhalternr = bezdhalternr AND hdeaktiv IS NULL AND bezderldat IS NULL AND (bezdiban IS NOT NULL AND bezdbic IS NOT NULL AND bezdsigndat IS NOT NULL)";
				Int.SqlHandleExec(hSqlUeberwDTAUS, strSelect, "Fehler", ref Var.nCount);
				nFetch = hSqlUeberwDTAUS.FetchNext();
				//FC:FINAL: Änderungen XML
				// XML Kopf
				locals.oDoc = new XmlDocument();
				XmlDeclaration xmlDeclaration = locals.oDoc.CreateXmlDeclaration("1.0", "UTF-8", "no");
				//locals.oDoc.createNewDoc("", "Document");
				//locals.oDoc.getDocumentElement(locals.oRoot);
				locals.oRoot = locals.oDoc.CreateElement("Document", "");
				locals.oDoc.AppendChild(locals.oRoot);
				locals.oDoc.InsertBefore(xmlDeclaration, locals.oRoot);
				// 22.09.21 Ä1971 pain.008.002.02 -> pain.008.001.02
				locals.strns = "urn:iso:std:iso:20022:tech:xsd:pain.008.001.02";
				locals.strxsi = "http://www.w3.org/2001/XMLSchema-instance";
				locals.strsl = "urn:iso:std:iso:20022:tech:xsd:pain.008.001.02 pain.008.001.02.xsd";
				//FC:FINAL:#59 Setze Xml-Attribute
                XmlAttribute xmlns = locals.oDoc.CreateAttribute("xmlns");
                xmlns.Value = locals.strns;
                locals.oRoot.Attributes.Append(xmlns);
                XmlAttribute xmlnsxsi = locals.oDoc.CreateAttribute("xmlns:xsi");
                xmlnsxsi.Value = locals.strxsi;
                locals.oRoot.Attributes.Append(xmlnsxsi);
                XmlAttribute schemaLocation = locals.oDoc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
                schemaLocation.Value = locals.strsl;
                locals.oRoot.Attributes.Append(schemaLocation);
				//locals.oElement = new XMLElement();
                //locals.oDoc.createElement(locals.oTrfInit, "CstmrDrctDbtInitn");
                locals.oTrfInit = locals.oDoc.CreateElement("CstmrDrctDbtInitn");
				locals.oRoot.AppendChild(locals.oTrfInit);
				// Group Header
				locals.oGrpHdr = locals.oDoc.CreateElement("GrpHdr");
				locals.oTrfInit.AppendChild(locals.oGrpHdr);
				locals.oElement = locals.oDoc.CreateElement("MsgId");
				locals.oElement.InnerText = Int.PalDateToStrJJJJMMTThhmmsst(SalDateTime.Current);
				locals.oGrpHdr.AppendChild(locals.oElement);
				locals.oElement = locals.oDoc.CreateElement("CreDtTm");
				locals.oElement.InnerText = Int.PalDateToStrISO(SalDateTime.Current);
				locals.oGrpHdr.AppendChild(locals.oElement);
				locals.oNbOfTxs = locals.oDoc.CreateElement("NbOfTxs");
				locals.oGrpHdr.AppendChild(locals.oNbOfTxs);

				locals.oTemp = locals.oDoc.CreateElement("InitgPty");
				locals.oGrpHdr.AppendChild(locals.oTemp);
				locals.oElement = locals.oDoc.CreateElement("Nm");
				// 17.11.21 F4832 TV Nds. -> Moveta r.V.k.V.
				locals.oElement.InnerText = "Moveta r.V.k.V.";
				locals.oTemp.AppendChild(locals.oElement);
				// Daten
				locals.oPmtInf = locals.oDoc.CreateElement("PmtInf");
				locals.oTrfInit.AppendChild(locals.oPmtInf);
				locals.oElement = locals.oDoc.CreateElement("PmtInfId");
				locals.oElement.InnerText = "Payment-Information-ID-4711";
				locals.oPmtInf.AppendChild(locals.oElement);
				locals.oElement = locals.oDoc.CreateElement("PmtMtd");
				locals.oElement.InnerText = "DD";
				locals.oPmtInf.AppendChild(locals.oElement);
				locals.oPmtNbOfTxs = locals.oDoc.CreateElement("NbOfTxs");
				locals.oPmtInf.AppendChild(locals.oPmtNbOfTxs);
				locals.oPmtCtrlSum = locals.oDoc.CreateElement("CtrlSum");
				locals.oPmtInf.AppendChild(locals.oPmtCtrlSum);
				// Call oDoc.createElement( oTemp, 'PmtTpInf' )
				// Call oPmtInf.appendChild( oTemp )
				// Call oDoc.createElement( oTemp1, 'SvcLvl' )
				// Call oTemp.appendChild( oTemp1 )
				// Call oDoc.createElement( oTemp2, 'Cd' )
				// Call oTemp2.setTextContent( 'SEPA' )
				// Call oTemp2.appendChild( oTemp1 )
				locals.oTemp1 = locals.oDoc.CreateElement("PmtTpInf");
				locals.oPmtInf.AppendChild(locals.oTemp1);
				locals.oTemp2 = locals.oDoc.CreateElement("SvcLvl");
				locals.oTemp1.AppendChild(locals.oTemp2);
				locals.oElement = locals.oDoc.CreateElement("Cd");
				locals.oElement.InnerText = "SEPA";
				locals.oTemp2.AppendChild(locals.oElement);
				locals.oTemp2 = locals.oDoc.CreateElement("LclInstrm");
				locals.oTemp1.AppendChild(locals.oTemp2);
				locals.oElement = locals.oDoc.CreateElement("Cd");
				locals.oElement.InnerText = "CORE";
				locals.oTemp2.AppendChild(locals.oElement);

				locals.oElement = locals.oDoc.CreateElement("SeqTp");
				locals.oElement.InnerText = "RCUR";
				locals.oTemp1.AppendChild(locals.oElement);

				locals.oElement = locals.oDoc.CreateElement("ReqdColltnDt");
				// gewünschtes Ausführungsdatum
				locals.oElement.InnerText = Int.PalDateToStrISO(SalDateTime.Current).Left(10);
				locals.oPmtInf.AppendChild(locals.oElement);

				locals.oTemp = locals.oDoc.CreateElement("Cdtr");
				locals.oPmtInf.AppendChild(locals.oTemp);
				locals.oElement = locals.oDoc.CreateElement("Nm");
				// 17.11.21 F4832 TV Nds. -> Moveta r.V.k.V.
				locals.oElement.InnerText = "Moveta r.V.k.V.";
				locals.oTemp.AppendChild(locals.oElement);
				// Call oDoc.createElement( oTemp, 'DbtrAcct' )
				// Call oPmtInf.appendChild( oTemp )
				// Call oDoc.createElement( oTemp1, 'Id' )
				// Call oTemp.appendChild( oTemp1 )
				// Call oDoc.createElement( oElement, 'IBAN' )
				// Call oElement.setTextContent( 'DE13259501300007006573' )
				// Call oTemp.appendChild( oElement )
				locals.oTemp1 = locals.oDoc.CreateElement("CdtrAcct");
				locals.oPmtInf.AppendChild(locals.oTemp1);
				locals.oTemp2 = locals.oDoc.CreateElement("Id");
				locals.oTemp1.AppendChild(locals.oTemp2);
				locals.oElement = locals.oDoc.CreateElement("IBAN");
				locals.oElement.InnerText = "DE13259501300007006573";
				locals.oTemp2.AppendChild(locals.oElement);

				locals.oTemp = locals.oDoc.CreateElement("CdtrAgt");
				locals.oPmtInf.AppendChild(locals.oTemp);
				locals.oTemp1 = locals.oDoc.CreateElement("FinInstnId");
				locals.oTemp.AppendChild(locals.oTemp1);
				locals.oElement = locals.oDoc.CreateElement("BIC");
				locals.oElement.InnerText = "NOLADE21HIK";
				locals.oTemp1.AppendChild(locals.oElement);
				locals.oElement = locals.oDoc.CreateElement("ChrgBr");
				locals.oElement.InnerText = "SLEV";
				locals.oPmtInf.AppendChild(locals.oElement);
				locals.oTemp = locals.oDoc.CreateElement("CdtrSchmeId");
				locals.oPmtInf.AppendChild(locals.oTemp);
				locals.oTemp1 = locals.oDoc.CreateElement("Id");
				locals.oTemp.AppendChild(locals.oTemp1);
				locals.oTemp2 = locals.oDoc.CreateElement("PrvtId");
				locals.oTemp1.AppendChild(locals.oTemp2);
				locals.oTemp3 = locals.oDoc.CreateElement("Othr");
				locals.oTemp2.AppendChild(locals.oTemp3);
				locals.oTemp4 = locals.oDoc.CreateElement("Id");
				locals.oTemp4.InnerText = "DE41ZZZ00000248909";
				locals.oTemp3.	AppendChild(locals.oTemp4);
				locals.oTemp5 = locals.oDoc.CreateElement("SchmeNm");
				locals.oTemp3.AppendChild(locals.oTemp5);
				locals.oElement = locals.oDoc.CreateElement("Prtry");
				locals.oElement.InnerText = "SEPA";
				locals.oTemp5.AppendChild(locals.oElement);
				// Begin der Datensätze
				while (nFetch != Sys.FETCH_EOF)
				{
					// Set strSelect =
					// 'SELECT  hvn || \' \' || hnn, bezdblz, bezdkonto, bezddm, bezderfdat, bezdarztnr, bezdhalternr, bezdrechnr
					// INTO :frmBEZDaten.strEmpfName, :frmBEZDaten.strEmpfBLZ, :frmBEZDaten.strEmpfKonto, :frmBEZDaten.nDM, :frmBEZDaten.dtErfDat,
					// :frmBEZDaten.nArztNr, :frmBEZDaten.nHalterNr, :frmBEZDaten.nRechNr
					// FROM h, bezd
					// WHERE harztnr = bezdarztnr AND hhalternr = bezdhalternr AND bezderldat IS NULL'
					locals.oTemp = locals.oDoc.CreateElement("DrctDbtTxInf");
					locals.oPmtInf.AppendChild(locals.oTemp);
					locals.oTemp1 = locals.oDoc.CreateElement("PmtId");
					locals.oTemp.AppendChild(locals.oTemp1);
					// Kundenreferenz, mit Sparkasse noch abklären
					locals.oElement = locals.oDoc.CreateElement("EndToEndId");
					strBEZID = Int.PalDateToStrJJJJMMTThhmmsst(SalDateTime.Current);
					locals.oElement.InnerText = strBEZID;
					locals.oTemp1.AppendChild(locals.oElement);
					locals.oElement = locals.oDoc.CreateElement("InstdAmt");
					locals.oTemp.AppendChild(locals.oElement);
					// Betrag
					locals.oElement.InnerText = Int.PalDelZeichen(Int.PalStrNumDecPoint(nDM, 10, 2), " ");
					locals.oElement.SetAttribute("Ccy", "EUR");
					locals.oTemp.AppendChild(locals.oElement);

					locals.oTemp1 = locals.oDoc.CreateElement("DrctDbtTx");
					locals.oTemp.AppendChild(locals.oTemp1);
					locals.oTemp2 = locals.oDoc.CreateElement("MndtRltdInf");
					locals.oTemp1.AppendChild(locals.oTemp2);
					// Mandats-ID
					locals.oTemp3 = locals.oDoc.CreateElement("MndtId");
					locals.oTemp3.InnerText = "MR" + Int.PalStrNum0(nArztNr, 4, 0) + Int.PalStrNum0(nHalterNr, 5, 0);
					locals.oTemp2.AppendChild(locals.oTemp3);

					locals.oTemp3 = locals.oDoc.CreateElement("DtOfSgntr");
					locals.oTemp3.InnerText = Int.PalDateToStrISO(dtBEZSignDat).Left(10);
					locals.oTemp2.AppendChild(locals.oTemp3);
					// Mandat verändert? (Mit Bank klären)
					locals.oTemp3 = locals.oDoc.CreateElement("AmdmntInd");
					locals.oTemp3.InnerText = "false";
					locals.oTemp2.AppendChild(locals.oTemp3);

					locals.oTemp1 = locals.oDoc.CreateElement("DbtrAgt");
					locals.oTemp.AppendChild(locals.oTemp1);
					locals.oTemp2 = locals.oDoc.CreateElement("FinInstnId");
					locals.oTemp1.AppendChild(locals.oTemp2);
					locals.oElement = locals.oDoc.CreateElement("BIC");
					// BIC-Zahler-BIC
					locals.oElement.InnerText = strBEZBIC;
					locals.oTemp2.AppendChild(locals.oElement);
					locals.oTemp1 = locals.oDoc.CreateElement("Dbtr");
					locals.oTemp.AppendChild(locals.oTemp1);
					locals.oElement = locals.oDoc.CreateElement("Nm");
					// Debitorname
					locals.oElement.InnerText = strEmpfName;
					locals.oTemp1.AppendChild(locals.oElement);
					locals.oTemp1 = locals.oDoc.CreateElement("DbtrAcct");
					locals.oTemp.AppendChild(locals.oTemp1);
					locals.oTemp2 = locals.oDoc.CreateElement("Id");
					locals.oTemp1.AppendChild(locals.oTemp2);
					locals.oElement = locals.oDoc.CreateElement("IBAN");
					locals.oElement.InnerText = strBEZIban;
					locals.oTemp2.AppendChild(locals.oElement);
					locals.oTemp1 = locals.oDoc.CreateElement("RmtInf");
					locals.oTemp.AppendChild(locals.oTemp1);
					locals.oElement = locals.oDoc.CreateElement("Ustrd");
					strVerw1 = "EINZUG " + Int.PalStrNum(nArztNr, 4, 0) + "H" + Int.PalStrNum(nHalterNr, 5, 0);
					strVerw1 = Int.PalWinToDos(Int.PalLF(strVerw1, 35));
					strVerw2 = "RECHNUNG " + Int.PalStrNum(nArztNr, 4, 0) + "R" + Int.PalStrNum(nRechNr, 5, 0);
					strVerw2 = Int.PalWinToDos(Int.PalLF(strVerw2, 35));
					locals.oElement.InnerText = strVerw1 + strVerw2 + Int.PalLF(" ", 70);
					locals.oTemp1.AppendChild(locals.oElement);

					// Ende Else
					nSumDM = nSumDM + nDM;
					nSumSatz = nSumSatz + 1;
					Int.SqlImmedX(@"INSERT INTO bez (bezbearbeiter, bezbearbdatum, bezarztnr, bezhalternr, bezrechnr, bezdm)
VALUES(:frmMain.strUser, SYSDATETIME, :frmBEZDaten.nArztNr, :frmBEZDaten.nHalterNr, :frmBEZDaten.nRechNr, :frmBEZDaten.nDM)");
					Int.SqlImmedX("UPDATE bezd SET bezderldat = SYSDATETIME, bezdid = :frmBEZDaten.strBEZID WHERE bezderfdat = :frmBEZDaten.dtErfDat");
					this.SetStatusBarText("Einzug " + " € " + nDM.ToString(2) + "  " + strEmpfName);
					nFetch = hSqlUeberwDTAUS.FetchNext();
				}

				locals.oNbOfTxs.InnerText = nSumSatz.ToString(0);
				// 15.04.14 F1987
				// Call oPmtNbOfTxs.setTextContent( '1' )
				locals.oPmtNbOfTxs.InnerText = nSumSatz.ToString(0);

				locals.oPmtCtrlSum.InnerText = Int.PalStringStrip(Int.PalStrNumDecPoint(nSumDM, 8, 2), " ");
				//locals.oDoc.setFeature(Const.XMLDOC_FORMAT_PRETTY_PRINT, 1);
				//locals.oDoc.writeToFile(locals.strOrdner + "Lastschriften.xml");
				// Save the document with pretty-printing
				locals.oDoc.Save(locals.strOrdner + "Lastschriften.xml");
                // Ende XML
                hSqlUeberwDTAUS.Commit();
				hSqlUeberwDTAUS.Disconnect();

				Sal.MessageBox(@"Bitte verarbeiten Sie die Datei

" + locals.strOrdner + @"Lastschriften.xml

in SFirm.", "Verarbeitung abgeschlossen", (Sys.MB_Ok | Sys.MB_IconAsterisk));

				// 15.09.06 Ä30 +  And nBankNr != 12400

				PalHoleTabelle(dfArztNr.Number, dfHalterNr.Number);
				Sal.WaitCursor(false);
				this.SetStatusBarText("Übergabe beendet");

				return 0;
			}
			#endregion
		}
		#endregion

		#region Window Actions

		/// <summary>
		/// frmBEZDaten WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmBEZDaten_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmBEZDaten_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Destroy:
					this.frmBEZDaten_OnSAM_Destroy(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmBEZDaten_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.WaitCursor(true);
			// Call SalHideWindow( pbExport )
			// 27.04.12 Ä788
			this.cbNUR.Checked = true;

			Int.SqlConnection(ref this.hSqlUser);
			this.PalHoleTabelle(SalNumber.Null, SalNumber.Null);

			// Call SalContextMenuSetPopup( tblBEZD, 'frmBEZDatenRightClick', 0)

			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_Destroy event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmBEZDaten_OnSAM_Destroy(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlUser.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.pbDrucken_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// LL
			dlgLlDruck.ModalDialog(App.frmMain, "BEZ-Buchungen.lst", "");
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.pbDrucken, "Liste der Bankeinzüge drucken");
			return;
			#endregion
		}
		
		/// <summary>
		/// pbExportSEPA WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbExportSEPA_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.pbExportSEPA_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Click:
					this.pbExportSEPA_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbExportSEPA_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.pbExportSEPA, "Bankeinzüge mit IBAN, BIC und Signaturdatum für SFirm und Übergabe an Buchhaltung");
			return;
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbExportSEPA_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (dlgLaufwerk.ModalDialog(this, "Bankeinzüge mit IBAN, BIC und Signaturdatum für SFirm", ref this.strDir)) 
			{
			}
            // 13.08.13 Ä903
            // Call PalDTAUS( strDir )
            this.PalMakeDocument(this.strDir);
			#endregion
		}
		
		/// <summary>
		/// dfArztNr WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfArztNr_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfArztNr_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfArztNr_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalHoleTabelle(this.dfArztNr.Number, SalNumber.Null);
			#endregion
		}
		
		/// <summary>
		/// dfHalterNr WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfHalterNr_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfHalterNr_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfHalterNr_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalHoleTabelle(this.dfArztNr.Number, this.dfHalterNr.Number);
			#endregion
		}
		
		/// <summary>
		/// cbNUR WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbNUR_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.cbNUR_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cbNUR_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalHoleTabelle(this.dfArztNr.Number, this.dfHalterNr.Number);
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.DestroyWindow();
			#endregion
		}
		#endregion
		
		#region tblBEZD
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblBEZDTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmBEZDaten _frmBEZDaten = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblBEZDTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmBEZDaten frmBEZDaten
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmBEZDaten == null) 
					{
						_frmBEZDaten = (frmBEZDaten)this.FindForm();
					}
					return _frmBEZDaten;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblBEZDTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblBEZDTableWindow)SalWindow.FromHandle(handle, typeof(tblBEZDTableWindow)));
			}
			#endregion
			
			#region Window Actions
			
			/// <summary>
			/// colID WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colID_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colID_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colID_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				if (Int.PalIBANPruef(this.colIBAN.Text)) 
				{
					Int.SqlImmed("UPDATE h SET hbankeinzug=1, hbeziban = :frmBEZStamm.tblBEZS.colIBAN WHERE harztnr = :frmBEZStamm.tblBEZS.colArztNr AND hhalternr = :frmBEZStamm.tblBEZS.colHalterNr");
				}
				else
				{
					Sal.MessageBox("Die eingegebene IBAN ist ungültig!", "Fehlerhafte Eingabe", Sys.MB_Ok);
					e.Return = false;
					return;
				}
				#endregion
			}
			
			/// <summary>
			/// colIBAN WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colIBAN_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colIBAN_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colIBAN_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				if (Int.PalIBANPruef(this.colIBAN.Text)) 
				{
					Int.SqlImmed("UPDATE h SET hbankeinzug=1, hbeziban = :frmBEZStamm.tblBEZS.colIBAN WHERE harztnr = :frmBEZStamm.tblBEZS.colArztNr AND hhalternr = :frmBEZStamm.tblBEZS.colHalterNr");
				}
				else
				{
					Sal.MessageBox("Die eingegebene IBAN ist ungültig!", "Fehlerhafte Eingabe", Sys.MB_Ok);
					e.Return = false;
					return;
				}
				#endregion
			}
			
			/// <summary>
			/// colBIC WindowActions Handler
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colBIC_WindowActions(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				switch (e.ActionType)
				{
					case Sys.SAM_Validate:
						this.colBIC_OnSAM_Validate(sender, e);
						break;
				}
				#endregion
			}
			
			/// <summary>
			/// SAM_Validate event handler.
			/// </summary>
			/// <param name="sender"></param>
			/// <param name="e"></param>
			private void colBIC_OnSAM_Validate(object sender, WindowActionsEventArgs e)
			{
				#region Actions
				e.Handled = true;
				if (Int.PalIBANPruef(this.colIBAN.Text)) 
				{
					Int.SqlImmed("UPDATE h SET hbankeinzug=1, hbeziban = :frmBEZStamm.tblBEZS.colIBAN WHERE harztnr = :frmBEZStamm.tblBEZS.colArztNr AND hhalternr = :frmBEZStamm.tblBEZS.colHalterNr");
				}
				else
				{
					Sal.MessageBox("Die eingegebene IBAN ist ungültig!", "Fehlerhafte Eingabe", Sys.MB_Ok);
					e.Return = false;
					return;
				}
				#endregion
			}
			#endregion
		}
		#endregion
		
		#region SqlLocals
		
		/// <summary>
		/// Container class used to group the inner classes that contain
		/// the local variables that have been extracted from methods that use sql calls.
		/// </summary>
		private class SqlLocals
		{
			
			/// <summary>
			/// Contains the local variables that have been extracted from the
			/// method that uses sql calls and might need to access local bind variables.
			/// </summary>
			public class PalHoleTabelleLocals
			{
				public SalString strSelect1 = "";
				public SalNumber nArzt = 0;
				public SalNumber nHalter = 0;
			}
			
			/// <summary>
			/// Contains the local variables that have been extracted from the
			/// method that uses sql calls and might need to access local bind variables.
			/// </summary>
			public class PalMakeDocumentLocals
			{
				public XmlDocument oDoc = new XmlDocument();
                public XmlAttribute oAttr;
                public XmlElement oElement;
                public XmlElement oRoot;
                public XmlNode oNode;
                public XmlElement oTrfInit;
                public XmlElement oGrpHdr;
                public XmlElement oNbOfTxs;
                public XmlElement oPmtNbOfTxs;
                public XmlElement oPmtCtrlSum;
                public XmlElement oTemp;
                public XmlElement oTemp1;
                public XmlElement oTemp2;
                public XmlElement oTemp3;
                public XmlElement oTemp4;
                public XmlElement oTemp5;
                public XmlElement oTemp6;
                public XmlElement oTemp7;
                public XmlElement oTemp8;
                public XmlElement oTemp9;
                public XmlElement oTemp10;
                public XmlElement oPmtInf;
                public string strxsi = "";
                public string strns = "";
                public string strsl = "";
                public string strOrdner = "";
			}
		}
		#endregion
	}
}
