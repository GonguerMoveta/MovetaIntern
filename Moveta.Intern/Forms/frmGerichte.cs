// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmGerichte : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlGerichte = SalSqlHandle.Null;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmGerichte()
		{
			// Assign global reference.
			App.frmGerichte = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmGerichte CreateWindow(Control owner)
		{
			frmGerichte frm = new frmGerichte();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmGerichte FromHandle(SalWindowHandle handle)
		{
			return ((frmGerichte)SalWindow.FromHandle(handle, typeof(frmGerichte)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// dfPLZ WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfPLZ_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Validate:
					this.dfPLZ_OnSAM_Validate(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Validate event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfPLZ_OnSAM_Validate(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlConnection(ref this.hSqlGerichte);
			Int.SqlImmedSel("SELECT gebez, gestr INTO :frmGerichte.dfAGBez, :frmGerichte.dfAGStr FROM ge WHERE gelg=0 AND geplz = :frmGerichte.dfPLZ");
			Int.SqlImmedSel("SELECT gebez, gestr INTO :frmGerichte.dfLGBez, :frmGerichte.dfLGStr FROM ge WHERE gelg=1 AND geplz = :frmGerichte.dfPLZ");
			this.tblGerichte.ResetTable();
			if (this.tblGerichte.Populate(this.hSqlGerichte, @"SELECT gelg, gebez, gestr INTO :frmGerichte.tblGerichte.colLG, :frmGerichte.tblGerichte.colBez, :frmGerichte.tblGerichte.colStr
FROM ge WHERE geplz = :frmGerichte.dfPLZ", Sys.TBL_FillAll)) 
			{
			}
			this.hSqlGerichte.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// pbOK WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOK_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOK_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOK_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 29.03.22 Ä2010
			if (this.dfAGBez.Text != "" && this.dfAGStr.Text == "") 
			{
				Sal.MessageBox("Die Straße des Amtsgerichtes fehlt noch. Bitte nachtragen und erneut Ok anklicken.", "Daten fehlen", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else if (this.dfLGBez.Text != "" && this.dfLGStr.Text == "") 
			{
				Sal.MessageBox("Die Straße des Landgerichtes fehlt noch. Bitte nachtragen und erneut Ok anklicken.", "Daten fehlen", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else if (this.dfAGBez.Text == "" && this.dfAGStr.Text != "") 
			{
				Sal.MessageBox("Die Bezeichnung des Amtsgerichtes fehlt noch. Bitte nachtragen und erneut Ok anklicken.", "Daten fehlen", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else if (this.dfLGBez.Text == "" && this.dfLGStr.Text != "") 
			{
				Sal.MessageBox("Die Bezeichnung des Landgerichtes fehlt noch. Bitte nachtragen und erneut Ok anklicken.", "Daten fehlen", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else
			{
				Int.SqlImmed("DELETE FROM ge WHERE geplz = :frmGerichte.dfPLZ");
				if (this.dfAGBez.Text != "") 
				{
					Int.SqlImmed("INSERT INTO ge (gelg, geplz, gebez, gestr) VALUES( 0, :frmGerichte.dfPLZ, :frmGerichte.dfAGBez, :frmGerichte.dfAGStr)");
				}
				if (this.dfLGBez.Text != "") 
				{
					Int.SqlImmed("INSERT INTO ge (gelg, geplz, gebez, gestr) VALUES( 1, :frmGerichte.dfPLZ, :frmGerichte.dfAGBez, :frmGerichte.dfAGStr)");
				}
				this.dfPLZ.PostMessage(Sys.SAM_Validate, 0, 0);
			}
			#endregion
		}
		#endregion
		
		#region tblGerichte
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblGerichteTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmGerichte _frmGerichte = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblGerichteTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmGerichte frmGerichte
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmGerichte == null) 
					{
						_frmGerichte = (frmGerichte)this.FindForm();
					}
					return _frmGerichte;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblGerichteTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblGerichteTableWindow)SalWindow.FromHandle(handle, typeof(tblGerichteTableWindow)));
			}
			#endregion
		}
		#endregion
	}
}
