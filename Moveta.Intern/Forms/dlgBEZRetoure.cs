// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// Ä1436
	/// </summary>
	/// <param name="nPArztNr"></param>
	/// <param name="nPHalterNr"></param>
	/// <param name="nPRechNr"></param>
	/// <param name="dtPErfDat"></param>
	public partial class dlgBEZRetoure : SalDialogBox
	{
		#region Window Parameters
		public SalNumber nPArztNr;
		public SalNumber nPHalterNr;
		public SalNumber nPRechNr;
		public SalDateTime dtPErfDat;
		#endregion
		
		#region Window Variables
		public SalNumber nRetAnz = 0;
		public SalDateTime dtLtztEinzug = SalDateTime.Null;
		public SalBoolean bBEZRet = false;
		public SalNumber nTANr2 = 0;
		public SalString strTAN1 = "";
		public SalString strTAN2 = "";
		public SalString strTAStr = "";
		public SalString strTAOrt = "";
		public SalString strTALand = "";
		public SalString strTHTi = "";
		public SalString strTHVN = "";
		public SalString strTHNN = "";
		public SalString strTHN2 = "";
		public SalString strTHStr = "";
		public SalString strTHOrt = "";
		public SalString strTHLand = "";
		public SalString strTHPMEmail = "";
		public SalNumber nHBRetKosten = 0;
		public SalString lsText = "";
		public SalDateTime dtNaechstEinzug = SalDateTime.Null;
		public SalDateTime dtBuchDat = SalDateTime.Null;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public dlgBEZRetoure(SalNumber nPArztNr, SalNumber nPHalterNr, SalNumber nPRechNr, SalDateTime dtPErfDat)
		{
			// Assign global reference.
			App.dlgBEZRetoure = this;
			// Window Parameters initialization.
			this.nPArztNr = nPArztNr;
			this.nPHalterNr = nPHalterNr;
			this.nPRechNr = nPRechNr;
			this.dtPErfDat = dtPErfDat;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the modal dialog.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static SalNumber ModalDialog(Control owner, SalNumber nPArztNr, SalNumber nPHalterNr, SalNumber nPRechNr, SalDateTime dtPErfDat)
		{
			dlgBEZRetoure dlg = new dlgBEZRetoure(nPArztNr, nPHalterNr, nPRechNr, dtPErfDat);
			SalNumber ret = dlg.ShowDialog(owner);
			return ret;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static dlgBEZRetoure FromHandle(SalWindowHandle handle)
		{
			return ((dlgBEZRetoure)SalWindow.FromHandle(handle, typeof(dlgBEZRetoure)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// dlgBEZRetoure WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgBEZRetoure_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.dlgBEZRetoure_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dlgBEZRetoure_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.dfArztNr.Number = this.nPArztNr;
			this.dfHalterNr.Number = this.nPHalterNr;
			this.dfRechnungNr.Number = this.nPRechNr;
			Int.SqlImmedSel(@"SELECT aname1 || ' ' || aname2, aname1, aname2, astr, aort, aland, anr2
INTO :dlgBEZRetoure.dfArztName, :dlgBEZRetoure.strTAN1, :dlgBEZRetoure.strTAN2, :dlgBEZRetoure.strTAStr, :dlgBEZRetoure.strTAOrt, :dlgBEZRetoure.strTALand, :dlgBEZRetoure.nTANr2
FROM a WHERE aarztnr = :dlgBEZRetoure.dfArztNr");
			if (this.nTANr2 == 0) 
			{
				this.nTANr2 = this.dfArztNr.Number;
			}
			Int.SqlImmedSel(@"SELECT hvn || ' ' || hnn, hti, hvn, hnn, hname2, hstr, hort, hland, hpmemail
INTO :dlgBEZRetoure.dfHalterName, :dlgBEZRetoure.strTHTi, :dlgBEZRetoure.strTHVN, :dlgBEZRetoure.strTHNN, :dlgBEZRetoure.strTHN2, :dlgBEZRetoure.strTHStr, :dlgBEZRetoure.strTHOrt, :dlgBEZRetoure.strTHLand, :dlgBEZRetoure.strTHPMEmail
FROM h WHERE harztnr = :dlgBEZRetoure.dfArztNr AND hhalternr = :dlgBEZRetoure.dfHalterNr AND hdeaktiv IS NULL");
			if (this.dfRechnungNr.Number == Sys.NUMBER_Null || this.dfRechnungNr.Number == 0) 
			{
				Int.SqlIstDa(@"FROM bezs
WHERE bezsarztnr = :dlgBEZRetoure.dfArztNr AND bezshalternr = :dlgBEZRetoure.dfHalterNr AND bezserfdat = :dlgBEZRetoure.dtPErfDat AND bezsrechnr IS NULL", ref this.bBEZRet);
				if (this.bBEZRet) 
				{
					Int.SqlImmedSel(@"SELECT bezsanzretoure, bezsltzteinzug INTO :dlgBEZRetoure.nRetAnz, :dlgBEZRetoure.dtLtztEinzug FROM bezs
WHERE bezsarztnr = :dlgBEZRetoure.dfArztNr AND bezshalternr = :dlgBEZRetoure.dfHalterNr AND bezserfdat = :dlgBEZRetoure.dtPErfDat AND bezsrechnr IS NULL");
				}
			}
			else
			{
				Int.SqlIstDa(@"FROM bezs
WHERE bezsarztnr = :dlgBEZRetoure.dfArztNr AND bezshalternr = :dlgBEZRetoure.dfHalterNr AND bezserfdat = :dlgBEZRetoure.dtPErfDat AND bezsrechnr = :dlgBEZRetoure.dfRechnungNr", ref this.bBEZRet);
				if (this.bBEZRet) 
				{
					Int.SqlImmedSel(@"SELECT bezsanzretoure, bezsltzteinzug INTO :dlgBEZRetoure.nRetAnz, :dlgBEZRetoure.dtLtztEinzug FROM bezs
WHERE bezsarztnr = :dlgBEZRetoure.dfArztNr AND bezshalternr = :dlgBEZRetoure.dfHalterNr AND bezserfdat = :dlgBEZRetoure.dtPErfDat AND bezsrechnr = :dlgBEZRetoure.dfRechnungNr");
				}
			}
			if (!(this.bBEZRet)) 
			{
				Sal.MessageBox("Dieser Bankeinzug existiert nicht.", "Nicht vorhanden", (Sys.MB_Ok | Sys.MB_IconStop));
			}
			else
			{
				if (this.nRetAnz == SalNumber.Null) 
				{
					this.nRetAnz = 0;
				}
				this.nRetAnz = this.nRetAnz + 1;
				this.bkgdRetoureNr.Text = this.nRetAnz.ToString(0) + ". Retoure";
				this.dfEinzug.DateTime = SalDateTime.Current + 10;
				// 16.11.16
				if (this.nRetAnz > 2) 
				{
					Sal.MessageBox("Dieser Bankeinzug ist bereits zwei Mal retourniert worden.", "mehr als 2 Mal geht nicht", (Sys.MB_Ok | Sys.MB_IconStop));
					this.pbOk.HideWindow();
				}
			}
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.dfGebuehren.Number == 0 || this.dfGebuehren.Number == Sys.NUMBER_Null) 
			{
				Sal.MessageBox("Die Gebührenhöhe fehlt.", "Fehlende Daten", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else if (this.dfEinzug.DateTime == Sys.DATETIME_Null || this.dfEinzug.DateTime < SalDateTime.Current) 
			{
				Sal.MessageBox("Das Einzugsdatum fehlt oder liegt in der Vergangenheit.", "Fehlende Daten", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			else
			{
				if (this.dtLtztEinzug == SalDateTime.Null) 
				{
					Sal.MessageBox("Der Bankeinzug war noch gar nicht ausgeführt worden und kann daher nicht zurückgesetzt werden.", "Fehler", (Sys.MB_Ok | Sys.MB_IconExclamation));
				}
				else
				{
					// 10.12.18 Ä1809
					// LL
					// Call SalModalDialog( dlgLlDruck, frmMain, 'BEZ-RetoureHalter.crd', '' )
					if (this.rb1.Checked) 
					{
						// LL
						dlgLlDruck.ModalDialog(App.frmMain, "BEZ-RetoureHalter.crd", "");
					}
					else
					{
						// LL
						dlgLlDruck.ModalDialog(App.frmMain, "BEZ-RetoureHalterKL.crd", "");
					}
				}
			}
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (Sys.IDYES == Sal.MessageBox("Wollen Sie das moveta-Programm schließen ?", "Frage", (Sys.MB_YesNo | Sys.MB_IconQuestion)))  // 15.12.10
			{
				// Call SalPostMsg(hWndForm, SAM_Close, 0, 0)
				this.DestroyWindow();
			}
			#endregion
		}
		#endregion
	}
}
