// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	public partial class frmDYMODruck
	{
		
		/// <summary>
		/// Required designer variable.
		/// </summary>
		private System.ComponentModel.IContainer components = null;
		
		#region Window Accessories
		
		/// <summary>
		/// Toolbar control.
		/// </summary>
		protected SalFormToolBar ToolBar;
		
		/// <summary>
		/// Client area panel.
		/// </summary>
		protected SalFormClientArea ClientArea;
		
		/// <summary>
		/// StatusBar control.
		/// </summary>
		protected SalFormStatusBar StatusBar;
		#endregion
		
		
		#region Window Controls
		public SalPushbutton pbAbbruch;
		// 07.08.07 F218
		// Combo Box: cmbBCTabelle
		// List Initialization
		// Text: Kunden
		// Text: Patienten
		// Text: Arzneien
		// Text: Leistungen
		// Text: Texte
		// Text: GOT
		// Text: MED-Liste
		// Message Actions
		protected SalBackgroundText bkgd3;
		public SalComboBox cmbDYMOPrinters;
		// cXSalFlatButton: pbDruck
		// Message Actions
		// On SAM_Click
		// Call PalSetProfileStringR('Vorgabe','BCLabelFile',dfLabel,'Pegasus')
		// Set strBCBarcode = ''
		// Set strBCAdresse = ''
		// If dfBCQuelle = 'Kunden'
		// Call SqlImmedSel('SELECT kbarcode, knam1, knam2, kstr , kplz, kort, kland  INTO :frmBarcodeDruck.strBCBarcode,  :frmBarcodeDruck.strBCN1,  :frmBarcodeDruck.strBCN2,  :frmBarcodeDruck.strBCS,  :frmBarcodeDruck.strBCP,
		// :frmBarcodeDruck.strBCO,  :frmBarcodeDruck.strBCLand FROM k WHERE kken1 = :frmBarcodeDruck.dfKennung')
		// Set strBCAdresse = strBCN1 || '
		// ' || strBCN2 || '
		// ' || strBCS || '
		// ' || strBCP || ' ' || strBCO
		// If strBCLand != ''
		// Set strBCAdresse = strBCAdresse || '
		// ' || strBCLand
		// If strBCBarcode = ''
		// Set strBCBarcode = PalStringToCode39(dfKennung)
		// Set nPCount = 0
		// Set bBCExists = TRUE
		// While bBCExists And nPCount < 32767
		// Set strBCBarcode = 'PEK' || SalNumberToStrX(SalNumberRandom(),0)
		// Call SqlIstDa('FROM k WHERE kbarcode = :frmBarcodeDruck.strBCBarcode', bBCExists)
		// Set nPCount = nPCount + 1
		// If nPCount >= 32766
		// Call SalMessageBox('Es ist kein Barcode mehr frei!', 'Fehler', MB_Ok|MB_IconExclamation)
		// Set strBCBarcode = ''
		// Else
		// Call SqlImmed('UPDATE k SET kbarcode = :frmBarcodeDruck.strBCBarcode WHERE kken1 = :frmBarcodeDruck.dfKennung')
		// If frmBarcodeDruck.strParent = 'frmKundList'
		// Set frmKundList.dfBarcode = strBCBarcode
		// Else If dfBCQuelle = 'Patienten'	! 05.04.07 A58
		// Set strPATKEN = SalStrMidX(strPKennung, SalStrScan(strPKennung, SalNumberToChar(255))+1, 255)
		// Set strPKennung = SalStrLeftX(strPKennung, SalStrScan(strPKennung, SalNumberToChar(255)))
		// Call SqlImmedSel('SELECT patna, patrs, patgs, patgb  INTO :frmBarcodeDruck.strBCPATNA,  :frmBarcodeDruck.strBCPATRS,  :frmBarcodeDruck.strBCPATGS,  :frmBarcodeDruck.dtBCPATGB
		// FROM pa WHERE paken = :frmBarcodeDruck.strPKennung AND patken = :frmBarcodeDruck.strPATKEN')
		// Set strBCAdresse = 'Name: ' || strBCPATNA || '
		// Rasse: ' || strBCPATRS || '
		// Geschlecht: ' || strBCPATGS || '
		// Geb.Dat.: ' || PalDateToStr10(dtBCPATGB) || '
		// Druckdatum: ' || PalDateToStr10(SalDateCurrent())
		// Set strBCBarcode = ' '
		// Else
		// If dfBCQuelle = 'Arzneien'
		// Set strBCTyp = 'A'
		// Else If frmBarcodeDruck.dfBCQuelle = 'Leistungen'
		// Set strBCTyp = 'L'
		// Else If frmBarcodeDruck.dfBCQuelle = 'GOT'
		// Set strBCTyp = 'G'
		// Else If frmBarcodeDruck.dfBCQuelle = 'MED-Liste'
		// Set strBCTyp = 'M'
		// Else If frmBarcodeDruck.dfBCQuelle = 'Texte'
		// Set strBCTyp = 'T'
		// Call SqlImmedSel('SELECT aean INTO :frmBarcodeDruck.strBCBarcode FROM a WHERE atyp = :frmBarcodeDruck.strBCTyp AND aken = :frmBarcodeDruck.dfKennung')
		// If strBCBarcode = ''
		// Set strBCBarcode = PalStringToCode39(dfKennung)
		// Set nPCount = 0
		// Set bBCExists = TRUE
		// While bBCExists And nPCount < 32767
		// Set strBCBarcode = 'PE' || strBCTyp || SalNumberToStrX(SalNumberRandom(),0)
		// Call SqlIstDa('FROM a WHERE aean = :frmBarcodeDruck.strBCBarcode', bBCExists)
		// Set nPCount = nPCount + 1
		// If nPCount >= 32766
		// Call SalMessageBox('Es ist kein Barcode mehr frei!', 'Fehler', MB_Ok|MB_IconExclamation)
		// Set strBCBarcode = ''
		// Else
		// Call SqlImmed('UPDATE a SET aean = :frmBarcodeDruck.strBCBarcode WHERE atyp = :frmBarcodeDruck.strBCTyp AND aken = :frmBarcodeDruck.dfKennung')
		// If frmBarcodeDruck.strParent = 'frmArznList'
		// Set frmArznList.dfEAN = strBCBarcode
		// If strBCBarcode != ''
		// If cmbDYMOPrinters != ''
		// Call cDYMOAddIn.SelectPrinter( cmbDYMOPrinters, bBCExists )
		// If Not bBCExists
		// Call SalMessageBox( cmbDYMOPrinters, 'Fehler bei Druckerauswahl (SelectPrinter)', MB_Ok|MB_IconExclamation)
		// Else
		// Call cDYMOAddIn.Open( dfLabel, bOk )
		// If Not bOk
		// Call SalMessageBox( dfLabel, 'Labeldatei nicht gefunden:', MB_Ok|MB_IconExclamation)
		// Else
		// Call cDYMOLabels.SetField( 'BARCODE', strBCBarcode, bOk )
		// Call cDYMOLabels.SetField( 'KENNUNG', dfKennung, bOk )
		// Call cDYMOLabels.SetField( 'Adresse', strBCAdresse, bOk )
		// Call cDYMOAddIn.Print( dfAnzahl, TRUE, bOk )
		// If Not bOk
		// Call SalMessageBox( dfLabel, 'Druck nicht erfolgreich', MB_Ok|MB_IconExclamation)
		public SalPushbutton pbDruck;
		protected SalBackgroundText bkgd5;
		public SalMultilineField mlAdresse;
		protected SalBackgroundText bkgd4;
		public SalDataField dfAnzahl;
		public SalCheckBox cb11354;
		public SalPushbutton pbDruck2;
		#endregion
		
		#region Windows Form Designer generated code
		
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			this.ToolBar = new PPJ.Runtime.Windows.SalFormToolBar();
			this.ClientArea = new PPJ.Runtime.Windows.SalFormClientArea();
			this.StatusBar = new PPJ.Runtime.Windows.SalFormStatusBar();
			this.pbAbbruch = new PPJ.Runtime.Windows.SalPushbutton();
			this.bkgd3 = new PPJ.Runtime.Windows.SalBackgroundText();
			this.cmbDYMOPrinters = new PPJ.Runtime.Windows.SalComboBox();
			this.pbDruck = new PPJ.Runtime.Windows.SalPushbutton();
			this.bkgd5 = new PPJ.Runtime.Windows.SalBackgroundText();
			this.mlAdresse = new PPJ.Runtime.Windows.SalMultilineField();
			this.bkgd4 = new PPJ.Runtime.Windows.SalBackgroundText();
			this.dfAnzahl = new PPJ.Runtime.Windows.SalDataField();
			this.cb11354 = new PPJ.Runtime.Windows.SalCheckBox();
			this.pbDruck2 = new PPJ.Runtime.Windows.SalPushbutton();
			this.ToolBar.SuspendLayout();
			this.ClientArea.SuspendLayout();
			this.SuspendLayout();
			// 
			// ToolBar
			// 
			this.ToolBar.Name = "ToolBar";
			this.ToolBar.Font = new Font("Tahoma", 8f, System.Drawing.FontStyle.Regular);
			this.ToolBar.TabStop = true;
			this.ToolBar.Visible = false;
			this.ToolBar.Controls.Add(this.pbAbbruch);
			// 
			// ClientArea
			// 
			this.ClientArea.Name = "ClientArea";
			this.ClientArea.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
			this.ClientArea.Controls.Add(this.pbDruck2);
			this.ClientArea.Controls.Add(this.cb11354);
			this.ClientArea.Controls.Add(this.dfAnzahl);
			this.ClientArea.Controls.Add(this.mlAdresse);
			this.ClientArea.Controls.Add(this.pbDruck);
			this.ClientArea.Controls.Add(this.cmbDYMOPrinters);
			this.ClientArea.Controls.Add(this.bkgd4);
			this.ClientArea.Controls.Add(this.bkgd5);
			this.ClientArea.Controls.Add(this.bkgd3);
			// 
			// StatusBar
			// 
			this.StatusBar.Name = "StatusBar";
			this.StatusBar.Visible = true;
			// 
			// pbAbbruch
			// 
			this.pbAbbruch.Name = "pbAbbruch";
			this.pbAbbruch.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbAbbruch.AcceleratorKey = Keys.Escape;
			this.pbAbbruch.Text = "Abbruch";
			this.pbAbbruch.Location = new System.Drawing.Point(-25, -42);
			this.pbAbbruch.Size = new System.Drawing.Size(25, 42);
			this.pbAbbruch.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbAbbruch.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbAbbruch_WindowActions);
			this.pbAbbruch.TabIndex = 0;
			// 
			// bkgd3
			// 
			this.bkgd3.Name = "bkgd3";
			this.bkgd3.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.bkgd3.Text = "Drucker:";
			this.bkgd3.Location = new System.Drawing.Point(23, 137);
			this.bkgd3.Size = new System.Drawing.Size(54, 16);
			this.bkgd3.TabIndex = 0;
			// 
			// cmbDYMOPrinters
			// 
			this.cmbDYMOPrinters.Name = "cmbDYMOPrinters";
			this.cmbDYMOPrinters.DropDownStyle = System.Windows.Forms.ComboBoxStyle.Simple;
			this.cmbDYMOPrinters.BackColor = System.Drawing.Color.White;
			this.cmbDYMOPrinters.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.cmbDYMOPrinters.Sorted = true;
			this.cmbDYMOPrinters.Location = new System.Drawing.Point(83, 135);
			this.cmbDYMOPrinters.Size = new System.Drawing.Size(330, 127);
			this.cmbDYMOPrinters.TabIndex = 1;
			// 
			// pbDruck
			// 
			this.pbDruck.Name = "pbDruck";
			this.pbDruck.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbDruck.AcceleratorKey = Keys.F12;
			this.pbDruck.Text = "Etikett &drucken (F12)";
			this.pbDruck.Location = new System.Drawing.Point(23, 351);
			this.pbDruck.Size = new System.Drawing.Size(228, 56);
			this.pbDruck.TransparentColor = System.Drawing.Color.Black;
			this.pbDruck.Image = global::Moveta.Intern.Properties.Resources.printer;
			this.pbDruck.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbDruck.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbDruck_WindowActions);
			this.pbDruck.TabIndex = 2;
			// 
			// bkgd5
			// 
			this.bkgd5.Name = "bkgd5";
			this.bkgd5.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.bkgd5.Text = "Inhalt:";
			this.bkgd5.Location = new System.Drawing.Point(23, 9);
			this.bkgd5.Size = new System.Drawing.Size(54, 16);
			this.bkgd5.TabIndex = 3;
			// 
			// mlAdresse
			// 
			this.mlAdresse.Name = "mlAdresse";
			this.mlAdresse.BackColor = System.Drawing.Color.White;
			this.mlAdresse.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.mlAdresse.Location = new System.Drawing.Point(83, 7);
			this.mlAdresse.Size = new System.Drawing.Size(330, 112);
			this.mlAdresse.TabIndex = 4;
			// 
			// bkgd4
			// 
			this.bkgd4.Name = "bkgd4";
			this.bkgd4.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.bkgd4.Text = "Anzahl:";
			this.bkgd4.Location = new System.Drawing.Point(23, 273);
			this.bkgd4.Size = new System.Drawing.Size(54, 16);
			this.bkgd4.TabIndex = 5;
			// 
			// dfAnzahl
			// 
			this.dfAnzahl.Name = "dfAnzahl";
			this.dfAnzahl.BackColor = System.Drawing.Color.White;
			this.dfAnzahl.DataType = PPJ.Runtime.Windows.DataType.Number;
			this.dfAnzahl.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.dfAnzahl.Format = "#0";
			this.dfAnzahl.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
			this.dfAnzahl.Location = new System.Drawing.Point(83, 271);
			this.dfAnzahl.Size = new System.Drawing.Size(72, 24);
			this.dfAnzahl.TabIndex = 6;
			// 
			// cb11354
			// 
			this.cb11354.Name = "cb11354";
			this.cb11354.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.cb11354.Text = "neues Format (Art.Nr. 11354)";
			this.cb11354.Location = new System.Drawing.Point(233, 271);
			this.cb11354.Size = new System.Drawing.Size(186, 24);
			this.cb11354.TabIndex = 7;
			// 
			// pbDruck2
			// 
			this.pbDruck2.Name = "pbDruck2";
			this.pbDruck2.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Bold);
			this.pbDruck2.Text = "Alternativdruck";
			this.pbDruck2.Location = new System.Drawing.Point(263, 351);
			this.pbDruck2.Size = new System.Drawing.Size(150, 56);
			this.pbDruck2.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageAboveText;
			this.pbDruck2.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.pbDruck2_WindowActions);
			this.pbDruck2.TabIndex = 8;
			// 
			// frmDYMODruck
			// 
			this.Controls.Add(this.ClientArea);
			this.Controls.Add(this.ToolBar);
			this.Controls.Add(this.StatusBar);
			this.Name = "frmDYMODruck";
			this.ClientSize = new System.Drawing.Size(435, 453);
			this.Font = new Font("Tahoma", 9f, System.Drawing.FontStyle.Regular);
			this.ForeColor = System.Drawing.SystemColors.WindowText;
			this.Text = "Barcodes drucken";
			this.Location = new System.Drawing.Point(96, 145);
			this.StartPosition = System.Windows.Forms.FormStartPosition.Manual;
			this.WindowActions += new PPJ.Runtime.Windows.WindowActionsEventHandler(this.frmDYMODruck_WindowActions);
			this.ToolBar.ResumeLayout(false);
			this.ClientArea.ResumeLayout(false);
			this.ResumeLayout(false);
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Release global reference.
		/// </summary>
		/// <param name="disposing"></param>
		protected override void Dispose(bool disposing)
		{
			if (disposing && components != null) 
			{
				components.Dispose();
			}
			if (disposing && App.frmDYMODruck == this) 
			{
				App.frmDYMODruck = null;
			}
			base.Dispose(disposing);
		}
		#endregion
	}
}
