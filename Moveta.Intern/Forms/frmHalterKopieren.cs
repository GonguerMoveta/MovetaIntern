// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmHalterKopieren : SalFormWindow
	{
		#region Window Variables
		public SalBoolean bPExists = false;
		public SalBoolean bPOk = false;
		public SalString lsPResult = "";
		public SalSqlHandle hSqlHK = SalSqlHandle.Null;
		public SalNumber nPCount = 0;
		public SalNumber nPCount2 = 0;
		public SalString strFelder = "";
		public SalString strFeld = "";
		public SalSqlHandle hSqlFelder = SalSqlHandle.Null;
		public SalNumber nFetchFelder = 0;
		public SalNumber nArztNr2 = 0;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmHalterKopieren()
		{
			// Assign global reference.
			App.frmHalterKopieren = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmHalterKopieren CreateWindow(Control owner)
		{
			frmHalterKopieren frm = new frmHalterKopieren();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmHalterKopieren FromHandle(SalWindowHandle handle)
		{
			return ((frmHalterKopieren)SalWindow.FromHandle(handle, typeof(frmHalterKopieren)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmHalterKopieren WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmHalterKopieren_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmHalterKopieren_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmHalterKopieren_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmHalterKopieren_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlConnection(ref this.hSqlHK);
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmHalterKopieren_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlHK.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// pbOk WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbOk_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbOk_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.bPOk = true;
			this.lsPResult = "";

			Sal.WaitCursor(true);
			Int.SqlIstDa("FROM a WHERE aarztnr = :frmHalterKopieren.dfNach", ref this.bPExists);
			if (!(this.bPExists)) 
			{
				this.bPOk = false;
				this.lsPResult = this.lsPResult + @"Es ist noch kein Mitglied unter der neuer Mitgliedsnummer angelegt.
";
			}
			else
			{
				Int.SqlIstDa("FROM rk WHERE rkarztnr = :frmHalterKopieren.dfNach", ref this.bPExists);
				if (this.bPExists) 
				{
					this.bPOk = false;
					this.lsPResult = this.lsPResult + @"Es gibt bereits Rechnungen für die neue Mitgliedsnummer.
";
				}
				else
				{
					Int.SqlIstDa("FROM h WHERE harztnr = :frmHalterKopieren.dfNach", ref this.bPExists);
					if (this.bPExists) 
					{
						this.bPOk = false;
						this.lsPResult = this.lsPResult + @"Es gibt bereits Halter für die neue Mitgliedsnummer.
";
					}
					else
					{
						// Call SqlIstDa( 'FROM r WHERE rarztnr = :frmHalterKopieren.dfNach', bPExists )
						// If bPExists
						// Set bPOk = FALSE
						// Set lsPResult = lsPResult || 'Es gibt bereits alte Ratenzahler-Vereinbarungen für die neue Mitgliedsnummer.
						// '
						// Else
						// 14.01.13 Ä834 auskommentiert
						// Call SqlIstDa( 'FROM z WHERE zarztnr = :frmHalterKopieren.dfNach', bPExists )
						// If bPExists
						// Set bPOk = FALSE
						// Set lsPResult = lsPResult || 'Es gibt bereits Zettel für die neue Mitgliedsnummer.
						// '
						// Else
						// 23.08.21 F4803
						this.strFelder = "";
						this.hSqlFelder.Connect();
						if (Sys.IDOK == Int.SqlHandleExec(this.hSqlFelder, "SELECT name INTO :frmHalterKopieren.strFeld FROM syscolumns WHERE tbname = \'HALTER\' AND name <> \'HARZTNR\' ORDER BY colno", "Programmfehler bei Halter kopieren", ref this.nPCount)) 
						{
							this.nFetchFelder = this.hSqlFelder.FetchNext();
							while (this.nFetchFelder != Sys.FETCH_EOF) 
							{

								this.strFelder = this.strFelder + ", " + this.strFeld;
								this.nFetchFelder = this.hSqlFelder.FetchNext();
							}
						}
						this.hSqlFelder.Disconnect();
						Int.SqlImmedSel("SELECT anr2 INTO :frmHalterKopieren.nArztNr2 FROM a WHERE aarztnr = " + this.dfVon.Number.ToString(0));

						// If IDOK != SqlHandleExec(hSqlHK , 'insert into h (harztnr,hhalternr, hname1, hname2, hstr, hort, hfaelltg,
						// hmahnint, hbankeinzug, hzuchtbetrieb, hetikett, htitel, hmatch, hproz1,
						// hproz2, hproz3, hskonto, hcredoneg, HBLZ, HKONTO, HGEBDAT, HAG, HMOLKEREI, HANDEREHALTER, htelefon, herfdat, hnn, hvn, hti,hland, hregnr, hbezblz, hbezkonto, hbeziban, hiban,
						// hpmemail, hustid, hhtel, hhtel2, hhtelhandy, hhtelfax, hhemail, hbic, hbezbic, hbezsigndat, hgebdat2, hgebdat2text, hgebdattext, hreverse, hsperrdatum,  hdigitalrg, hleitwegid, hdigitalmail, hepostmail, hepostaenddat)
						// select ' || SalNumberToStrX( dfNach, 0 ) || ',hhalternr, hname1, hname2, hstr, hort, hfaelltg,
						// hmahnint, hbankeinzug, hzuchtbetrieb, hetikett, htitel, hmatch, hproz1,
						// hproz2, hproz3, hskonto, hcredoneg, HBLZ, HKONTO, HGEBDAT, HAG, HMOLKEREI, HANDEREHALTER, htelefon, herfdat, hnn, hvn, hti, hland, hregnr, hbezblz, hbezkonto, hbeziban, hiban,
						// hpmemail, hustid, hhtel, hhtel2, hhtelhandy, hhtelfax, hhemail, hbic, hbezbic, hbezsigndat, hgebdat2, hgebdat2text, hgebdattext, hreverse, hsperrdatum,  hdigitalrg, hleitwegid, hdigitalmail, hepostmail, hepostaenddat
						//  from h where harztnr= ' || SalNumberToStrX( dfVon, 0), 'Halter kopieren: Halter', nPCount)
						// Set bPOk = FALSE
						// Set lsPResult = lsPResult || 'Fehler beim Kopieren der Halter.
						// '
						if (Sys.IDOK != Int.SqlHandleExec(this.hSqlHK, "insert into h (harztnr" + this.strFelder + @")
select " + this.dfNach.Number.ToString(0) + this.strFelder + @"
 from h where harztnr= " + this.dfVon.Number.ToString(0), "Halter kopieren: Halter", ref this.nPCount)) 
						{
							this.bPOk = false;
							this.lsPResult = this.lsPResult + @"Fehler beim Kopieren der Halter.
";
						}
						else
						{
							if (this.nPCount > 0) 
							{
								this.lsPResult = this.lsPResult + this.nPCount.ToString(0) + @" Halter kopiert.
";
							}
							// If IDOK != SqlHandleExec(hSqlHK , 'insert into r (RARZTNR,RHALTERNR, RDM,RMTL,R1,RDAT) select ' || SalNumberToStrX( dfNach, 0 ) || ', RHALTERNR, RDM,RMTL,R1,RDAT from r where rarztnr= ' || SalNumberToStrX( dfVon, 0),
							// 'Halter kopieren: alte RaZa-Vereinbarungen',
							// nPCount)
							// Set bPOk = FALSE
							// Set lsPResult = lsPResult || 'Fehler beim Kopieren der alten RaZa-Vereinbarungen.
							// '
							// Else
							// If nPCount > 0
							// Set lsPResult = lsPResult || SalNumberToStrX( nPCount, 0 ) || ' alte RaZa-Vereinbarungen kopiert.
							// '
							if (Sys.IDOK != Int.SqlHandleExec(this.hSqlHK, @"insert into z (zvon, zan, zarztnr, zhalternr, zrechnr, zdatum, zwiedervor, zerledigt, zart, zzm, zzmdm, zproznr, zbemerk)
select zvon, zan, " + this.dfNach.Number.ToString(0) + @", zhalternr, zrechnr, zdatum, zwiedervor, zerledigt, zart, zzm, zzmdm, zproznr, zbemerk
from z where zart in ('HS','RA') and zarztnr = " + this.dfVon.Number.ToString(0), "Halter kopieren: Zettel", ref this.nPCount)) 
							{
								this.bPOk = false;
								this.lsPResult = this.lsPResult + @"Fehler beim Kopieren der Zettel.
";
							}
							else
							{
								// 23.08.21 F4802
								if (this.nArztNr2 > 0) 
								{
									if (Sys.IDOK != Int.SqlHandleExec(this.hSqlHK, @"insert into z (zvon, zan, zarztnr, zhalternr, zrechnr, zdatum, zwiedervor, zerledigt, zart, zzm, zzmdm, zproznr, zbemerk)
select zvon, zan, " + this.dfNach.Number.ToString(0) + @", zhalternr, zrechnr, zdatum, zwiedervor, zerledigt, zart, zzm, zzmdm, zproznr, zbemerk
from z where zart in ('HS','RA') and zarztnr = " + this.nArztNr2.ToString(0), "Halter kopieren: Zettel", ref this.nPCount2)) 
									{
									}
									this.nPCount = this.nPCount + this.nPCount2;
								}
								if (this.nPCount > 0) 
								{
									this.lsPResult = this.lsPResult + this.nPCount.ToString(0) + @" Zettel kopiert.
";
								}
							}
						}
					}
				}
			}
			Sal.WaitCursor(false);

			if (this.bPOk) 
			{
				Sal.MessageBox(this.lsPResult, "Kopiervorgang beendet", (Sys.MB_Ok | Sys.MB_IconAsterisk));
			}
			else
			{
				Sal.MessageBox(this.lsPResult, "Kopiervorgang NICHT beendet", (Sys.MB_Ok | Sys.MB_IconExclamation));
			}
			#endregion
		}
		#endregion
	}
}
