// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmBenutzer : FCRibbonFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlLoesch = SalSqlHandle.Null;
		public SalSqlHandle hSqlBenutzer = SalSqlHandle.Null;
		public SalNumber nFetch = 0;
		public SalString strN = "";
		public SalString strAuto = "";
		public SalNumber nRow = 0;
		public SalBoolean bOk = false;
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmBenutzer()
		{
			// Assign global reference.
			App.frmBenutzer = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
			//FC:FINAL: create menu as RibbonBar
			this.CreateRibbon();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmBenutzer CreateWindow(Control owner)
		{
			frmBenutzer frm = new frmBenutzer();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmBenutzer FromHandle(SalWindowHandle handle)
		{
			return ((frmBenutzer)SalWindow.FromHandle(handle, typeof(frmBenutzer)));
		}
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalBenNeu()
		{
			#region Actions
			using (new SalContext(this))
			{
				nRow = tblBenutzer.InsertRow(Sys.TBL_MaxRow);
				tblBenutzer.SetFocusCell(nRow, tblBenutzer.colCode, -1, -1);
				tblBenutzer.colAdmin.Number = 0;
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalBenLoe()
		{
			#region Actions
			using (new SalContext(this))
			{
				Sal.WaitCursor(true);

				Int.SqlConnection(ref hSqlLoesch);
				hSqlLoesch.Prepare(@"DELETE FROM bn
WHERE bncode = :frmBenutzer.tblBenutzer.colCode");
				tblBenutzer.DoDeletes(hSqlLoesch, Sys.ROW_MarkDeleted);
				hSqlLoesch.Commit();
				hSqlLoesch.Disconnect();
				Sal.WaitCursor(false);
			}

			return 0;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber PalKlickDel()
		{
			#region Actions
			using (new SalContext(this))
			{
				tblBenutzer.KillCellEdit();
				if (tblBenutzer.AnyRows(Sys.ROW_Selected, 0)) 
				{
					nRow = Sys.TBL_MinRow;
					while (true)
					{
						if (!(tblBenutzer.FindNextRow(ref nRow, Sys.ROW_Selected, 0))) 
						{
							break;
						}
						tblBenutzer.SetRowFlags(nRow, Sys.ROW_MarkDeleted, true);
					}
				}
				PalBenLoe();
			}

			return 0;
			#endregion
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// Menu Actions
		/// </summary>
		/// <returns></returns>
		private SalNumber menuItem__einfügen_MenuActions()
		{
			PalBenNeu();
			return 0;
		}
		
		/// <summary>
		/// Menu EnabledWhen Expression
		/// </summary>
		/// <returns></returns>
		private bool menuItem__löschen_EnabledWhen()
		{
			return tblBenutzer.AnyRows(Sys.ROW_Selected, 0);
		}
		
		/// <summary>
		/// Menu Actions
		/// </summary>
		/// <returns></returns>
		private SalNumber menuItem__löschen_MenuActions()
		{
			PalBenLoe();
			return 0;
		}
		
		/// <summary>
		/// frmBenutzer WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmBenutzer_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmBenutzer_OnSAM_Create(sender, e);
					break;
				//FC:FINAL: use SAM_Close instead of SAM_Destroy
				case Sys.SAM_Close:
					this.frmBenutzer_OnSAM_Destroy(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmBenutzer_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.tblBenutzer.SetContextMenu("frmBenutzerRightClick", 0);
			Int.SqlConnection(ref this.hSqlBenutzer);
			// 28.11.05
			this.tblBenutzer.colVertr.AddListItem("");
			if (this.hSqlBenutzer.PrepareAndExecute("SELECT bnzei INTO :frmBenutzer.strN FROM bn")) 
			{
				while (this.hSqlBenutzer.FetchNext(ref this.nFetch)) 
				{
					this.tblBenutzer.colVertr.AddListItem(this.strN);
				}
				this.hSqlBenutzer.Commit();
			}

			this.tblBenutzer.Populate(this.hSqlBenutzer, @"SELECT bncode, bnpw, bnadmin, bnname, bnabtlg, bntel, bnzei, bnemail, bnvertr
INTO :frmBenutzer.tblBenutzer.colCode, :frmBenutzer.tblBenutzer.colPW, :frmBenutzer.tblBenutzer.colAdmin, :frmBenutzer.tblBenutzer.colName,
:frmBenutzer.tblBenutzer.colAbtlg, :frmBenutzer.tblBenutzer.colTel, :frmBenutzer.tblBenutzer.colZei, :frmBenutzer.tblBenutzer.colEMail, :frmBenutzer.tblBenutzer.colVertr
FROM bn
WHERE bncode <> 'ADMIN'
ORDER BY bncode", Sys.TBL_FillAll);
			this.tblBenutzer.SetFocusRow(Sys.TBL_MinRow);
			Sal.WaitCursor(false);
			#endregion
		}
		
		/// <summary>
		/// SAM_Destroy event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmBenutzer_OnSAM_Destroy(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.WaitCursor(true);
			this.tblBenutzer.KillCellEdit();
			if (this.tblBenutzer.AnyRows((Sys.ROW_New | Sys.ROW_Edited), 0)) 
			{
				this.nRow = Sys.TBL_MinRow;
				while (true)
				{
					if (!(this.tblBenutzer.FindNextRow(ref this.nRow, (Sys.ROW_New | Sys.ROW_Edited), 0))) 
					{
						break;
					}
					this.tblBenutzer.SetFocusRow(this.nRow);
					if (this.tblBenutzer.colCode.Text != "") 
					{
						Int.SqlIstDa("FROM bn WHERE bncode = :frmBenutzer.tblBenutzer.colCode", ref Var.bExists);
						if (Var.bExists) 
						{
							Int.SqlImmed(@"UPDATE bn SET
bnpw = :frmBenutzer.tblBenutzer.colPW,
bnadmin = :frmBenutzer.tblBenutzer.colAdmin,
bnname = :frmBenutzer.tblBenutzer.colName,
bnabtlg = :frmBenutzer.tblBenutzer.colAbtlg,
bntel = :frmBenutzer.tblBenutzer.colTel,
bnemail = :frmBenutzer.tblBenutzer.colEMail,
bnvertr = :frmBenutzer.tblBenutzer.colVertr,
bnzei = :frmBenutzer.tblBenutzer.colZei
WHERE bncode  = :frmBenutzer.tblBenutzer.colCode");
						}
						else
						{
							Int.SqlImmed(@"INSERT INTO bn
(bncode, bnpw, bnadmin, bnname, bnabtlg, bntel, bnzei, bnemail, bnvertr)
VALUES(:frmBenutzer.tblBenutzer.colCode, :frmBenutzer.tblBenutzer.colPW, :frmBenutzer.tblBenutzer.colAdmin,
:frmBenutzer.tblBenutzer.colName, :frmBenutzer.tblBenutzer.colAbtlg, :frmBenutzer.tblBenutzer.colTel, :frmBenutzer.tblBenutzer.colZei, :frmBenutzer.tblBenutzer.colEMail,
:frmBenutzer.tblBenutzer.colVertr)");
						}
					}
					this.tblBenutzer.SetRowFlags(this.nRow, (Sys.ROW_New | Sys.ROW_Edited), false);
				}
				this.hSqlBenutzer.Commit();
			}
			Sal.WaitCursor(false);
			this.hSqlBenutzer.Disconnect();
			this.PalBenLoe();
			Int.SqlImmedSel(@"SELECT bncode, bnpw, bnabtlg, bnadmin, bntel, bnname, bnzei, bnemail
INTO :strBNUser, :strBNPW, :strBNAbtlg, :nBNAdmin, :strBNTel, :strBNName, :strBNZei, :frmBenutzer.tblBenutzer.colEMail
FROM bn WHERE bncode = :strBNUser");
			#endregion
		}
		
		/// <summary>
		/// tblBenutzer WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblBenutzer_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblBenutzer_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblBenutzer_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.tblBenutzer, "Die hier angezeigten Benutzer können sich im Pegasus-Programm anmelden.");
			return;
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.DestroyWindow();
			#endregion
		}
		
		/// <summary>
		/// pbNeu WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbNeu_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbNeu_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalBenNeu();
			#endregion
		}
		
		/// <summary>
		/// pbLoe WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLoe_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbLoe_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLoe_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PalKlickDel();
			#endregion
		}
		#endregion
		
		#region tblBenutzer
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblBenutzerTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmBenutzer _frmBenutzer = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblBenutzerTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmBenutzer frmBenutzer
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmBenutzer == null) 
					{
						_frmBenutzer = (frmBenutzer)this.FindForm();
					}
					return _frmBenutzer;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblBenutzerTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblBenutzerTableWindow)SalWindow.FromHandle(handle, typeof(tblBenutzerTableWindow)));
			}
			#endregion
		}
		#endregion
	}
}
