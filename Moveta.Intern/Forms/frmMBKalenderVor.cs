// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmMBKalenderVor : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlMBKalenderVor = SalSqlHandle.Null;
		public SalSqlHandle hSqlMBKalenderVorDel = SalSqlHandle.Null;
		public SalString strSelect = "";
		public SalNumber nErr = 0;
		public SalWindowHandle hWndReport = SalWindowHandle.Null;
		public SalString strDevice = "";
		public SalString strDriver = "";
		public SalString strPort = "";
		public SalString strOldDevice = "";
		public SalString strOldDriver = "";
		public SalString strOldPort = "";
		public SalNumber nColor = 0;
		public SalArray<SalNumber> nArray = new SalArray<SalNumber>(5);
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmMBKalenderVor()
		{
			// Assign global reference.
			App.frmMBKalenderVor = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmMBKalenderVor CreateWindow(Control owner)
		{
			frmMBKalenderVor frm = new frmMBKalenderVor();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmMBKalenderVor FromHandle(SalWindowHandle handle)
		{
			return ((frmMBKalenderVor)SalWindow.FromHandle(handle, typeof(frmMBKalenderVor)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmMBKalenderVor WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmMBKalenderVor_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmMBKalenderVor_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmMBKalenderVor_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmMBKalenderVor_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// 17.04.17 Ä1662
			// Call SalHideWindow( pbVB )
			// Call SalHideWindow( pbMBNeu )
			// Call SalHideWindow( pbVBNeu )

			Int.SqlConnection(ref this.hSqlMBKalenderVor);
			Int.SqlConnection(ref this.hSqlMBKalenderVorDel);
			// 12.12.17 Ä1662 + ,
			// mbkgvnfu, mbkgvnn, mbkgvnsh, mbkgvnplz, mbkgvno, mbkgvnal
			this.strSelect = @"SELECT mbkproznr, mbkaz, mbkhname1 || ' ' || mbkhname2, mbkdmhf, mbkzustmb, mbkzustvb, mbktyp
INTO :frmMBKalenderVor.tblMBKalenderVor.colnProzNr, :frmMBKalenderVor.tblMBKalenderVor.colsAZ,
:frmMBKalenderVor.tblMBKalenderVor.colsHN1,
:frmMBKalenderVor.tblMBKalenderVor.colnDMHF, :frmMBKalenderVor.tblMBKalenderVor.coldtZustMB,
:frmMBKalenderVor.tblMBKalenderVor.coldtZustVB, :frmMBKalenderVor.tblMBKalenderVor.colsTyp
FROM MBK WHERE mbkuser = :strBNUser  ORDER BY mbkproznr";
			this.tblMBKalenderVor.Populate(this.hSqlMBKalenderVor, this.strSelect, Sys.TBL_FillAll);
			this.tblMBKalenderVor.SetFocusCell(0, this.tblMBKalenderVor.colnProzNr, 0, -1);
			Sal.WaitCursor(false);
			// 04.09.03
			this.nColor = this.GetWindowColor(Sys.COLOR_IndexWindow);
			this.dfDrucker.SetWindowColor(Sys.COLOR_IndexWindow, this.nColor);
			Sal.FileSetCurrentDirectory(Var.strTVNPath);
			if (Sal.PrtGetDefault(ref this.strDevice, ref this.strDriver, ref this.strPort)) 
			{
				this.dfDrucker.Text = this.strDevice + " an " + this.strPort;
				this.strOldDevice = this.strDevice;
				this.strOldDriver = this.strDriver;
				this.strOldPort = this.strPort;
			}

			// Call SalContextMenuSetPopup( tblMBKalenderVor, 'frmMBKalenderVorRightClick', 0)
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmMBKalenderVor_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Sal.PrtSetDefault(this.strOldDevice, this.strOldDriver, this.strOldPort);
			this.tblMBKalenderVor.KillCellEdit();
			this.hSqlMBKalenderVorDel.Disconnect();
			this.hSqlMBKalenderVor.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// tblMBKalenderVor WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblMBKalenderVor_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblMBKalenderVor_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_FetchRowDone:
					this.tblMBKalenderVor_OnSAM_FetchRowDone(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblMBKalenderVor_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this.tblMBKalenderVor, 0xffffa8);
			// Set hwndaCols[0] = colsGVNFU
			// Set hwndaCols[1] = colsGVNN
			// Set hwndaCols[2] = colsGVNSH
			// Set hwndaCols[3] = colsGVNPLZ
			// Set hwndaCols[4] = colsGVNO
			// Set hwndaCols[5] = colsGVNAL
			// Call MTblCreateColHdrGrp( hWndItem, 'neuer gesetzl.Vertreter', hwndaCols, 6, MTBL_CHG_FLAG_NOINNERHORZLINE )
			// Set hwndaCols[0] = colsGVZFU
			// Set hwndaCols[1] = colsGVZN
			// Set hwndaCols[2] = colsGVZSH
			// Set hwndaCols[3] = colsGVZPLZ
			// Set hwndaCols[4] = colsGVZO
			// Set hwndaCols[5] = colsGVZAL
			// Call MTblCreateColHdrGrp( hWndItem, 'gesetzl.Vertreter als Zustellempf.', hwndaCols, 6, MTBL_CHG_FLAG_NOINNERHORZLINE )
			// !
			#endregion
		}
		
		/// <summary>
		/// SAM_FetchRowDone event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblMBKalenderVor_OnSAM_FetchRowDone(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// If tblMBKalenderVor.colsTyp = 'VB'
			// Call SalShowWindow( pbVB )
			// Else If tblMBKalenderVor.colsTyp = 'MBNeu'
			// Call SalShowWindow( pbMBNeu )
			// Else If tblMBKalenderVor.colsTyp = 'VBNeu'
			// Call SalShowWindow( pbVBNeu )
			// 17.04.17 Ä1662
			#endregion
		}
		
		/// <summary>
		/// pbLösch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLösch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbLösch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbLösch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// If SalTblAnyRows(tblMBKalenderVor,ROW_Selected,0)
			// Call SqlImmedX('DELETE FROM MBK
			// WHERE mbkproznr = :tblMBKalenderVor.colnProzNr')
			// Call SalTblReset(tblMBKalenderVor)
			// Call SalTblPopulate( tblMBKalenderVor,hSqlMBKalenderVor,strSelect,TBL_FillAll )
			if (this.tblMBKalenderVor.AnyRows(Sys.ROW_Selected, 0)) 
			{
				Var.bOK = this.hSqlMBKalenderVorDel.Prepare(@"
DELETE FROM MBK
WHERE mbkproznr = :tblMBKalenderVor.colnProzNr AND mbkuser = :strBNUser ");
				if (Var.bOK) 
				{
					this.tblMBKalenderVor.DeleteSelected(this.hSqlMBKalenderVorDel);
					this.tblMBKalenderVor.ResetTable();
					this.tblMBKalenderVor.Populate(this.hSqlMBKalenderVor, this.strSelect, Sys.TBL_FillAll);
				}
			}
			#endregion
		}
		
		/// <summary>
		/// pbSetup WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbSetup_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.pbSetup_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Click:
					this.pbSetup_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbSetup_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.pbSetup, "Drucker wählen / einrichten");
			return;
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbSetup_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (Sal.PrtSetup(ref this.strDevice, ref this.strDriver, ref this.strPort, true)) 
			{
				this.dfDrucker.Text = this.strDevice + " an " + this.strPort;
			}
			#endregion
		}
		
		/// <summary>
		/// pbDrucken WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDrucken_OnSAM_Click(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.pbDrucken_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			// Call SalReportTableCreate('TEST', tblMBKalenderVor, nErr)
			// Call SalReportTableView(tblMBKalenderVor,hWndNULL,'MBKTabelle.qrp',nErr)
			this.nArray[Sys.RPT_PrintParamOptions] = Sys.RPT_PrintAll;
			this.nArray[Sys.RPT_PrintParamFirstPage] = 1;
			this.nArray[Sys.RPT_PrintParamLastPage] = 999;
			this.nArray[Sys.RPT_PrintParamCopies] = 1;
			Sal.ReportTablePrint(this.tblMBKalenderVor, "MBKTabelle.qrp", this.nArray, ref this.nErr);
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDrucken_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			e.Return = Int.XSalTooltipSetTextActive(this.pbDrucken, "Liste drucken");
			return;
			#endregion
		}
		
		/// <summary>
		/// pbVB WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbVB_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbVB_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbVB_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			frmEDA.CreateWindow(this, "VB");
			#endregion
		}
		
		/// <summary>
		/// pbMBNeu WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbMBNeu_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbMBNeu_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbMBNeu_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			frmEDA.CreateWindow(this, "MBNeu");
			#endregion
		}
		
		/// <summary>
		/// pbVBNeu WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbVBNeu_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbVBNeu_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbVBNeu_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			frmEDA.CreateWindow(this, "VBNeu");
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblMBKalenderVor
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblMBKalenderVorTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmMBKalenderVor _frmMBKalenderVor = null;
			
			
			#region Window Variables
			public SalArray<SalWindowHandle> hwndaCols = new SalArray<SalWindowHandle>();
			#endregion
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblMBKalenderVorTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmMBKalenderVor frmMBKalenderVor
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmMBKalenderVor == null) 
					{
						_frmMBKalenderVor = (frmMBKalenderVor)this.FindForm();
					}
					return _frmMBKalenderVor;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblMBKalenderVorTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblMBKalenderVorTableWindow)SalWindow.FromHandle(handle, typeof(tblMBKalenderVorTableWindow)));
			}
			#endregion
		}
		#endregion
	}
}
