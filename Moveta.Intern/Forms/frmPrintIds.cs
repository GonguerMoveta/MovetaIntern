// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public partial class frmPrintIds : SalFormWindow
	{
		#region Window Variables
		public SalSqlHandle hSqlId = SalSqlHandle.Null;
		public SalNumber nFetchId = 0;
		public MTblPrintParams PrintParams = new MTblPrintParams();
		public SalArray<SalString> strPrinters = new SalArray<SalString>();
		public SalNumber nAnz = 0;
		public SalNumber nOff = 0;
		public SalNumber nResult = 0;
		public SalString strDevice = "";
		#endregion
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public frmPrintIds()
		{
			// Assign global reference.
			App.frmPrintIds = this;
			// This call is required by the Windows Form Designer.
			InitializeComponent();
		}
		#endregion
		
		#region System Methods/Properties
		
		/// <summary>
		/// Shows the form window.
		/// </summary>
		/// <param name="owner"></param>
		/// <returns></returns>
		public static frmPrintIds CreateWindow(Control owner)
		{
			frmPrintIds frm = new frmPrintIds();
			frm.Show(owner);
			return frm;
		}
		
		/// <summary>
		/// Returns the object instance associated with the window handle.
		/// </summary>
		/// <param name="handle"></param>
		/// <returns></returns>
		[DebuggerStepThrough]
		public static frmPrintIds FromHandle(SalWindowHandle handle)
		{
			return ((frmPrintIds)SalWindow.FromHandle(handle, typeof(frmPrintIds)));
		}
		#endregion
		
		#region Window Actions
		
		/// <summary>
		/// frmPrintIds WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmPrintIds_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.frmPrintIds_OnSAM_Create(sender, e);
					break;
				
				case Sys.SAM_Close:
					this.frmPrintIds_OnSAM_Close(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmPrintIds_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.SqlConnection(ref this.hSqlId);
			#endregion
		}
		
		/// <summary>
		/// SAM_Close event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void frmPrintIds_OnSAM_Close(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.hSqlId.Disconnect();
			#endregion
		}
		
		/// <summary>
		/// dfID WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfID_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Vis.VTM_KeyUp: // 03.05.23 Ä2104
					this.dfID_OnVTM_KeyUp(sender, e);
					break;
				
				case Sys.SAM_Timer: // 24.01.22 Ä1996
					this.dfID_OnSAM_Timer(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// VTM_KeyUp event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfID_OnVTM_KeyUp(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (((SalString)this.dfID.Text).Length >= 3) 
			{
				if ((Sys.wParam >= 0x0030 && Sys.wParam <= 0x005a) || (Sys.wParam >= 0x0061 && Sys.wParam <= 0x0069) || Sys.wParam == Vis.VK_Backspace || Sys.wParam == Vis.VK_Clear) 
				{
					this.dfID.KillTimer(4712);
					this.dfID.SetTimer(4712, 500);
				}
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Timer event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void dfID_OnSAM_Timer(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (((SalString)this.dfID.Text).Length >= 3) 
			{
				this.dfID.KillTimer(4712);
				this.tblPRID.ResetTable();
				this.tblPRID.Populate(this.hSqlId, @"SELECT priderfdat, pridid, pridarztnr, pridhalternr, priddruck, priduser
INTO :frmPrintIds.tblPRID.colErfDat, :frmPrintIds.tblPRID.colID, :frmPrintIds.tblPRID.colArztNr, :frmPrintIds.tblPRID.colHalterNr, :frmPrintIds.tblPRID.colDruck, :frmPrintIds.tblPRID.colUser
FROM prid
WHERE pridid LIKE '%' || :frmPrintIds.dfID || '%' ORDER BY priderfdat", Sys.TBL_FillNormal);
			}
			#endregion
		}
		
		/// <summary>
		/// tblPRID WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblPRID_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Create:
					this.tblPRID_OnSAM_Create(sender, e);
					break;
				
				case MT.MTbl.MTM_MouseEnterItem:
					this.tblPRID_OnMTM_MouseEnterItem(sender, e);
					break;
				
				case MT.MTbl.MTM_MouseLeaveItem:
					this.tblPRID_OnMTM_MouseLeaveItem(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblPRID_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			Int.PalPrepareMTbl(this.tblPRID, 0xbfffbf);
			#endregion
		}
		
		/// <summary>
		/// MTM_MouseEnterItem event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblPRID_OnMTM_MouseEnterItem(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			MT.MTbl.GetItem(this.tblPRID, Sys.lParam, Var.objItem);
			if (Var.objItem.Type == MT.MTbl.MTBL_ITEM_ROW) 
			{
				Ext.MTblSetHighlighted(Var.objItem, true);
			}
			#endregion
		}
		
		/// <summary>
		/// MTM_MouseLeaveItem event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void tblPRID_OnMTM_MouseLeaveItem(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			MT.MTbl.GetItem(this.tblPRID, Sys.lParam, Var.objItem);
			if (Var.objItem.Type == MT.MTbl.MTBL_ITEM_ROW) 
			{
				Ext.MTblSetHighlighted(Var.objItem, false);
			}
			#endregion
		}
		
		/// <summary>
		/// pbDruck WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbDruck_OnSAM_Click(sender, e);
					break;
				
				case Sys.SAM_Create:
					this.pbDruck_OnSAM_Create(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;


			// 13.11.13
			// Set nErr = 1
			// Set hWndReport = SalCreateWindow (frmReport, hWndNULL,'Statistik')
			// Call SalReportTableCreate('TEST', tblResult, nErr)
			// Call SalReportTableView(tblResult, frmReport, 'TEST', nErr)
			// 08.09.06 Aufgabe 24
			// Call SalBringWindowToTop(hWndReport)
			this.PrintParams.Init();
			this.PrintParams.DocName = "gefunde IDs. Suche nach " + this.dfID.Text;
			this.PrintParams.Orientation = MT.MTbl.MTP_OR_LANDSCAPE;
			// Set strDevice = MTblPrintGetDefPrinterName(  )
			this.nResult = this.lbPrinters.GetListSelectedIndex();
			if (this.nResult == Sys.LB_Err) 
			{
				this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			}
			else
			{
				this.strDevice = this.lbPrinters.GetListItemText(this.nResult);
			}
			this.PrintParams.PrinterName = this.strDevice;
			// 07.11.13 F1760
			this.PrintParams.Language = MT.MTbl.MTP_LNG_GERMAN;

			MT.MTbl.Print(this.tblPRID, this.PrintParams);
			#endregion
		}
		
		/// <summary>
		/// SAM_Create event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbDruck_OnSAM_Create(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.nAnz = MT.MTbl.PrintGetPrinterNames(this.strPrinters);
			this.strDevice = MT.MTbl.MTblPrintGetDefPrinterName();
			this.nOff = -1;
			this.nResult = 0;
			while (this.nResult < this.nAnz) 
			{
				this.lbPrinters.AddListItem(this.strPrinters[this.nResult]);
				if (this.strPrinters[this.nResult] == this.strDevice) 
				{
					this.nOff = this.nResult;
				}
				this.nResult = this.nResult + 1;
			}
			if (this.nOff >= 0) 
			{
				this.lbPrinters.SetListSelectedIndex(this.nOff);
			}

			// Return PalToolTipSetText( hWndItem
			// ,
			// 	"Tabelle mit Abfrage-Ergebnis drucken" )
			#endregion
		}
		
		/// <summary>
		/// pbExport WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbExport_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbExport_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbExport_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			if (this.obExcel.Checked) 
			{
				MT.MTbl.ExportToExcel(this.tblPRID, MT.MTbl.MTE_LNG_GERMAN, SalString.Null, ((((MT.MTbl.MTE_EXCEL_NEW_INSTANCE | MT.MTbl.MTE_EXCEL_STRING_COLS_AS_TEXT) | Const.MTE_EXCEL_NO_CLIPBOARD) | Const.MTE_EXCEL_NO_AUTO_FIT_COL) | Const.MTE_EXCEL_NO_AUTO_FIT_ROW), 
					(MT.MTbl.MTE_COL_HEADERS | MT.MTbl.MTE_SHOW_STATUS), 0, Sys.ROW_Hidden, Sys.COL_Visible, 0);
			}
			else
			{
				Ext.MTblExportToOOCalc(this.tblPRID, MT.MTbl.MTE_LNG_GERMAN, SalString.Null, (Const.MTE_OOCALC_NEW_WORKBOOK | Const.MTE_OOCALC_STRING_COLS_AS_TEXT), (MT.MTbl.MTE_COL_HEADERS | MT.MTbl.MTE_SHOW_STATUS), 0, Sys.ROW_Hidden, Sys.COL_Visible, 
					0);
			}
			#endregion
		}
		
		/// <summary>
		/// pbAbbruch WindowActions Handler
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_WindowActions(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			switch (e.ActionType)
			{
				case Sys.SAM_Click:
					this.pbAbbruch_OnSAM_Click(sender, e);
					break;
			}
			#endregion
		}
		
		/// <summary>
		/// SAM_Click event handler.
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void pbAbbruch_OnSAM_Click(object sender, WindowActionsEventArgs e)
		{
			#region Actions
			e.Handled = true;
			this.PostMessage(Sys.SAM_Close, 0, 0);
			#endregion
		}
		#endregion
		
		#region tblPRID
		
		/// <summary>
		/// Child Table Window implementation.
		/// </summary>
		public partial class tblPRIDTableWindow : SalTableWindow
		{
			// reference to the container form.
			private frmPrintIds _frmPrintIds = null;
			
			
			#region Constructors/Destructors
			
			/// <summary>
			/// Default Constructor.
			/// </summary>
			public tblPRIDTableWindow()
			{
				// This call is required by the Windows Form Designer.
				InitializeComponent();
			}
			#endregion
			
			#region System Methods/Properties
			
			/// <summary>
			/// Parent form.
			/// </summary>
			private frmPrintIds frmPrintIds
			{
				[DebuggerStepThrough]
				get
				{
					if (_frmPrintIds == null) 
					{
						_frmPrintIds = (frmPrintIds)this.FindForm();
					}
					return _frmPrintIds;
				}
			}
			
			/// <summary>
			/// Returns the object instance associated with the window handle.
			/// </summary>
			/// <param name="handle"></param>
			/// <returns></returns>
			[DebuggerStepThrough]
			public static tblPRIDTableWindow FromHandle(SalWindowHandle handle)
			{
				return ((tblPRIDTableWindow)SalWindow.FromHandle(handle, typeof(tblPRIDTableWindow)));
			}
			#endregion
		}
		#endregion
	}
}
