// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public class XMLCharacterData : XMLNode
	{
		#region Constructors/Destructors
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <param name="sData"></param>
		/// <returns></returns>
		public SalBoolean getData(ref SalString sData)
		{
			#region Actions
			return __XML_CharacterData_getData(sData);
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalNumber getDataLength()
		{
			#region Actions
			return __XML_CharacterData_getLength();
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="sData"></param>
		/// <returns></returns>
		public SalBoolean setData(SalString sData)
		{
			#region Actions
			return __XML_CharacterData_setData(sData);
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="sData"></param>
		/// <returns></returns>
		public SalBoolean appendData(SalString sData)
		{
			#region Actions
			return __XML_CharacterData_appendData(sData);
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nOffset"></param>
		/// <param name="nLength"></param>
		/// <param name="sData"></param>
		/// <returns></returns>
		public SalBoolean substringData(SalNumber nOffset, SalNumber nLength, ref SalString sData)
		{
			#region Actions
			return __XML_CharacterData_substringData(nOffset, nLength, sData);
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nOffset"></param>
		/// <param name="sData"></param>
		/// <returns></returns>
		public SalBoolean insertData(SalNumber nOffset, SalString sData)
		{
			#region Actions
			return __XML_CharacterData_insertData(nOffset, sData);
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nOffset"></param>
		/// <param name="nCount"></param>
		/// <returns></returns>
		public SalBoolean deleteData(SalNumber nOffset, SalNumber nCount)
		{
			#region Actions
			return __XML_CharacterData_deleteData(nOffset, nCount);
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nOffset"></param>
		/// <param name="nCount"></param>
		/// <param name="sData"></param>
		/// <returns></returns>
		public SalBoolean replaceData(SalNumber nOffset, SalNumber nCount, SalString sData)
		{
			#region Actions
			return __XML_CharacterData_replaceData(nOffset, nCount, sData);
			#endregion
		}
		#endregion
	}
}
