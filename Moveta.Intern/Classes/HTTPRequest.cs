// <ppj name="Moveta.Intern" date="1/17/2024 7:59:41 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;
using PPJ.Runtime.Scripting;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public class HTTPRequest : SalFunctionalClass
	{
		#region Constructors/Destructors
		#endregion
		
		#region Methods
		
		/// <summary>
		/// </summary>
		/// <param name="sContent"></param>
		/// <returns></returns>
		public SalBoolean sendText(SalString sContent)
		{
			#region Actions
			//FC:TODO: Check replacement for __HTTP_Send
			//return __HTTP_Send(sContent);
			return false;
			#endregion
		}

        //FC:TODO: XML replacement
  //      /// <summary>
  //      /// </summary>
  //      /// <param name="reqDoc"></param>
  //      /// <returns></returns>
  //      public SalBoolean sendXML(XMLDocument reqDoc)
		//{
  //          #region Actions
  //          //FC:TODO: Check replacement for __HTTP_SendXML
  //          //return __HTTP_SendXML(reqDoc);
		//	return false;
		//	#endregion
		//}
		
		/// <summary>
		/// </summary>
		/// <param name="nMethod"></param>
		/// <param name="sURL"></param>
		/// <param name="sUser"></param>
		/// <param name="sPassword"></param>
		/// <returns></returns>
		public SalBoolean open(SalNumber nMethod, SalString sURL, SalString sUser, SalString sPassword)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_Open
            //return __HTTP_Open(nMethod, sURL, sUser, sPassword);
			return false;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="sHeader"></param>
		/// <param name="sValue"></param>
		/// <returns></returns>
		public SalBoolean setHTTPHeader(SalString sHeader, SalString sValue)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_SetHTTPHeader
            //return __HTTP_SetHTTPHeader(sHeader, sValue);
			return false;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nMilSeconds"></param>
		/// <returns></returns>
		public SalBoolean setTimeout(SalNumber nMilSeconds)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_SetTimeOut
            //return __HTTP_SetTimeOut(nMilSeconds);
			return false;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="sResponse"></param>
		/// <returns></returns>
		public SalBoolean getResponseText(ref SalString sResponse)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_GetResponseText
            //return __HTTP_GetResponseText(sResponse);
			return false;
			#endregion
		}

        //FC:TODO: XML replacement
  //      /// <summary>
  //      /// </summary>
  //      /// <param name="resDoc"></param>
  //      /// <returns></returns>
  //      public SalBoolean getResponseXML(XMLDocument resDoc)
		//{
  //          #region Actions
  //          //FC:TODO: Check replacement for __HTTP_GetResponseXML
  //          //return __HTTP_GetResponseXML(resDoc);
		//	return false;
		//	#endregion
		//}
		
		/// <summary>
		/// </summary>
		/// <param name="sHeaders"></param>
		/// <returns></returns>
		public SalBoolean getAllResponseHeaders(ref SalString sHeaders)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_GetAllResponseHeaders
            //return __HTTP_GetAllResponseHeaders(sHeaders);
			return false;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="sHeader"></param>
		/// <param name="sValue"></param>
		/// <returns></returns>
		public SalBoolean getResponseHeader(SalString sHeader, ref SalString sValue)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_GetResponseHeader
            //return __HTTP_GetResponseHeader(sHeader, sValue);
			return false;
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="nErrorType"></param>
		/// <param name="sError"></param>
		/// <returns></returns>
		public SalBoolean getLastError(ref SalNumber nErrorType, ref SalString sError)
		{
            #region Actions
            //FC:TODO: Check replacement for __HTTP_GetLastError
            //return __HTTP_GetLastError(nErrorType, sError);
			return false;
			#endregion
		}
		#endregion
	}
}
