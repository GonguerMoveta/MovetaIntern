// <ppj name="Moveta.Intern" date="1/29/2024 3:39:48 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using System.Runtime.InteropServices;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public class ShellBrowser_IJamSystemShellView : SalObject
	{
		
		/// <summary>
		/// This is the real COM interface.
		/// </summary>
		internal COMInterface _Interface = null;
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ShellBrowser_IJamSystemShellView(){ }
		public ShellBrowser_IJamSystemShellView(COMInterface obj) : this()
		{
			this._Interface = obj;
		}
		#endregion
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean FullRefresh()
		{
			#region Actions
			try
			{
				_Interface.FullRefresh();
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean GoUp(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.GoUp();
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Index"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean GetFullPath(SalNumber Index, ref SalString returnValue)
		{
			#region Actions
			try
			{
				int param1 = (int)Index;
				returnValue = _Interface.GetFullPath(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Index"></param>
		/// <param name="returnValue">Important: this is one of the ShellBrowser_TJamShellFolder constants</param>
		/// <returns></returns>
		public SalBoolean IsSpecialObject(SalNumber Index, ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				int param1 = (int)Index;
				returnValue = _Interface.IsSpecialObject(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Index"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean IsFolder(SalNumber Index, ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				int param1 = (int)Index;
				returnValue = _Interface.IsFolder(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Delta"></param>
		/// <returns></returns>
		public SalBoolean MoveInHistory(SalNumber Delta)
		{
			#region Actions
			try
			{
				int param1 = (int)Delta;
				_Interface.MoveInHistory(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Delta"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean IsMovePossible(SalNumber Delta, ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				int param1 = (int)Delta;
				returnValue = _Interface.IsMovePossible(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Name"></param>
		/// <param name="EditMode"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean CreateDir(SalString Name, SalBoolean EditMode, ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				string param1 = (string)Name;
				bool param2 = (bool)EditMode;
				returnValue = _Interface.CreateDir(param1, param2);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Command"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean InvokeCommandOnSelected(SalString Command, ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				string param1 = (string)Command;
				returnValue = _Interface.InvokeCommandOnSelected(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Command"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean InvokeCommandOnFolder(SalString Command, ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				string param1 = (string)Command;
				returnValue = _Interface.InvokeCommandOnFolder(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetPath(ref SalString returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Path;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetPath(SalString rhs)
		{
			#region Actions
			try
			{
				string param1 = (string)rhs;
				_Interface.Path = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the ShellBrowser_TJamShellFolder constants</param>
		/// <returns></returns>
		public SalBoolean PropGetSpecialFolder(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.SpecialFolder;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the ShellBrowser_TJamShellFolder constants</param>
		/// <returns></returns>
		public SalBoolean PropSetSpecialFolder(SalNumber rhs)
		{
			#region Actions
			try
			{
				int param1 = (int)rhs;
				_Interface.SpecialFolder = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the ShellBrowser_TxJamViewStyle constants</param>
		/// <returns></returns>
		public SalBoolean PropGetViewStyle(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ViewStyle;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the ShellBrowser_TxJamViewStyle constants</param>
		/// <returns></returns>
		public SalBoolean PropSetViewStyle(SalNumber rhs)
		{
			#region Actions
			try
			{
				int param1 = (int)rhs;
				_Interface.ViewStyle = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetAutoSize(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.AutoSize;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetAutoSize(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.AutoSize = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the ShellBrowser_TBorderStyle constants</param>
		/// <returns></returns>
		public SalBoolean PropGetBorderStyle(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.BorderStyle;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs">Important: this is one of the ShellBrowser_TBorderStyle constants</param>
		/// <returns></returns>
		public SalBoolean PropSetBorderStyle(SalNumber rhs)
		{
			#region Actions
			try
			{
				int param1 = (int)rhs;
				_Interface.BorderStyle = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetEnabled(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Enabled;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetEnabled(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.Enabled = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetFont(stdole_Font returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Font;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetFont(stdole_Font rhs)
		{
			#region Actions
			try
			{
				stdole_Font param1 = (stdole_Font)rhs;
				_Interface.Font = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetFontByRef(stdole_Font rhs)
		{
			#region Actions
			try
			{
				stdole_Font param1 = (stdole_Font)rhs;
				_Interface.FontByRef = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetVisible(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Visible;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetVisible(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.Visible = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean InitiateAction()
		{
			#region Actions
			try
			{
				_Interface.InitiateAction();
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="IsSubComponent"></param>
		/// <returns></returns>
		public SalBoolean SetSubComponent(SalBoolean IsSubComponent)
		{
			#region Actions
			try
			{
				bool param1 = (bool)IsSubComponent;
				_Interface.SetSubComponent(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetShellLink(ShellBrowser_IJamShellLinkX rhs)
		{
			#region Actions
			try
			{
				ShellBrowser_IJamShellLinkX.COMInterface param1 = (ShellBrowser_IJamShellLinkX.COMInterface)rhs._Interface;
				_Interface.ShellLink = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Value"></param>
		/// <returns></returns>
		public SalBoolean SetShellLink(ShellBrowser_IJamShellLinkX Value)
		{
			#region Actions
			try
			{
				ShellBrowser_IJamShellLinkX.COMInterface param1 = (ShellBrowser_IJamShellLinkX.COMInterface)Value._Interface;
				_Interface.SetShellLink(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean GetDelphiControl(SalVariant returnValue)
		{
			#region Actions
			try
			{
				returnValue.Value = _Interface.GetDelphiControl();
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Index"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetItems(SalNumber Index, ref SalString returnValue)
		{
			#region Actions
			try
			{
				int param1 = (int)Index;
				returnValue = _Interface.Items(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Path"></param>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean IndexOf(SalString Path, ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				string param1 = (string)Path;
				returnValue = _Interface.IndexOf(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetFilter(ref SalString returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Filter;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetFilter(SalString rhs)
		{
			#region Actions
			try
			{
				string param1 = (string)rhs;
				_Interface.Filter = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetThumbnails(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Thumbnails;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetThumbnails(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.Thumbnails = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetShowFiles(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ShowFiles;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetShowFiles(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.ShowFiles = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetShowHidden(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ShowHidden;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetShowHidden(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.ShowHidden = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetShowNetHood(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ShowNetHood;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetShowNetHood(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.ShowNetHood = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetShowRecycleBin(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ShowRecycleBin;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="rhs"></param>
		/// <returns></returns>
		public SalBoolean PropSetShowRecycleBin(SalBoolean rhs)
		{
			#region Actions
			try
			{
				bool param1 = (bool)rhs;
				_Interface.ShowRecycleBin = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetSelectedIndex(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.SelectedIndex;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Index"></param>
		/// <returns></returns>
		public SalBoolean SelectItem(SalNumber Index)
		{
			#region Actions
			try
			{
				int param1 = (int)Index;
				_Interface.SelectItem(param1);
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean SelectAll()
		{
			#region Actions
			try
			{
				_Interface.SelectAll();
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// This is the real COM interface declaration.
		/// </summary>
		[Guid("08766DE8-90E2-417F-88A3-CD99EADD5235")]
		[InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch)]
		public interface COMInterface
		{
			void FullRefresh();
			bool GoUp();
			string GetFullPath(int Index);
			int IsSpecialObject(int Index);
			bool IsFolder(int Index);
			void MoveInHistory(int Delta);
			bool IsMovePossible(int Delta);
			bool CreateDir(string Name, bool EditMode);
			bool InvokeCommandOnSelected(string Command);
			bool InvokeCommandOnFolder(string Command);
			string Path { get; set; }
			int SpecialFolder { get; set; }
			int ViewStyle { get; set; }
			bool AutoSize { get; set; }
			int BorderStyle { get; set; }
			bool Enabled { get; set; }
			stdole_Font Font { get; set; }
			stdole_Font FontByRef { set; }
			bool Visible { get; set; }
			void InitiateAction();
			void SetSubComponent(bool IsSubComponent);
			ShellBrowser_IJamShellLinkX.COMInterface ShellLink { set; }
			void SetShellLink(ShellBrowser_IJamShellLinkX.COMInterface Value);
			object GetDelphiControl();
			string Items(int Index);
			int IndexOf(string Path);
			string Filter { get; set; }
			bool Thumbnails { get; set; }
			bool ShowFiles { get; set; }
			bool ShowHidden { get; set; }
			bool ShowNetHood { get; set; }
			bool ShowRecycleBin { get; set; }
			int SelectedIndex { get; }
			void SelectItem(int Index);
			void SelectAll();
		}
	}
}
