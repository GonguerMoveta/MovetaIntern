// <ppj name="Moveta.Intern" date="1/29/2024 3:39:48 AM" id="F4EC85BAD2BF79AC25C9F8643540E90F9BE1DAF0"/>
// ======================================================================================================
// This code was generated by the Ice Porter(tm) Tool version 4.8.15.0
// Ice Porter is part of The Porting Project (PPJ) by Ice Tea Group, LLC.
// The generated code is not guaranteed to be accurate and to compile without
// manual modifications.
// 
// ICE TEA GROUP LLC SHALL IN NO EVENT BE LIABLE FOR ANY DAMAGES WHATSOEVER
// (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS
// INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER LOSS OF ANY KIND)
// ARISING OUT OF THE USE OR INABILITY TO USE THE GENERATED CODE, WHETHER
// DIRECT, INDIRECT, INCIDENTAL, CONSEQUENTIAL, SPECIAL OR OTHERWISE, REGARDLESS
// OF THE FORM OF ACTION, EVEN IF ICE TEA GROUP LLC HAS BEEN ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGES.
// =====================================================================================================
using System;
using System.Text;
using System.Drawing;
using System.Diagnostics;
using System.Collections;
using System.Windows.Forms;
using System.ComponentModel;
using System.Runtime.InteropServices;
using MT;
using PPJ.Runtime;
using PPJ.Runtime.Com;
using PPJ.Runtime.Sql;
using PPJ.Runtime.Vis;
using PPJ.Runtime.Windows;
using PPJ.Runtime.Windows.QO;
using PPJ.Runtime.XSal;

namespace Moveta.Intern
{
	
	/// <summary>
	/// </summary>
	public class Tx4oleLib__DTXRULER : SalObject
	{
		
		/// <summary>
		/// This is the real COM interface.
		/// </summary>
		internal COMInterface _Interface = null;
		
		#region Constructors/Destructors
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Tx4oleLib__DTXRULER(){ }
		public Tx4oleLib__DTXRULER(COMInterface obj) : this()
		{
			this._Interface = obj;
		}
		#endregion
		
		/// <summary>
		/// </summary>
		/// <returns></returns>
		public SalBoolean AboutBox()
		{
			#region Actions
			try
			{
				_Interface.AboutBox();
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="ScaleUnits"></param>
		/// <returns></returns>
		public SalBoolean PropSetScaleUnits(SalNumber ScaleUnits)
		{
			#region Actions
			try
			{
				short param1 = (short)ScaleUnits;
				_Interface.ScaleUnits = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetScaleUnits(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ScaleUnits;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Enabled"></param>
		/// <returns></returns>
		public SalBoolean PropSetEnabled(SalBoolean Enabled)
		{
			#region Actions
			try
			{
				bool param1 = (bool)Enabled;
				_Interface.Enabled = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetEnabled(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Enabled;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="BorderStyle"></param>
		/// <returns></returns>
		public SalBoolean PropSetBorderStyle(SalNumber BorderStyle)
		{
			#region Actions
			try
			{
				short param1 = (short)BorderStyle;
				_Interface.BorderStyle = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetBorderStyle(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.BorderStyle;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="hWnd"></param>
		/// <returns></returns>
		public SalBoolean PropSethWnd(SalNumber hWnd)
		{
			#region Actions
			try
			{
				int param1 = (int)hWnd;
				_Interface.hWnd = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGethWnd(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.hWnd;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Language"></param>
		/// <returns></returns>
		public SalBoolean PropSetLanguage(SalNumber Language)
		{
			#region Actions
			try
			{
				short param1 = (short)Language;
				_Interface.Language = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetLanguage(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Language;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="ResourceFile"></param>
		/// <returns></returns>
		public SalBoolean PropSetResourceFile(SalString ResourceFile)
		{
			#region Actions
			try
			{
				string param1 = (string)ResourceFile;
				_Interface.ResourceFile = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetResourceFile(ref SalString returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.ResourceFile;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Appearance">Important: this is one of the Tx4oleLib_AppearanceStyles constants</param>
		/// <returns></returns>
		public SalBoolean PropSetAppearance(SalNumber Appearance)
		{
			#region Actions
			try
			{
				int param1 = (int)Appearance;
				_Interface.Appearance = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the Tx4oleLib_AppearanceStyles constants</param>
		/// <returns></returns>
		public SalBoolean PropGetAppearance(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Appearance;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="Direction">Important: this is one of the Tx4oleLib_RulerBarDirection constants</param>
		/// <returns></returns>
		public SalBoolean PropSetDirection(SalNumber Direction)
		{
			#region Actions
			try
			{
				int param1 = (int)Direction;
				_Interface.Direction = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue">Important: this is one of the Tx4oleLib_RulerBarDirection constants</param>
		/// <returns></returns>
		public SalBoolean PropGetDirection(ref SalNumber returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.Direction;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="EnablePageMargins"></param>
		/// <returns></returns>
		public SalBoolean PropSetEnablePageMargins(SalBoolean EnablePageMargins)
		{
			#region Actions
			try
			{
				bool param1 = (bool)EnablePageMargins;
				_Interface.EnablePageMargins = param1;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// </summary>
		/// <param name="returnValue"></param>
		/// <returns></returns>
		public SalBoolean PropGetEnablePageMargins(ref SalBoolean returnValue)
		{
			#region Actions
			try
			{
				returnValue = _Interface.EnablePageMargins;
				return true;
			}
			catch (COMException ex)
			{
				return HandleException(ex);
			}
			#endregion
		}
		
		/// <summary>
		/// This is the real COM interface declaration.
		/// </summary>
		[Guid("26BD990F-E7D0-11DD-AA41-0013D350667C")]
		[InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch)]
		public interface COMInterface
		{
			void AboutBox();
			int ScaleUnits { get; set; }
			bool Enabled { get; set; }
			int BorderStyle { get; set; }
			int hWnd { get; set; }
			int Language { get; set; }
			string ResourceFile { get; set; }
			int Appearance { get; set; }
			int Direction { get; set; }
			bool EnablePageMargins { get; set; }
		}
	}
}
